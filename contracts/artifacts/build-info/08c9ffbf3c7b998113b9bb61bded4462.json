{
	"id": "08c9ffbf3c7b998113b9bb61bded4462",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"MLSAGVerify.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\nimport \"./Debuggable.sol\";\r\nimport \"./ECMathInterface.sol\";\r\n\r\ncontract MLSAGVerify is ECMathInterface {\r\n\t//Contstructor Function - Initializes Prerequisite Contract(s)\r\n\tconstructor(address ecMathAddr) ECMathInterface(ecMathAddr) public {}\r\n    \r\n    //Struct for reducing stack length\r\n    struct Variables {\r\n        uint256 m;              //Number of keys (# of rings)\r\n        uint256 n;              //Number of ring members (per ring)\r\n        uint256 i;              //for use in \"for\" loop (i = {0, ..., m})\r\n        uint256 j;              //for use in \"for\" loop (j = {0, ..., n})\r\n        uint256 ck;             //Current hash input for ring segment\r\n        uint256 index;          //General purpose uint256 for picking index of arrays\r\n        uint256[2] point1;      //Expanded EC Point for general purpose use\r\n        uint256[2] point2;      //Expanded EC Point for general purpose use\r\n        uint256[2] keyImage;    //Expanded EC Point representing key image\r\n    }\r\n    \r\n    //Non-linkable Ring Signature Functions\r\n    function RingHashFunction(uint256 msgHash, uint256[2] point)\r\n        public view returns (uint256 h)\r\n    {\r\n        return uint256(keccak256(msgHash, point[0], point[1])) % ecMath.GetNCurve();\r\n    }\r\n    \r\n    function StartRing_NoHash(uint256 alpha)\r\n        public constant returns (uint256[2] Pout)\r\n    {\r\n        Pout = ecMath.Multiply(ecMath.GetG1(), alpha);\r\n    }\r\n    \r\n    function StartRing(uint256 msgHash, uint256 alpha)\r\n        public constant returns (uint256 ckp)\r\n    {\r\n        ckp = RingHashFunction(msgHash, StartRing_NoHash(alpha));\r\n    }\r\n    \r\n    function CalculateRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P)\r\n        public constant returns (uint256[2] Pout)\r\n    {\r\n        uint256[2] memory temp;\r\n        Pout = ecMath.Multiply(ecMath.GetG1(), sk);\r\n        temp = ecMath.Multiply(P, ck);\r\n        Pout = ecMath.Add(Pout, temp);\r\n    }\r\n    \r\n    function CalculateRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P)\r\n        public constant returns (uint256 ckp)\r\n    {\r\n        uint256[2] memory temp;\r\n        temp = CalculateRingSegment_NoHash(ck, sk, P);\r\n        ckp = RingHashFunction(msgHash, temp);\r\n    }\r\n    \r\n    //CompleteRing = (alpha - c*xk) % N\r\n    //Note: usable in both linkable and non-linkable rings.\r\n    function CompleteRing(uint256 alpha, uint256 c, uint256 xk)\r\n        public view returns (uint256 s)\r\n    {\r\n        s = mulmod(c, xk, ecMath.GetNCurve());\r\n        s = ecMath.GetNCurve() - s;\r\n        s = addmod(alpha, s, ecMath.GetNCurve());\r\n    }\r\n    \r\n    //Linkable Ring Signature Functions\r\n    function LinkableRingHashFunction(uint256 msgHash, uint256[2] left, uint256[2] right)\r\n        public view returns (uint256 h)\r\n    {\r\n        return uint256(keccak256(msgHash, left[0], left[1], right[0], right[1])) % ecMath.GetNCurve();\r\n    }\r\n    \r\n    function CalculateKeyImageFromPrivKey(uint256 pk)\r\n        public constant returns (uint256[2] I)\r\n    {\r\n        uint256[2] memory temp;\r\n        temp = ecMath.Multiply(ecMath.GetG1(), pk);\r\n        temp = ecMath.HashToPoint(temp);\r\n        temp = ecMath.Multiply(temp, pk);\r\n        I = temp;\r\n    }\r\n    \r\n    function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r\n        public constant returns (uint256[2] Lout, uint256[2] Rout)\r\n    {\r\n        Lout = ecMath.Multiply(ecMath.GetG1(), alpha);\r\n        \r\n        Rout = ecMath.HashToPoint(P);\r\n        Rout = ecMath.Multiply(Rout, alpha);\r\n    }\r\n    \r\n    function StartLinkableRing(uint256 msgHash, uint256 alpha, uint256[2] P)\r\n        public constant returns (uint256 ckp)\r\n    {\r\n        uint256[2] memory left;\r\n        uint256[2] memory right;\r\n        (left, right) = StartLinkableRing_NoHash(alpha, P);\r\n        ckp = LinkableRingHashFunction(msgHash, left, right);\r\n    }\r\n    \r\n    function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r\n        public constant returns (uint256[2] Lout, uint256[2] Rout)\r\n    {\r\n        uint256[2] memory temp;\r\n        Lout = ecMath.Multiply(ecMath.GetG1(), sk);\r\n        temp = ecMath.Multiply(P, ck);\r\n        Lout = ecMath.Add(Lout, temp);\r\n        \r\n        Rout = ecMath.HashToPoint(P);\r\n        Rout = ecMath.Multiply(Rout, sk);\r\n        temp = ecMath.Multiply(I, ck);\r\n        Rout = ecMath.Add(Rout, temp);\r\n    }\r\n    \r\n    function CalculateLinkableRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r\n        public constant returns (uint256 ckp)\r\n    {\r\n        uint256[2] memory left;\r\n        uint256[2] memory right;\r\n        (left, right) = CalculateLinkableRingSegment_NoHash(ck, sk, P, I);\r\n        ckp = LinkableRingHashFunction(msgHash, left, right);\r\n    }\r\n    \r\n    //Calculate keccak256 of given array\r\n    function Keccak256OfArray(uint256[] array)\r\n        public pure returns (uint256 out)\r\n    {\r\n        uint256 len = array.length;\r\n        uint256[1] memory temp;\r\n        \r\n        //Construct c1 (store in c[0])\r\n    \tassembly {\r\n    \t    let p := mload(0x40)\r\n    \t    mstore(p, add(mul(len, 0x20), 0x20)) //0x20 = 32; 32 bytes for array length + 32 bytes per uint256\r\n    \t    mstore(temp, keccak256(array, mload(p)))\r\n    \t}\r\n    \t\r\n    \tout = temp[0];\r\n    }\r\n    \r\n\t//----------------------------\r\n\t//MSLAG Verification Functions\r\n\t//----------------------------\r\n\t\r\n    //Verify SAG (Spontaneous Ad-hoc Group Signature, non-linkable)\r\n    //msgHash = hash of message signed by ring signature\r\n    //P = {P1x, P1y, P2x, P2y, ..., Pnx, Pny}\r\n    //signature = {c1, s1, s2, ... , sn}\r\n    function VerifySAG(uint256 msgHash, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        //Check input array lengths\r\n        Variables memory v;\r\n        if (P.length % 2 != 0) return false;\r\n        v.n = (P.length / 2);\r\n        if (signature.length != (v.n+1)) return false;\r\n        \r\n        v.ck = signature[0];                            //extract c1\r\n        for (v.i = 0; v.i < v.n; v.i++) {\r\n            (v.point1[0], v.point1[1]) = (P[2*v.i], P[2*v.i+1]); //extract public key\r\n            v.ck = CalculateRingSegment(msgHash, v.ck, signature[v.i+1], v.point1);\r\n        }\r\n        \r\n        //See if c1 matches the original c1\r\n        success = (v.ck == signature[0]);\r\n    }\r\n    \r\n    //Verify SAG (Spontaneous Ad-hoc Group Signature, non-linkable)\r\n    //Using compressed EC points\r\n    //msgHash = hash of message signed by ring signature\r\n    //P = {P1, P2, ... , Pn}\r\n    //signature = {c1, s1, s2, ... , sn}\r\n    function VerifySAG_Compressed(uint256 msgHash, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        uint256[2] memory temp;\r\n        uint256[] memory P_uncomp = new uint256[](P.length*2);\r\n        \r\n        for (uint256 i = 0; i < P.length; i++) {\r\n            temp = ecMath.ExpandPoint(P[i]);\r\n            P_uncomp[2*i] = temp[0];\r\n            P_uncomp[2*i+1] = temp[1];\r\n        }\r\n        \r\n        return VerifySAG(msgHash, P_uncomp, signature);\r\n    }\r\n    \r\n    //Verify LSAG (Linkable Spontaneous Ad-hoc Group Signature)\r\n    //msgHash = hash of message signed by ring signature\r\n    //I = {Ix, Iy}\r\n    //P = {P1x, P1y, P2x, P2y, ..., Pnx, Pny}\r\n    //signature = {c1, s1, s2, ..., sn}\r\n    function VerifyLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        //Check input array lengths\r\n        Variables memory v;\r\n        if (I.length != 2) return false;\r\n        if (P.length % 2 != 0) return false;\r\n        v.n = (P.length / 2);\r\n        if (signature.length != (v.n+1)) return false;\r\n        \r\n        v.ck = signature[0];                   //extract c1\r\n        (v.keyImage[0], v.keyImage[1]) = (I[0], I[1]);  //extract key image\r\n        \r\n        for (v.i = 0; v.i < v.n; v.i++) {\r\n            (v.point1[0], v.point1[1]) = (P[2*v.i], P[2*v.i+1]); //extract public key\r\n            v.ck = CalculateLinkableRingSegment(msgHash, v.ck, signature[v.i+1], v.point1, v.keyImage);\r\n        }\r\n        \r\n        //See if c1 matches the original c1\r\n        success = (v.ck == signature[0]);\r\n    }\r\n    \r\n    //Verify LSAG (Linkable Spontaneous Ad-hoc Group Signature)\r\n    //Using compressed EC points\r\n    //msgHash = hash of message signed by ring signature\r\n    //I = key image (compressed EC point)\r\n    //P = {P1, P2, ... , Pn}\r\n    //signature = {c1, s1, s2, ... , sn}\r\n    function VerifyLSAG_Compressed(uint256 msgHash, uint256 I, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        uint256[2] memory temp;\r\n        uint256[] memory P_uncomp = new uint256[](P.length*2);\r\n        uint256[] memory I_uncomp = new uint256[](2);\r\n        \r\n        uint256 i;\r\n        for (i = 0; i < P.length; i++) {\r\n            temp = ecMath.ExpandPoint(P[i]);\r\n            P_uncomp[2*i] = temp[0];\r\n            P_uncomp[2*i+1] = temp[1];\r\n        }\r\n        \r\n        temp = ecMath.ExpandPoint(I);\r\n        (I_uncomp[0], I_uncomp[1]) = (temp[0], temp[1]);\r\n        \r\n        return VerifyLSAG(msgHash, I_uncomp, P_uncomp, signature);\r\n    }\r\n    \r\n    //Verify MSAG (Multilayered Spontaneous Ad-hoc Group Signature, non-linkable)\r\n    //msgHash = hash of message signed by ring signature\r\n    //P = { P11x, P11y, P12x, P12y, ..., P1mx, P1my,\r\n    //      P21x, P21y, P22x, P22y, ..., P2mx, P2my,\r\n    //      Pn1x, P1ny, Pn2x, P2ny, ..., Pnmx, Pnmy }\r\n    //signature = {c1,  s11, s12, ..., s1m,\r\n    //                  s21, s22, ..., s2m,\r\n    //                  sn1, sn2, ..., snm  }\r\n    function VerifyMSAG(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        //Check input array lengths\r\n        Variables memory v;\r\n        v.m = m;\r\n        if (P.length % (2*v.m) != 0) return false;\r\n        \r\n        v.n = P.length / (2*v.m);\r\n        if (signature.length != (v.m*v.n+1)) return false;\r\n        \r\n        //Allocate array for calculating c1\r\n        uint256[] memory c = new uint256[](2*v.m+1);\r\n        c[0] = msgHash;\r\n        \r\n        for (v.i = 0; v.i < v.m; v.i++) {\r\n            v.ck = signature[0];                //extract c1\r\n            \r\n            //Calculate (n-1) ring segments (output scalar ck)\r\n            for (v.j = 0; v.j < (v.n-1); v.j++) {\r\n                v.index = v.m*v.j + v.i;\r\n                (v.point1[0], v.point1[1]) = (P[2*v.index], P[2*v.index+1]); //extract public key\r\n                v.ck = CalculateRingSegment(msgHash, v.ck, signature[v.index+1], v.point1);\r\n            }\r\n            \r\n            //Calculate last ring segment (output EC point input for c1 calculation)\r\n            v.index = v.m*(v.n-1) + v.i;\r\n            (v.point1[0], v.point1[1]) = (P[2*v.index], P[2*v.index+1]); \r\n            v.point1 = CalculateRingSegment_NoHash(v.ck, signature[v.index+1], v.point1);\r\n            \r\n            //Store input to c1 calculation\r\n            v.index = v.i*2+1;\r\n            c[v.index] = v.point1[0];\r\n            c[v.index+1] = v.point1[1];\r\n        }\r\n        \r\n        //Calculate c1 from c point array = {msgHash, P1x, P1y, P2x, P2y, , ... , Pmx, Pmy}\r\n        v.ck = Keccak256OfArray(c);\r\n        \r\n        //See if c1 matches the original c1\r\n        success = (v.ck == signature[0]);\r\n    }\r\n    \r\n    //Verify MSAG (Multilayered Spontaneous Ad-hoc Group Signature, non-linkable)\r\n    //Using compressed EC points\r\n    //msgHash = hash of message signed by ring signature\r\n    //P = { P11, P12, ..., P1m,\r\n    //      P21, P22, ..., P2m,\r\n    //      Pn1, Pn2, ..., Pnm }\r\n    //signature = {c1,  s11, s12, ..., s1m,\r\n    //                  s21, s22, ..., s2m,\r\n    //                  sn1, sn2, ..., snm  }\r\n    function VerifyMSAG_Compressed(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        uint256[2] memory temp;\r\n        uint256[] memory P_uncomp = new uint256[](P.length*2);\r\n        \r\n        uint256 i;\r\n        for (i = 0; i < P.length; i++) {\r\n            temp = ecMath.ExpandPoint(P[i]);\r\n            P_uncomp[2*i] = temp[0];\r\n            P_uncomp[2*i+1] = temp[1];\r\n        }\r\n        \r\n        return VerifyMSAG(m, msgHash, P_uncomp, signature);\r\n    }\r\n    \r\n    //Verify MLSAG (Multilayered Linkable Spontaneous Ad-hoc Group Signature)\r\n    //msgHash = hash of message signed by ring signature\r\n    //I = { I1x, I1y, I2x, I2y, ..., Imx, Imy }\r\n    //P = { P11x, P11y, P12x, P12y, ..., P1mx, P1my,\r\n    //      P21x, P21y, P22x, P22y, ..., P2mx, P2my,\r\n    //      Pn1x, P1ny, Pn2x, P2ny, ..., Pnmx, Pnmy }\r\n    //signature = {c1,  s11, s12, ..., s1m,\r\n    //                  s21, s22, ..., s2m,\r\n    //                  sn1, sn2, ..., snm  }\r\n    function VerifyMLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        //Check input array lengths\r\n        Variables memory v;\r\n        if(I.length % 2 != 0) return false;\r\n        v.m = (I.length / 2);\r\n        if (P.length % (2*v.m) != 0) return false;\r\n        \r\n        v.n = P.length / (2*v.m);\r\n        if (signature.length != (v.m*v.n+1)) return false;\r\n        \r\n        //Allocate array for calculating c1\r\n        uint256[] memory c = new uint256[](4*v.m+1);\r\n        c[0] = msgHash;\r\n        \r\n        for (v.i = 0; v.i < v.m; v.i++) {\r\n            v.ck = signature[0];        //extract c1\r\n            v.keyImage = [I[2*v.i], I[2*v.i+1]]; //extract key image\r\n            \r\n            //Calculate (n-1) ring segments (output scalar ck)\r\n            for (v.j = 0; v.j < (v.n-1); v.j++) {\r\n                v.index = v.m*v.j + v.i;\r\n                v.point1 = [P[2*v.index], P[2*v.index+1]]; //extract public key\r\n                v.ck = CalculateLinkableRingSegment(msgHash, v.ck, signature[v.index+1], v.point1, v.keyImage);\r\n            }\r\n            \r\n            //Calculate last ring segment (output EC point input for c1 calculation)\r\n            v.index = v.m*(v.n-1) + v.i;\r\n            v.point1 = [P[2*v.index], P[2*v.index+1]]; //extract public key\r\n            (v.point1, v.point2) = CalculateLinkableRingSegment_NoHash(v.ck, signature[v.index+1], v.point1, v.keyImage);\r\n            \r\n            //Store input to c1 calculation\r\n            v.index = v.i*4+1;\r\n            c[v.index] = v.point1[0];\r\n            c[v.index+1] = v.point1[1];\r\n            c[v.index+2] = v.point2[0];\r\n            c[v.index+3] = v.point2[1];\r\n        }\r\n        \r\n        //Calculate c1 from c point array = {msgHash, L1x, L1y, R1x, R1y, L2x, L2y, R2x, R2y, ... , Lmx, Lmy, Rmx, Rmy}\r\n        v.ck = Keccak256OfArray(c);\r\n        \r\n        //See if c1 matches the original c1\r\n        success = (v.ck == signature[0]);\r\n    }\r\n    \r\n    //Verify MLSAG (Multilayered Linkable Spontaneous Ad-hoc Group Signature)\r\n    //Using compressed EC points\r\n    //msgHash = hash of message signed by ring signature\r\n    //I = { I1, I2, ..., Im }\r\n    //P = { P11, P12, ..., P1m,\r\n    //      P21, P22, ..., P2m,\r\n    //      Pn1, Pn2, ..., Pnm }\r\n    //signature = {c1, s11, s12, ..., s1m, s21, s22, ..., s2m, ..., sn1, sn2, ..., snm}\r\n    function VerifyMLSAG_Compressed(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r\n        public constant returns (bool success)\r\n    {\r\n        uint256[2] memory temp;\r\n        uint256[] memory P_uncomp = new uint256[](P.length*2);\r\n        uint256[] memory I_uncomp = new uint256[](I.length*2);\r\n        \r\n        uint256 i;\r\n        for (i = 0; i < P.length; i++) {\r\n            temp = ecMath.ExpandPoint(P[i]);\r\n            P_uncomp[2*i] = temp[0];\r\n            P_uncomp[2*i+1] = temp[1];\r\n        }\r\n        \r\n        for (i = 0; i < I.length; i++) {\r\n            temp = ecMath.ExpandPoint(I[i]);\r\n            I_uncomp[2*i] = temp[0];\r\n            I_uncomp[2*i+1] = temp[1];\r\n        }\r\n        \r\n        return VerifyMLSAG(msgHash, I_uncomp, P_uncomp, signature);\r\n    }\r\n}\r\n\r\n"
			},
			"ECMathInterface.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\nimport \"./Debuggable.sol\";\r\n\r\n//Contract interface for calling ECMath contract stored else-where on chain\r\ncontract ECMath {\r\n\t//Base EC Parameters\r\n\tfunction GetG1() public view returns (uint256[2]);\r\n\tfunction GetH() public view returns (uint256[2]);\r\n\tfunction GetInfinity() public view returns (uint256[2]);\r\n\tfunction GetNCurve() public pure returns (uint256);\r\n\tfunction GetPCurve() public pure returns (uint256);\r\n\tfunction GetGiHi(uint256 N) public constant returns (uint256[], uint256[]);\r\n\tfunction GetGiHiLength() public view returns (uint256);\r\n\t\r\n\t//Base EC Functions\r\n\tfunction Negate(uint256[2] p1) public pure returns (uint256[2] p2);\r\n\tfunction Equals(uint256[2] p1, uint256[2] p2) public pure returns (bool);\r\n\tfunction Add(uint256[2] p0, uint256[2] p1) public constant returns (uint256[2] p2);\r\n\tfunction Subtract(uint256[2] p0, uint256[2] p1) public constant returns (uint256[2] p2);\r\n\tfunction Multiply(uint256[2] p0, uint256 s) public constant returns (uint256[2] p1);\r\n\t\r\n\t//Shortcut Functions\r\n\tfunction MultiplyG1(uint256 s) public constant returns (uint256[2] p0);\r\n\tfunction MultiplyH(uint256 s) public constant returns (uint256[2] p0);\r\n    function AddMultiply(uint256[2] p_add, uint256[2] p_mul, uint256 s) public constant returns (uint256[2] p0); //Returns p0 = p_add + s*p_mul\r\n\tfunction AddMultiplyG1(uint256[2] p_add, uint256 s) public constant returns (uint256[2] p0); //Returns p0 = p_add + s*G1\r\n    function AddMultiplyH(uint256[2] p_add, uint256 s) public constant returns (uint256[2] p0); //Returns p0 = p_add + s*H\r\n    function CommitG1H(uint256 s_G1, uint256 s_H) public constant returns (uint256[2] p0); //Returns s_G1*G1 + s_H*H\r\n\t\r\n\t//Vector Functions\r\n\tfunction VectorScale(uint256[] X, uint256 s) public constant returns (uint256[] Z);\r\n\tfunction VectorAdd(uint256[] X, uint256[] Y) public constant returns (uint256[] Z);\r\n\tfunction VectorMul(uint256[] X, uint256[] s) public constant returns (uint256[] Z);\r\n\t\r\n\t//Returns s0*P0 + s1*P1 + ... + sk*Pk\r\n    function MultiExp(uint256[] P, uint256[] s, uint256 start, uint256 end) public constant returns (uint256[2] Pout);\r\n\t\r\n\t//Returns Pin + s0*P0 + s1*P1 + ... + sk*Pk\r\n\tfunction AddMultiExp(uint256[2] Pin, uint256[] P, uint256[] s, uint256 start, uint256 end) public constant returns (uint256[2] Pout);\r\n\t\r\n\t//Returns px = x[0]*X[0] + x[1]*X[1] + ... + x[n-1]*X[n-1]\r\n    //    and py = y[0]*Y[0] + y[1]*Y[1] + ... + y[n-1]*Y[n-1]\r\n    function CommitAB(uint256[] X, uint256[] Y, uint256[] x, uint256[] y) public constant returns (uint256[2] px, uint256[2] py);\r\n        \r\n\t//Point Compression and Expansion Functions\r\n\tfunction CompressPoint(uint256[2] Pin) public pure returns (uint256 Pout);\r\n\tfunction EvaluateCurve(uint256 x) public constant returns (uint256 y, bool onCurve);\r\n\tfunction ExpandPoint(uint256 Pin) public constant returns (uint256[2] Pout);\r\n\t\r\n\t//Address Functions\r\n\tfunction GetAddress(uint256[2] PubKey) public pure returns (address addr);    \r\n    function GetPublicKeyFromPrivateKey(uint256 privatekey) public constant returns (uint256[2] PubKey);    \r\n    function GetAddressFromPrivateKey(uint256 privatekey) public constant returns (address addr);\r\n\r\n    //Return H = keccak256(p)\r\n    function HashOfPoint(uint256[2] point) public pure returns (uint256 h);\r\n    \r\n\t//Return H = alt_bn128 evaluated at keccak256(p)\r\n    function HashToPoint(uint256[2] p) public constant returns (uint256[2] h);\r\n}\r\n\r\n//Example Interface Contract\r\n//This contract provieds useful functions for utilizing a ECMath contract stored else-where on chain\r\ncontract ECMathInterface is Debuggable {\r\n    //Prerequisite Contract(s)\r\n\tECMath ecMath;\r\n\t\r\n\tevent ContractAddressChanged (string _name, address _new);\r\n\t\r\n\t//Prerequisite Contract Meta Functions\r\n\tfunction ECMath_GetAddress() public constant returns (address) {\r\n\t    return address(ecMath);\r\n\t}\r\n\t\r\n\tfunction ECMath_GetCodeSize() public constant returns (uint) {\r\n\t    uint code_size;\r\n\t\taddress addr = ECMath_GetAddress();\r\n\t\tassembly {\r\n\t\t    code_size := extcodesize(addr)\r\n\t\t}\r\n\t\t\r\n\t\treturn code_size;\r\n\t}\r\n\t\r\n\tfunction ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r\n\t\t//Check code size at old address (only allow reassignment on contract deletion)\r\n\t\t//assert(ECMath_GetCodeSize() == 0);\r\n\t\t\r\n\t\tecMath = ECMath(ecMathAddr);\r\n\t\temit ContractAddressChanged(\"ECMath\", ecMathAddr);\r\n\t}\r\n\t\r\n\tmodifier requireECMath {\r\n\t    require(ECMath_GetCodeSize() > 0);\r\n\t    _;\r\n\t}\r\n\t\r\n\t//Contstructor Function - Initializes Prerequisite Contract(s)\r\n\tconstructor(address ecMathAddr) public {\r\n\t    ECMath_ChangeAddress(ecMathAddr);\r\n\t}\r\n}"
			},
			"Debuggable.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\ncontract Debuggable {\r\n    //Debug Code\r\n    address public owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier ownerOnly {\r\n        if ( (msg.sender != owner) && (owner != 0) ) revert();\r\n        _;\r\n    }\r\n    \r\n\tfunction Kill() public ownerOnly {\r\n    \tselfdestruct(msg.sender);\r\n\t}\r\n\t\r\n\tevent DebugEvent(string marker, uint256 data);\r\n\tevent DebugEvent2(string marker, uint256[] data);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Debuggable.sol": {
				"Debuggable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "Kill",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "marker",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "data",
									"type": "uint256"
								}
							],
							"name": "DebugEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "marker",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "data",
									"type": "uint256[]"
								}
							],
							"name": "DebugEvent2",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Debuggable.sol\":28:465  contract Debuggable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Debuggable.sol\":106:164  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Debuggable.sol\":106:164  constructor() public {\r... */\n  pop\n    /* \"Debuggable.sol\":146:156  msg.sender */\n  caller\n    /* \"Debuggable.sol\":138:143  owner */\n  0x0\n  dup1\n    /* \"Debuggable.sol\":138:156  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Debuggable.sol\":28:465  contract Debuggable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Debuggable.sol\":28:465  contract Debuggable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xbe26733c\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":73:93  address public owner */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"Debuggable.sol\":73:93  address public owner */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"Debuggable.sol\":73:93  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n    tag_9:\n        /* \"Debuggable.sol\":226:231  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:222  msg.sender */\n      caller\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n      dup1\n      iszero\n      tag_11\n      jumpi\n      pop\n        /* \"Debuggable.sol\":246:247  0 */\n      0x0\n        /* \"Debuggable.sol\":237:242  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":237:247  owner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n    tag_11:\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n      iszero\n      tag_12\n      jumpi\n        /* \"Debuggable.sol\":251:259  revert() */\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n    tag_12:\n        /* \"Debuggable.sol\":342:352  msg.sender */\n      caller\n        /* \"Debuggable.sol\":329:353  selfdestruct(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa165627a7a72305820d06ecf519f78c0d6ee0f8af0d70730fa00ac2da4eeac0f6a22561d2aec7c0e2d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101c8806100606000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063be26733c146100a8575b600080fd5b34801561005d57600080fd5b506100666100bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b506100bd6100e4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610179575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561018357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a72305820d06ecf519f78c0d6ee0f8af0d70730fa00ac2da4eeac0f6a22561d2aec7c0e2d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C8 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xBE26733C EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x179 JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd0 PUSH15 0xCF519F78C0D6EE0F8AF0D70730FA00 0xac 0x2d LOG4 0xee 0xac 0xf PUSH11 0x22561D2AEC7C0E2D002900 ",
							"sourceMap": "28:437:0:-;;;106:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:58:0;146:10;138:5;;:18;;;;;;;;;;;;;;;;;;28:437;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063be26733c146100a8575b600080fd5b34801561005d57600080fd5b506100666100bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b506100bd6100e4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610179575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561018357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a72305820d06ecf519f78c0d6ee0f8af0d70730fa00ac2da4eeac0f6a22561d2aec7c0e2d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xBE26733C EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x179 JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd0 PUSH15 0xCF519F78C0D6EE0F8AF0D70730FA00 0xac 0x2d LOG4 0xee 0xac 0xf PUSH11 0x22561D2AEC7C0E2D002900 ",
							"sourceMap": "28:437:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;288:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:70:0;;;;;;73:20;;;;;;;;;;;;;:::o;288:70::-;226:5;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;342:10;329:24;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "91200",
								"executionCost": "20407",
								"totalCost": "111607"
							},
							"external": {
								"Kill()": "30706",
								"owner()": "442"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 465,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "MSTORE"
								},
								{
									"begin": 106,
									"end": 164,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 106,
									"end": 164,
									"name": "POP"
								},
								{
									"begin": 146,
									"end": 156,
									"name": "CALLER"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "EXP"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SLOAD"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "MUL"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "NOT"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "AND"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SWAP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP4"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "AND"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "MUL"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "OR"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SWAP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SSTORE"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 465,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d06ecf519f78c0d6ee0f8af0d70730fa00ac2da4eeac0f6a22561d2aec7c0e2d0029",
									".code": [
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "BE26733C"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 465,
											"name": "REVERT"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP3"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "RETURN"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "STOP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "EXP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DIV"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SLOAD"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DIV"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 222,
											"name": "CALLER"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "EQ"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SLOAD"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "EXP"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DIV"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "EQ"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "ISZERO"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "REVERT"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 352,
											"name": "CALLER"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SELFDESTRUCT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Kill()": "be26733c",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"marker\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"DebugEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"marker\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"DebugEvent2\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Debuggable.sol\":\"Debuggable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Debuggable.sol\":{\"keccak256\":\"0x207a3fb9b2578336e6007e2c7551bc43a8b79ce2fb901cc5c0c7851c15831ae5\",\"urls\":[\"bzzr://fb95cdac2ec767f634bf8f6462beb7c1700c16c2e21a39a3a3e87a1395bf6015\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"ECMathInterface.sol": {
				"ECMath": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "p_add",
									"type": "uint256[2]"
								},
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "AddMultiplyH",
							"outputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "MultiplyG1",
							"outputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								},
								{
									"name": "p1",
									"type": "uint256[2]"
								}
							],
							"name": "Add",
							"outputs": [
								{
									"name": "p2",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "privatekey",
									"type": "uint256"
								}
							],
							"name": "GetPublicKeyFromPrivateKey",
							"outputs": [
								{
									"name": "PubKey",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "privatekey",
									"type": "uint256"
								}
							],
							"name": "GetAddressFromPrivateKey",
							"outputs": [
								{
									"name": "addr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p1",
									"type": "uint256[2]"
								},
								{
									"name": "p2",
									"type": "uint256[2]"
								}
							],
							"name": "Equals",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "X",
									"type": "uint256[]"
								},
								{
									"name": "Y",
									"type": "uint256[]"
								}
							],
							"name": "VectorAdd",
							"outputs": [
								{
									"name": "Z",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "PubKey",
									"type": "uint256[2]"
								}
							],
							"name": "GetAddress",
							"outputs": [
								{
									"name": "addr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "X",
									"type": "uint256[]"
								},
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "VectorScale",
							"outputs": [
								{
									"name": "Z",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "Pin",
									"type": "uint256"
								}
							],
							"name": "ExpandPoint",
							"outputs": [
								{
									"name": "Pout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p1",
									"type": "uint256[2]"
								}
							],
							"name": "Negate",
							"outputs": [
								{
									"name": "p2",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p",
									"type": "uint256[2]"
								}
							],
							"name": "HashToPoint",
							"outputs": [
								{
									"name": "h",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "MultiplyH",
							"outputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "EvaluateCurve",
							"outputs": [
								{
									"name": "y",
									"type": "uint256"
								},
								{
									"name": "onCurve",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "Pin",
									"type": "uint256[2]"
								}
							],
							"name": "CompressPoint",
							"outputs": [
								{
									"name": "Pout",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "point",
									"type": "uint256[2]"
								}
							],
							"name": "HashOfPoint",
							"outputs": [
								{
									"name": "h",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								},
								{
									"name": "p1",
									"type": "uint256[2]"
								}
							],
							"name": "Subtract",
							"outputs": [
								{
									"name": "p2",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "X",
									"type": "uint256[]"
								},
								{
									"name": "Y",
									"type": "uint256[]"
								},
								{
									"name": "x",
									"type": "uint256[]"
								},
								{
									"name": "y",
									"type": "uint256[]"
								}
							],
							"name": "CommitAB",
							"outputs": [
								{
									"name": "px",
									"type": "uint256[2]"
								},
								{
									"name": "py",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "N",
									"type": "uint256"
								}
							],
							"name": "GetGiHi",
							"outputs": [
								{
									"name": "",
									"type": "uint256[]"
								},
								{
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p_add",
									"type": "uint256[2]"
								},
								{
									"name": "p_mul",
									"type": "uint256[2]"
								},
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "AddMultiply",
							"outputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "GetGiHiLength",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "Pin",
									"type": "uint256[2]"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "s",
									"type": "uint256[]"
								},
								{
									"name": "start",
									"type": "uint256"
								},
								{
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "AddMultiExp",
							"outputs": [
								{
									"name": "Pout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "GetG1",
							"outputs": [
								{
									"name": "",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p_add",
									"type": "uint256[2]"
								},
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "AddMultiplyG1",
							"outputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "GetInfinity",
							"outputs": [
								{
									"name": "",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "s",
									"type": "uint256[]"
								},
								{
									"name": "start",
									"type": "uint256"
								},
								{
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "MultiExp",
							"outputs": [
								{
									"name": "Pout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "GetPCurve",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								},
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"name": "Multiply",
							"outputs": [
								{
									"name": "p1",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "GetH",
							"outputs": [
								{
									"name": "",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "X",
									"type": "uint256[]"
								},
								{
									"name": "s",
									"type": "uint256[]"
								}
							],
							"name": "VectorMul",
							"outputs": [
								{
									"name": "Z",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "GetNCurve",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "s_G1",
									"type": "uint256"
								},
								{
									"name": "s_H",
									"type": "uint256"
								}
							],
							"name": "CommitG1H",
							"outputs": [
								{
									"name": "p0",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Add(uint256[2],uint256[2])": "0c753fe8",
							"AddMultiExp(uint256[2],uint256[],uint256[],uint256,uint256)": "ad4310f5",
							"AddMultiply(uint256[2],uint256[2],uint256)": "9c050a4a",
							"AddMultiplyG1(uint256[2],uint256)": "b0f5c83a",
							"AddMultiplyH(uint256[2],uint256)": "012421f9",
							"CommitAB(uint256[],uint256[],uint256[],uint256[])": "841675c9",
							"CommitG1H(uint256,uint256)": "e76f8e66",
							"CompressPoint(uint256[2])": "71b1c161",
							"Equals(uint256[2],uint256[2])": "1ce9d895",
							"EvaluateCurve(uint256)": "66230bd9",
							"ExpandPoint(uint256)": "5da7f69e",
							"GetAddress(uint256[2])": "37a8b202",
							"GetAddressFromPrivateKey(uint256)": "1bea22e6",
							"GetG1()": "ae5d39f6",
							"GetGiHi(uint256)": "8ac1c8d4",
							"GetGiHiLength()": "a77a970d",
							"GetH()": "c1eeb1fe",
							"GetInfinity()": "b866cf29",
							"GetNCurve()": "d1ff535b",
							"GetPCurve()": "bab5064c",
							"GetPublicKeyFromPrivateKey(uint256)": "16491f3e",
							"HashOfPoint(uint256[2])": "758bad98",
							"HashToPoint(uint256[2])": "6032fc3f",
							"MultiExp(uint256[],uint256[],uint256,uint256)": "ba7d3977",
							"Multiply(uint256[2],uint256)": "c025d89b",
							"MultiplyG1(uint256)": "0819336a",
							"MultiplyH(uint256)": "639649c4",
							"Negate(uint256[2])": "5f033797",
							"Subtract(uint256[2],uint256[2])": "80bca979",
							"VectorAdd(uint256[],uint256[])": "20cebc5c",
							"VectorMul(uint256[],uint256[])": "cf60976a",
							"VectorScale(uint256[],uint256)": "3b4c2ede"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ECMathInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "ecMathAddr",
									"type": "address"
								}
							],
							"name": "ECMath_ChangeAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "Kill",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ECMath_GetAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ECMath_GetCodeSize",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "ecMathAddr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_name",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "_new",
									"type": "address"
								}
							],
							"name": "ContractAddressChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "marker",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "data",
									"type": "uint256"
								}
							],
							"name": "DebugEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "marker",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "data",
									"type": "uint256[]"
								}
							],
							"name": "DebugEvent2",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ECMathInterface.sol\":3590:4636  contract ECMathInterface is Debuggable {\r... */\n  mstore(0x40, 0x80)\n    /* \"ECMathInterface.sol\":4549:4633  constructor(address ecMathAddr) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ECMathInterface.sol\":4549:4633  constructor(address ecMathAddr) public {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Debuggable.sol\":146:156  msg.sender */\n  caller\n    /* \"Debuggable.sol\":138:143  owner */\n  0x0\n  dup1\n    /* \"Debuggable.sol\":138:156  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ECMathInterface.sol\":4596:4628  ECMath_ChangeAddress(ecMathAddr) */\n  tag_6\n    /* \"ECMathInterface.sol\":4617:4627  ecMathAddr */\n  dup2\n    /* \"ECMathInterface.sol\":4596:4616  ECMath_ChangeAddress */\n  mul(0x100000000, tag_7)\n    /* \"ECMathInterface.sol\":4596:4628  ECMath_ChangeAddress(ecMathAddr) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_6:\n    /* \"ECMathInterface.sol\":4549:4633  constructor(address ecMathAddr) public {\r... */\n  pop\n    /* \"ECMathInterface.sol\":3590:4636  contract ECMathInterface is Debuggable {\r... */\n  jump(tag_8)\n    /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\ntag_7:\n    /* \"Debuggable.sol\":226:231  owner */\n  0x0\n  dup1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Debuggable.sol\":212:231  msg.sender != owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Debuggable.sol\":212:222  msg.sender */\n  caller\n    /* \"Debuggable.sol\":212:231  msg.sender != owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n  dup1\n  iszero\n  tag_10\n  jumpi\n  pop\n    /* \"Debuggable.sol\":246:247  0 */\n  0x0\n    /* \"Debuggable.sol\":237:242  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Debuggable.sol\":237:247  owner != 0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\ntag_10:\n    /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n  iszero\n  tag_11\n  jumpi\n    /* \"Debuggable.sol\":251:259  revert() */\n  0x0\n  dup1\n  revert\n    /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\ntag_11:\n    /* \"ECMathInterface.sol\":4324:4334  ecMathAddr */\n  dup1\n    /* \"ECMathInterface.sol\":4308:4314  ecMath */\n  0x1\n  0x0\n    /* \"ECMathInterface.sol\":4308:4335  ecMath = ECMath(ecMathAddr) */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n  0x7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f\n    /* \"ECMathInterface.sol\":4378:4388  ecMathAddr */\n  dup2\n    /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n  mload(0x40)\n  dup1\n  dup1\n  0x20\n  add\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x6\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45434d6174680000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n  pop\n  jump\t// out\n    /* \"ECMathInterface.sol\":3590:4636  contract ECMathInterface is Debuggable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"ECMathInterface.sol\":3590:4636  contract ECMathInterface is Debuggable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9c8fda72\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbe26733c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcba51ff3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xefd6b306\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":73:93  address public owner */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"Debuggable.sol\":73:93  address public owner */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n      pop\n      tag_11\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n      pop\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Debuggable.sol\":73:93  address public owner */\n    tag_9:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n    tag_12:\n        /* \"Debuggable.sol\":226:231  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:222  msg.sender */\n      caller\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n      dup1\n      iszero\n      tag_23\n      jumpi\n      pop\n        /* \"Debuggable.sol\":246:247  0 */\n      0x0\n        /* \"Debuggable.sol\":237:242  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":237:247  owner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n    tag_23:\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n      iszero\n      tag_24\n      jumpi\n        /* \"Debuggable.sol\":251:259  revert() */\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n    tag_24:\n        /* \"ECMathInterface.sol\":4324:4334  ecMathAddr */\n      dup1\n        /* \"ECMathInterface.sol\":4308:4314  ecMath */\n      0x1\n      0x0\n        /* \"ECMathInterface.sol\":4308:4335  ecMath = ECMath(ecMathAddr) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n      0x7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f\n        /* \"ECMathInterface.sol\":4378:4388  ecMathAddr */\n      dup2\n        /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x6\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45434d6174680000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n      pop\n      jump\t// out\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n    tag_15:\n        /* \"Debuggable.sol\":226:231  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:222  msg.sender */\n      caller\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n      dup1\n      iszero\n      tag_27\n      jumpi\n      pop\n        /* \"Debuggable.sol\":246:247  0 */\n      0x0\n        /* \"Debuggable.sol\":237:242  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":237:247  owner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n    tag_27:\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n      iszero\n      tag_28\n      jumpi\n        /* \"Debuggable.sol\":251:259  revert() */\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n    tag_28:\n        /* \"Debuggable.sol\":342:352  msg.sender */\n      caller\n        /* \"Debuggable.sol\":329:353  selfdestruct(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n    tag_18:\n        /* \"ECMathInterface.sol\":3844:3851  address */\n      0x0\n        /* \"ECMathInterface.sol\":3876:3882  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECMathInterface.sol\":3861:3883  return address(ecMath) */\n      swap1\n      pop\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n    tag_21:\n        /* \"ECMathInterface.sol\":3949:3953  uint */\n      0x0\n        /* \"ECMathInterface.sol\":3963:3977  uint code_size */\n      dup1\n        /* \"ECMathInterface.sol\":3982:3994  address addr */\n      0x0\n        /* \"ECMathInterface.sol\":3997:4016  ECMath_GetAddress() */\n      tag_32\n        /* \"ECMathInterface.sol\":3997:4014  ECMath_GetAddress */\n      tag_18\n        /* \"ECMathInterface.sol\":3997:4016  ECMath_GetAddress() */\n      jump\t// in\n    tag_32:\n        /* \"ECMathInterface.sol\":3982:4016  address addr = ECMath_GetAddress() */\n      swap1\n      pop\n        /* \"ECMathInterface.sol\":4064:4068  addr */\n      dup1\n        /* \"ECMathInterface.sol\":4052:4069  extcodesize(addr) */\n      extcodesize\n        /* \"ECMathInterface.sol\":4039:4069  code_size := extcodesize(addr) */\n      swap2\n      pop\n        /* \"ECMathInterface.sol\":4089:4098  code_size */\n      dup2\n        /* \"ECMathInterface.sol\":4082:4098  return code_size */\n      swap3\n      pop\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n      pop\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582021fc5577c78079da27c503652cc04a8358994dd1f78b14906d9a561801a6ea4b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061069183398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008b81610091640100000000026401000000009004565b50610210565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610126575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561013057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f8160405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260068152602001807f45434d61746800000000000000000000000000000000000000000000000000008152506020019250505060405180910390a150565b6104728061021f6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b146100725780639c8fda72146100c9578063be26733c1461010c578063cba51ff314610123578063efd6b3061461017a575b600080fd5b34801561007e57600080fd5b506100876101a5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101ca565b005b34801561011857600080fd5b50610121610349565b005b34801561012f57600080fd5b50610138610401565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018657600080fd5b5061018f61042b565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561025f575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561026957600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f8160405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260068152602001807f45434d61746800000000000000000000000000000000000000000000000000008152506020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156103de575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156103e857600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000610438610401565b9050803b91508192505050905600a165627a7a7230582021fc5577c78079da27c503652cc04a8358994dd1f78b14906d9a561801a6ea4b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x691 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8B DUP2 PUSH2 0x91 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST POP PUSH2 0x210 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x126 JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F DUP2 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434D6174680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x472 DUP1 PUSH2 0x21F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x9C8FDA72 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xBE26733C EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xCBA51FF3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xEFD6B306 EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F DUP2 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434D6174680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x438 PUSH2 0x401 JUMP JUMPDEST SWAP1 POP DUP1 EXTCODESIZE SWAP2 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x21 0xfc SSTORE PUSH24 0xC78079DA27C503652CC04A8358994DD1F78B14906D9A5618 ADD 0xa6 0xea 0x4b STOP 0x29 ",
							"sourceMap": "3590:1046:1:-;;;4549:84;8:9:-1;5:2;;;30:1;27;20:12;5:2;4549:84:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:10:0;138:5;;:18;;;;;;;;;;;;;;;;;;4596:32:1;4617:10;4596:20;;;:32;;;:::i;:::-;4549:84;3590:1046;;4109:285;226:5:0;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;4324:10:1;4308:6;;:27;;;;;;;;;;;;;;;;;;4345:44;4378:10;4345:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:285;:::o;3590:1046::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b146100725780639c8fda72146100c9578063be26733c1461010c578063cba51ff314610123578063efd6b3061461017a575b600080fd5b34801561007e57600080fd5b506100876101a5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101ca565b005b34801561011857600080fd5b50610121610349565b005b34801561012f57600080fd5b50610138610401565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018657600080fd5b5061018f61042b565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561025f575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561026957600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f8160405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260068152602001807f45434d61746800000000000000000000000000000000000000000000000000008152506020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156103de575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156103e857600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000610438610401565b9050803b91508192505050905600a165627a7a7230582021fc5577c78079da27c503652cc04a8358994dd1f78b14906d9a561801a6ea4b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x9C8FDA72 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xBE26733C EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xCBA51FF3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xEFD6B306 EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F DUP2 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434D6174680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x438 PUSH2 0x401 JUMP JUMPDEST SWAP1 POP DUP1 EXTCODESIZE SWAP2 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x21 0xfc SSTORE PUSH24 0xC78079DA27C503652CC04A8358994DD1F78B14906D9A5618 ADD 0xa6 0xea 0x4b STOP 0x29 ",
							"sourceMap": "3590:1046:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73:20:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:285:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4109:285:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:70:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:70:0;;;;;;3790:98:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3790:98:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:209;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3894:209:1;;;;;;;;;;;;;;;;;;;;;;;73:20:0;;;;;;;;;;;;;:::o;4109:285:1:-;226:5:0;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;4324:10:1;4308:6;;:27;;;;;;;;;;;;;;;;;;4345:44;4378:10;4345:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:285;:::o;288:70:0:-;226:5;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;342:10;329:24;;;3790:98:1;3844:7;3876:6;;;;;;;;;;;3861:22;;3790:98;:::o;3894:209::-;3949:4;3963:14;3982:12;3997:19;:17;:19::i;:::-;3982:34;;4064:4;4052:17;4039:30;;4089:9;4082:16;;3894:209;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "227600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ECMath_ChangeAddress(address)": "22955",
								"ECMath_GetAddress()": "516",
								"ECMath_GetCodeSize()": "1287",
								"Kill()": "30728",
								"owner()": "442"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "MSTORE"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "POP"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "MLOAD"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP4"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "CODECOPY"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP2"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "ADD"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "MSTORE"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP2"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "ADD"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "SWAP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "DUP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "MLOAD"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "SWAP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "ADD"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "SWAP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "SWAP3"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "SWAP2"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "SWAP1"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "POP"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "POP"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "POP"
								},
								{
									"begin": 146,
									"end": 156,
									"name": "CALLER"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "EXP"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SLOAD"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "MUL"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "NOT"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "AND"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SWAP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP4"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "AND"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "MUL"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "OR"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SWAP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SSTORE"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "POP"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 4617,
									"end": 4627,
									"name": "DUP2"
								},
								{
									"begin": 4596,
									"end": 4616,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4596,
									"end": 4616,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 4596,
									"end": 4616,
									"name": "MUL"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "SWAP1"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "DIV"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "JUMPDEST"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "POP"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "JUMP"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "JUMPDEST"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "DUP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SLOAD"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "EXP"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "DIV"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 222,
									"name": "CALLER"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "EQ"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "ISZERO"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "DUP1"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "ISZERO"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "JUMPI"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "POP"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "DUP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SWAP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SLOAD"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SWAP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "EXP"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SWAP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "DIV"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "AND"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "AND"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "EQ"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "ISZERO"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "JUMPDEST"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "ISZERO"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "JUMPI"
								},
								{
									"begin": 251,
									"end": 259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 251,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 251,
									"end": 259,
									"name": "REVERT"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "JUMPDEST"
								},
								{
									"begin": 4324,
									"end": 4334,
									"name": "DUP1"
								},
								{
									"begin": 4308,
									"end": 4314,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4308,
									"end": 4314,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "EXP"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "DUP2"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SLOAD"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "DUP2"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "MUL"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "NOT"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "AND"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SWAP1"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "DUP4"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "AND"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "MUL"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "OR"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SWAP1"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SSTORE"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F"
								},
								{
									"begin": 4378,
									"end": 4388,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MLOAD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP4"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "AND"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "AND"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP3"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SUB"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP3"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "45434D6174680000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SWAP3"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MLOAD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SWAP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SUB"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SWAP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "LOG1"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "POP"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "JUMPDEST"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "DUP1"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "CODECOPY"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3590,
									"end": 4636,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582021fc5577c78079da27c503652cc04a8358994dd1f78b14906d9a561801a6ea4b0029",
									".code": [
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "MSTORE"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "LT"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPI"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "SWAP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DIV"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "AND"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DUP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "EQ"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPI"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DUP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "9C8FDA72"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "EQ"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPI"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DUP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "BE26733C"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "EQ"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPI"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DUP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "CBA51FF3"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "EQ"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPI"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DUP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "EFD6B306"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "EQ"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPI"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "JUMPDEST"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "DUP1"
										},
										{
											"begin": 3590,
											"end": 4636,
											"name": "REVERT"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP3"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "RETURN"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SUB"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP2"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "ADD"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "AND"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "ADD"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP3"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP2"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "STOP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "STOP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "MLOAD"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP3"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "AND"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "AND"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP2"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "MSTORE"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "ADD"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "MLOAD"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SUB"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "RETURN"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "MLOAD"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP3"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP2"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "MSTORE"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "ADD"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP2"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "MLOAD"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP2"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SUB"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "RETURN"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "EXP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DIV"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SLOAD"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DIV"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 222,
											"name": "CALLER"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "EQ"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SLOAD"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "EXP"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DIV"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "EQ"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "ISZERO"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "REVERT"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 4324,
											"end": 4334,
											"name": "DUP1"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "EXP"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "DUP2"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SLOAD"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "DUP2"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "MUL"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "NOT"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "AND"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "DUP4"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "AND"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "MUL"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "OR"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SSTORE"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F"
										},
										{
											"begin": 4378,
											"end": 4388,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP4"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "45434D6174680000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SWAP3"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "LOG1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SLOAD"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DIV"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 222,
											"name": "CALLER"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "EQ"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SLOAD"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "EXP"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DIV"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "EQ"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "ISZERO"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "REVERT"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 352,
											"name": "CALLER"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMPDEST"
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SLOAD"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "EXP"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DIV"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "AND"
										},
										{
											"begin": 3861,
											"end": 3883,
											"name": "SWAP1"
										},
										{
											"begin": 3861,
											"end": 3883,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMPDEST"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3977,
											"name": "DUP1"
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3997,
											"end": 4014,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "JUMPDEST"
										},
										{
											"begin": 3982,
											"end": 4016,
											"name": "SWAP1"
										},
										{
											"begin": 3982,
											"end": 4016,
											"name": "POP"
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "DUP1"
										},
										{
											"begin": 4052,
											"end": 4069,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "SWAP2"
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "POP"
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "DUP2"
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "SWAP3"
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ECMath_ChangeAddress(address)": "9c8fda72",
							"ECMath_GetAddress()": "cba51ff3",
							"ECMath_GetCodeSize()": "efd6b306",
							"Kill()": "be26733c",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ecMathAddr\",\"type\":\"address\"}],\"name\":\"ECMath_ChangeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECMath_GetAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECMath_GetCodeSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ecMathAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"ContractAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"marker\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"DebugEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"marker\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"DebugEvent2\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ECMathInterface.sol\":\"ECMathInterface\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Debuggable.sol\":{\"keccak256\":\"0x207a3fb9b2578336e6007e2c7551bc43a8b79ce2fb901cc5c0c7851c15831ae5\",\"urls\":[\"bzzr://fb95cdac2ec767f634bf8f6462beb7c1700c16c2e21a39a3a3e87a1395bf6015\"]},\"ECMathInterface.sol\":{\"keccak256\":\"0x63a7629955422f997358b1c2fdd52d2404d9bdba9ee4704576a305126938e95f\",\"urls\":[\"bzzr://57dff9b77afe326b6fa0260f25843c4560eb869980ccc04a8d8e89beacc760f2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"MLSAGVerify.sol": {
				"MLSAGVerify": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifySAG_Compressed",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "I",
									"type": "uint256[]"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifyMLSAG_Compressed",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "I",
									"type": "uint256[]"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifyLSAG",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "alpha",
									"type": "uint256"
								}
							],
							"name": "StartRing",
							"outputs": [
								{
									"name": "ckp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "alpha",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[2]"
								}
							],
							"name": "StartLinkableRing_NoHash",
							"outputs": [
								{
									"name": "Lout",
									"type": "uint256[2]"
								},
								{
									"name": "Rout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "ck",
									"type": "uint256"
								},
								{
									"name": "sk",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[2]"
								}
							],
							"name": "CalculateRingSegment_NoHash",
							"outputs": [
								{
									"name": "Pout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "alpha",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[2]"
								}
							],
							"name": "StartLinkableRing",
							"outputs": [
								{
									"name": "ckp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "m",
									"type": "uint256"
								},
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifyMSAG_Compressed",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "array",
									"type": "uint256[]"
								}
							],
							"name": "Keccak256OfArray",
							"outputs": [
								{
									"name": "out",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "m",
									"type": "uint256"
								},
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifyMSAG",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "alpha",
									"type": "uint256"
								},
								{
									"name": "c",
									"type": "uint256"
								},
								{
									"name": "xk",
									"type": "uint256"
								}
							],
							"name": "CompleteRing",
							"outputs": [
								{
									"name": "s",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "left",
									"type": "uint256[2]"
								},
								{
									"name": "right",
									"type": "uint256[2]"
								}
							],
							"name": "LinkableRingHashFunction",
							"outputs": [
								{
									"name": "h",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "point",
									"type": "uint256[2]"
								}
							],
							"name": "RingHashFunction",
							"outputs": [
								{
									"name": "h",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "ck",
									"type": "uint256"
								},
								{
									"name": "sk",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[2]"
								},
								{
									"name": "I",
									"type": "uint256[2]"
								}
							],
							"name": "CalculateLinkableRingSegment_NoHash",
							"outputs": [
								{
									"name": "Lout",
									"type": "uint256[2]"
								},
								{
									"name": "Rout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "ecMathAddr",
									"type": "address"
								}
							],
							"name": "ECMath_ChangeAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "pk",
									"type": "uint256"
								}
							],
							"name": "CalculateKeyImageFromPrivKey",
							"outputs": [
								{
									"name": "I",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "Kill",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "I",
									"type": "uint256[]"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifyMLSAG",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifySAG",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "alpha",
									"type": "uint256"
								}
							],
							"name": "StartRing_NoHash",
							"outputs": [
								{
									"name": "Pout",
									"type": "uint256[2]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ECMath_GetAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "ck",
									"type": "uint256"
								},
								{
									"name": "sk",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[2]"
								}
							],
							"name": "CalculateRingSegment",
							"outputs": [
								{
									"name": "ckp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ECMath_GetCodeSize",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "ck",
									"type": "uint256"
								},
								{
									"name": "sk",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[2]"
								},
								{
									"name": "I",
									"type": "uint256[2]"
								}
							],
							"name": "CalculateLinkableRingSegment",
							"outputs": [
								{
									"name": "ckp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "msgHash",
									"type": "uint256"
								},
								{
									"name": "I",
									"type": "uint256"
								},
								{
									"name": "P",
									"type": "uint256[]"
								},
								{
									"name": "signature",
									"type": "uint256[]"
								}
							],
							"name": "VerifyLSAG_Compressed",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "ecMathAddr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_name",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "_new",
									"type": "address"
								}
							],
							"name": "ContractAddressChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "marker",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "data",
									"type": "uint256"
								}
							],
							"name": "DebugEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "marker",
									"type": "string"
								},
								{
									"indexed": false,
									"name": "data",
									"type": "uint256[]"
								}
							],
							"name": "DebugEvent2",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n  mstore(0x40, 0x80)\n    /* \"MLSAGVerify.sol\":200:269  constructor(address ecMathAddr) ECMathInterface(ecMathAddr) public {} */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"MLSAGVerify.sol\":200:269  constructor(address ecMathAddr) ECMathInterface(ecMathAddr) public {} */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"MLSAGVerify.sol\":248:258  ecMathAddr */\n  dup1\n    /* \"Debuggable.sol\":146:156  msg.sender */\n  caller\n    /* \"Debuggable.sol\":138:143  owner */\n  0x0\n  dup1\n    /* \"Debuggable.sol\":138:156  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ECMathInterface.sol\":4596:4628  ECMath_ChangeAddress(ecMathAddr) */\n  tag_7\n    /* \"ECMathInterface.sol\":4617:4627  ecMathAddr */\n  dup2\n    /* \"ECMathInterface.sol\":4596:4616  ECMath_ChangeAddress */\n  mul(0x100000000, tag_8)\n    /* \"ECMathInterface.sol\":4596:4628  ECMath_ChangeAddress(ecMathAddr) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_7:\n    /* \"ECMathInterface.sol\":4549:4633  constructor(address ecMathAddr) public {\r... */\n  pop\n    /* \"MLSAGVerify.sol\":200:269  constructor(address ecMathAddr) ECMathInterface(ecMathAddr) public {} */\n  pop\n    /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n  jump(tag_10)\n    /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\ntag_8:\n    /* \"Debuggable.sol\":226:231  owner */\n  0x0\n  dup1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Debuggable.sol\":212:231  msg.sender != owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Debuggable.sol\":212:222  msg.sender */\n  caller\n    /* \"Debuggable.sol\":212:231  msg.sender != owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n  dup1\n  iszero\n  tag_12\n  jumpi\n  pop\n    /* \"Debuggable.sol\":246:247  0 */\n  0x0\n    /* \"Debuggable.sol\":237:242  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Debuggable.sol\":237:247  owner != 0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\ntag_12:\n    /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n  iszero\n  tag_13\n  jumpi\n    /* \"Debuggable.sol\":251:259  revert() */\n  0x0\n  dup1\n  revert\n    /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\ntag_13:\n    /* \"ECMathInterface.sol\":4324:4334  ecMathAddr */\n  dup1\n    /* \"ECMathInterface.sol\":4308:4314  ecMath */\n  0x1\n  0x0\n    /* \"ECMathInterface.sol\":4308:4335  ecMath = ECMath(ecMathAddr) */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n  0x7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f\n    /* \"ECMathInterface.sol\":4378:4388  ecMathAddr */\n  dup2\n    /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n  mload(0x40)\n  dup1\n  dup1\n  0x20\n  add\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x6\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45434d6174680000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n  pop\n  jump\t// out\n    /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x66d1749\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x813d72a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200fc39c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x26e37ec5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2d57f6e7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36490458\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x38f3e171\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x44fc0c93\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x490ee1cb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f2ce9a3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c859d09\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6fb015cc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x81b4ef31\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x88c01ed8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9c8fda72\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa3d53298\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbe26733c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc17065d0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc4e8e6a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc8fc7ca8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcba51ff3\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdb8c735e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xefd6b306\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf8c8b0ca\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xff7d69a8\n      eq\n      tag_27\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"MLSAGVerify.sol\":6604:7105  function VerifySAG_Compressed(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"MLSAGVerify.sol\":6604:7105  function VerifySAG_Compressed(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":15272:16063  function VerifyMLSAG_Compressed(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"MLSAGVerify.sol\":15272:16063  function VerifyMLSAG_Compressed(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_32\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":7348:8236  function VerifyLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"MLSAGVerify.sol\":7348:8236  function VerifyLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_35\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":1459:1637  function StartRing(uint256 msgHash, uint256 alpha)\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"MLSAGVerify.sol\":1459:1637  function StartRing(uint256 msgHash, uint256 alpha)\r... */\n      pop\n      tag_38\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_39)\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":3234:3529  function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"MLSAGVerify.sol\":3234:3529  function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r... */\n      pop\n      tag_41\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_43:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_43)\n    tag_44:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3234:3529  function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_47:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3234:3529  function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":1649:1954  function CalculateRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P)\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"MLSAGVerify.sol\":1649:1954  function CalculateRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P)\r... */\n      pop\n      tag_50\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_53:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1649:1954  function CalculateRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":3541:3865  function StartLinkableRing(uint256 msgHash, uint256 alpha, uint256[2] P)\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"MLSAGVerify.sol\":3541:3865  function StartLinkableRing(uint256 msgHash, uint256 alpha, uint256[2] P)\r... */\n      pop\n      tag_56\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":11834:12363  function VerifyMSAG_Compressed(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_58:\n        /* \"MLSAGVerify.sol\":11834:12363  function VerifyMSAG_Compressed(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_59\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_60)\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":4832:5295  function Keccak256OfArray(uint256[] array)\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"MLSAGVerify.sol\":4832:5295  function Keccak256OfArray(uint256[] array)\r... */\n      pop\n      tag_62\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_63)\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":9671:11410  function VerifyMSAG(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_64:\n        /* \"MLSAGVerify.sol\":9671:11410  function VerifyMSAG(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_65\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_66)\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":2362:2612  function CompleteRing(uint256 alpha, uint256 c, uint256 xk)\r... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n        /* \"MLSAGVerify.sol\":2362:2612  function CompleteRing(uint256 alpha, uint256 c, uint256 xk)\r... */\n      pop\n      tag_68\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_69)\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":2665:2909  function LinkableRingHashFunction(uint256 msgHash, uint256[2] left, uint256[2] right)\r... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"MLSAGVerify.sol\":2665:2909  function LinkableRingHashFunction(uint256 msgHash, uint256[2] left, uint256[2] right)\r... */\n      pop\n      tag_71\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_72)\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":1073:1274  function RingHashFunction(uint256 msgHash, uint256[2] point)\r... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_73:\n        /* \"MLSAGVerify.sol\":1073:1274  function RingHashFunction(uint256 msgHash, uint256[2] point)\r... */\n      pop\n      tag_74\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_75)\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":3877:4393  function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_76:\n        /* \"MLSAGVerify.sol\":3877:4393  function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n      pop\n      tag_77\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_78)\n    tag_77:\n      mload(0x40)\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_79:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_79)\n    tag_80:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3877:4393  function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_82:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_82)\n    tag_83:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3877:4393  function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Debuggable.sol\":73:93  address public owner */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_85:\n        /* \"Debuggable.sol\":73:93  address public owner */\n      pop\n      tag_86\n      jump(tag_87)\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n      pop\n      tag_89\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_90)\n    tag_89:\n      stop\n        /* \"MLSAGVerify.sol\":2921:3222  function CalculateKeyImageFromPrivKey(uint256 pk)\r... */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_91:\n        /* \"MLSAGVerify.sol\":2921:3222  function CalculateKeyImageFromPrivKey(uint256 pk)\r... */\n      pop\n      tag_92\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_93)\n    tag_92:\n      mload(0x40)\n      dup1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_94:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_94)\n    tag_95:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":2921:3222  function CalculateKeyImageFromPrivKey(uint256 pk)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n      pop\n      tag_98\n      jump(tag_99)\n    tag_98:\n      stop\n        /* \"MLSAGVerify.sol\":12861:14869  function VerifyMLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_100:\n        /* \"MLSAGVerify.sol\":12861:14869  function VerifyMLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_101\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_102)\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":5625:6359  function VerifySAG(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_21:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_103:\n        /* \"MLSAGVerify.sol\":5625:6359  function VerifySAG(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_104\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_105)\n    tag_104:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":1286:1447  function StartRing_NoHash(uint256 alpha)\r... */\n    tag_22:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_106:\n        /* \"MLSAGVerify.sol\":1286:1447  function StartRing_NoHash(uint256 alpha)\r... */\n      pop\n      tag_107\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_108)\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_109:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_109)\n    tag_110:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1286:1447  function StartRing_NoHash(uint256 alpha)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n    tag_23:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_112:\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n      pop\n      tag_113\n      jump(tag_114)\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":1966:2248  function CalculateRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P)\r... */\n    tag_24:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_115:\n        /* \"MLSAGVerify.sol\":1966:2248  function CalculateRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P)\r... */\n      pop\n      tag_116\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_117)\n    tag_116:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n    tag_25:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_118:\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n      pop\n      tag_119\n      jump(tag_120)\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":4405:4778  function CalculateLinkableRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n    tag_26:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_121:\n        /* \"MLSAGVerify.sol\":4405:4778  function CalculateLinkableRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n      pop\n      tag_122\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      0x2\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_123)\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":8520:9218  function VerifyLSAG_Compressed(uint256 msgHash, uint256 I, uint256[] P, uint256[] signature)\r... */\n    tag_27:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_124:\n        /* \"MLSAGVerify.sol\":8520:9218  function VerifyLSAG_Compressed(uint256 msgHash, uint256 I, uint256[] P, uint256[] signature)\r... */\n      pop\n      tag_125\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_126)\n    tag_125:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MLSAGVerify.sol\":6604:7105  function VerifySAG_Compressed(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_30:\n        /* \"MLSAGVerify.sol\":6719:6731  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":6749:6771  uint256[2] memory temp */\n      tag_127\n      jump\t// in(tag_128)\n    tag_127:\n        /* \"MLSAGVerify.sol\":6782:6807  uint256[] memory P_uncomp */\n      0x60\n        /* \"MLSAGVerify.sol\":6861:6870  uint256 i */\n      0x0\n        /* \"MLSAGVerify.sol\":6833:6834  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":6824:6825  P */\n      dup7\n        /* \"MLSAGVerify.sol\":6824:6832  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":6824:6834  P.length*2 */\n      mul\n        /* \"MLSAGVerify.sol\":6810:6835  new uint256[](P.length*2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":6810:6835  new uint256[](P.length*2) */\n      swap1\n      pop\n    tag_130:\n      pop\n        /* \"MLSAGVerify.sol\":6782:6835  uint256[] memory P_uncomp = new uint256[](P.length*2) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":6873:6874  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":6861:6874  uint256 i = 0 */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":6856:7031  for (uint256 i = 0; i < P.length; i++) {\r... */\n    tag_131:\n        /* \"MLSAGVerify.sol\":6880:6881  P */\n      dup6\n        /* \"MLSAGVerify.sol\":6880:6888  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":6876:6877  i */\n      dup2\n        /* \"MLSAGVerify.sol\":6876:6888  i < P.length */\n      lt\n        /* \"MLSAGVerify.sol\":6856:7031  for (uint256 i = 0; i < P.length; i++) {\r... */\n      iszero\n      tag_132\n      jumpi\n        /* \"MLSAGVerify.sol\":6917:6923  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":6917:6935  ecMath.ExpandPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5da7f69e\n        /* \"MLSAGVerify.sol\":6936:6937  P */\n      dup8\n        /* \"MLSAGVerify.sol\":6938:6939  i */\n      dup4\n        /* \"MLSAGVerify.sol\":6936:6940  P[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_134\n      jumpi\n      invalid\n    tag_134:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6917:6941  ecMath.ExpandPoint(P[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"MLSAGVerify.sol\":6917:6941  ecMath.ExpandPoint(P[i]) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_136:\n        /* \"MLSAGVerify.sol\":6917:6941  ecMath.ExpandPoint(P[i]) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_137\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_137:\n        /* \"MLSAGVerify.sol\":6917:6941  ecMath.ExpandPoint(P[i]) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6910:6941  temp = ecMath.ExpandPoint(P[i]) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":6972:6976  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":6977:6978  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":6972:6979  temp[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_138\n      jumpi\n      invalid\n    tag_138:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6956:6964  P_uncomp */\n      dup3\n        /* \"MLSAGVerify.sol\":6967:6968  i */\n      dup3\n        /* \"MLSAGVerify.sol\":6965:6966  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":6965:6968  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":6956:6969  P_uncomp[2*i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":6956:6979  P_uncomp[2*i] = temp[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7012:7016  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":7017:7018  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7012:7019  temp[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_140\n      jumpi\n      invalid\n    tag_140:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6994:7002  P_uncomp */\n      dup3\n        /* \"MLSAGVerify.sol\":7007:7008  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7005:7006  i */\n      dup4\n        /* \"MLSAGVerify.sol\":7003:7004  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":7003:7006  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":7003:7008  2*i+1 */\n      add\n        /* \"MLSAGVerify.sol\":6994:7009  P_uncomp[2*i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":6994:7019  P_uncomp[2*i+1] = temp[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6890:6893  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6856:7031  for (uint256 i = 0; i < P.length; i++) {\r... */\n      jump(tag_131)\n    tag_132:\n        /* \"MLSAGVerify.sol\":7058:7097  VerifySAG(msgHash, P_uncomp, signature) */\n      tag_142\n        /* \"MLSAGVerify.sol\":7068:7075  msgHash */\n      dup8\n        /* \"MLSAGVerify.sol\":7077:7085  P_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":7087:7096  signature */\n      dup8\n        /* \"MLSAGVerify.sol\":7058:7067  VerifySAG */\n      tag_105\n        /* \"MLSAGVerify.sol\":7058:7097  VerifySAG(msgHash, P_uncomp, signature) */\n      jump\t// in\n    tag_142:\n        /* \"MLSAGVerify.sol\":7051:7097  return VerifySAG(msgHash, P_uncomp, signature) */\n      swap4\n      pop\n        /* \"MLSAGVerify.sol\":6604:7105  function VerifySAG_Compressed(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":15272:16063  function VerifyMLSAG_Compressed(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_33:\n        /* \"MLSAGVerify.sol\":15402:15414  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":15432:15454  uint256[2] memory temp */\n      tag_143\n      jump\t// in(tag_128)\n    tag_143:\n        /* \"MLSAGVerify.sol\":15465:15490  uint256[] memory P_uncomp */\n      0x60\n        /* \"MLSAGVerify.sol\":15529:15554  uint256[] memory I_uncomp */\n      dup1\n        /* \"MLSAGVerify.sol\":15603:15612  uint256 i */\n      0x0\n        /* \"MLSAGVerify.sol\":15516:15517  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":15507:15508  P */\n      dup8\n        /* \"MLSAGVerify.sol\":15507:15515  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":15507:15517  P.length*2 */\n      mul\n        /* \"MLSAGVerify.sol\":15493:15518  new uint256[](P.length*2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":15493:15518  new uint256[](P.length*2) */\n      swap1\n      pop\n    tag_145:\n      pop\n        /* \"MLSAGVerify.sol\":15465:15518  uint256[] memory P_uncomp = new uint256[](P.length*2) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":15580:15581  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":15571:15572  I */\n      dup9\n        /* \"MLSAGVerify.sol\":15571:15579  I.length */\n      mload\n        /* \"MLSAGVerify.sol\":15571:15581  I.length*2 */\n      mul\n        /* \"MLSAGVerify.sol\":15557:15582  new uint256[](I.length*2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_146\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":15557:15582  new uint256[](I.length*2) */\n      swap1\n      pop\n    tag_146:\n      pop\n        /* \"MLSAGVerify.sol\":15529:15582  uint256[] memory I_uncomp = new uint256[](I.length*2) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":15632:15633  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":15628:15633  i = 0 */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":15623:15790  for (i = 0; i < P.length; i++) {\r... */\n    tag_147:\n        /* \"MLSAGVerify.sol\":15639:15640  P */\n      dup7\n        /* \"MLSAGVerify.sol\":15639:15647  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":15635:15636  i */\n      dup2\n        /* \"MLSAGVerify.sol\":15635:15647  i < P.length */\n      lt\n        /* \"MLSAGVerify.sol\":15623:15790  for (i = 0; i < P.length; i++) {\r... */\n      iszero\n      tag_148\n      jumpi\n        /* \"MLSAGVerify.sol\":15676:15682  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":15676:15694  ecMath.ExpandPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5da7f69e\n        /* \"MLSAGVerify.sol\":15695:15696  P */\n      dup9\n        /* \"MLSAGVerify.sol\":15697:15698  i */\n      dup4\n        /* \"MLSAGVerify.sol\":15695:15699  P[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_150\n      jumpi\n      invalid\n    tag_150:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":15676:15700  ecMath.ExpandPoint(P[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_151:\n        /* \"MLSAGVerify.sol\":15676:15700  ecMath.ExpandPoint(P[i]) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_152:\n        /* \"MLSAGVerify.sol\":15676:15700  ecMath.ExpandPoint(P[i]) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_153\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_153:\n        /* \"MLSAGVerify.sol\":15676:15700  ecMath.ExpandPoint(P[i]) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15669:15700  temp = ecMath.ExpandPoint(P[i]) */\n      swap4\n      pop\n        /* \"MLSAGVerify.sol\":15731:15735  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":15736:15737  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":15731:15738  temp[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_154\n      jumpi\n      invalid\n    tag_154:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":15715:15723  P_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":15726:15727  i */\n      dup3\n        /* \"MLSAGVerify.sol\":15724:15725  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":15724:15727  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":15715:15728  P_uncomp[2*i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_155\n      jumpi\n      invalid\n    tag_155:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":15715:15738  P_uncomp[2*i] = temp[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15771:15775  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":15776:15777  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":15771:15778  temp[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":15753:15761  P_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":15766:15767  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":15764:15765  i */\n      dup4\n        /* \"MLSAGVerify.sol\":15762:15763  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":15762:15765  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":15762:15767  2*i+1 */\n      add\n        /* \"MLSAGVerify.sol\":15753:15768  P_uncomp[2*i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":15753:15778  P_uncomp[2*i+1] = temp[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15649:15652  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15623:15790  for (i = 0; i < P.length; i++) {\r... */\n      jump(tag_147)\n    tag_148:\n        /* \"MLSAGVerify.sol\":15819:15820  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":15815:15820  i = 0 */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":15810:15977  for (i = 0; i < I.length; i++) {\r... */\n    tag_158:\n        /* \"MLSAGVerify.sol\":15826:15827  I */\n      dup8\n        /* \"MLSAGVerify.sol\":15826:15834  I.length */\n      mload\n        /* \"MLSAGVerify.sol\":15822:15823  i */\n      dup2\n        /* \"MLSAGVerify.sol\":15822:15834  i < I.length */\n      lt\n        /* \"MLSAGVerify.sol\":15810:15977  for (i = 0; i < I.length; i++) {\r... */\n      iszero\n      tag_159\n      jumpi\n        /* \"MLSAGVerify.sol\":15863:15869  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":15863:15881  ecMath.ExpandPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5da7f69e\n        /* \"MLSAGVerify.sol\":15882:15883  I */\n      dup10\n        /* \"MLSAGVerify.sol\":15884:15885  i */\n      dup4\n        /* \"MLSAGVerify.sol\":15882:15886  I[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":15863:15887  ecMath.ExpandPoint(I[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_162:\n        /* \"MLSAGVerify.sol\":15863:15887  ecMath.ExpandPoint(I[i]) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_163:\n        /* \"MLSAGVerify.sol\":15863:15887  ecMath.ExpandPoint(I[i]) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_164:\n        /* \"MLSAGVerify.sol\":15863:15887  ecMath.ExpandPoint(I[i]) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15856:15887  temp = ecMath.ExpandPoint(I[i]) */\n      swap4\n      pop\n        /* \"MLSAGVerify.sol\":15918:15922  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":15923:15924  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":15918:15925  temp[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":15902:15910  I_uncomp */\n      dup3\n        /* \"MLSAGVerify.sol\":15913:15914  i */\n      dup3\n        /* \"MLSAGVerify.sol\":15911:15912  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":15911:15914  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":15902:15915  I_uncomp[2*i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_166\n      jumpi\n      invalid\n    tag_166:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":15902:15925  I_uncomp[2*i] = temp[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15958:15962  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":15963:15964  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":15958:15965  temp[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":15940:15948  I_uncomp */\n      dup3\n        /* \"MLSAGVerify.sol\":15953:15954  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":15951:15952  i */\n      dup4\n        /* \"MLSAGVerify.sol\":15949:15950  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":15949:15952  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":15949:15954  2*i+1 */\n      add\n        /* \"MLSAGVerify.sol\":15940:15955  I_uncomp[2*i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_168\n      jumpi\n      invalid\n    tag_168:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":15940:15965  I_uncomp[2*i+1] = temp[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15836:15839  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":15810:15977  for (i = 0; i < I.length; i++) {\r... */\n      jump(tag_158)\n    tag_159:\n        /* \"MLSAGVerify.sol\":16004:16055  VerifyMLSAG(msgHash, I_uncomp, P_uncomp, signature) */\n      tag_169\n        /* \"MLSAGVerify.sol\":16016:16023  msgHash */\n      dup10\n        /* \"MLSAGVerify.sol\":16025:16033  I_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":16035:16043  P_uncomp */\n      dup6\n        /* \"MLSAGVerify.sol\":16045:16054  signature */\n      dup10\n        /* \"MLSAGVerify.sol\":16004:16015  VerifyMLSAG */\n      tag_102\n        /* \"MLSAGVerify.sol\":16004:16055  VerifyMLSAG(msgHash, I_uncomp, P_uncomp, signature) */\n      jump\t// in\n    tag_169:\n        /* \"MLSAGVerify.sol\":15997:16055  return VerifyMLSAG(msgHash, I_uncomp, P_uncomp, signature) */\n      swap5\n      pop\n        /* \"MLSAGVerify.sol\":15272:16063  function VerifyMLSAG_Compressed(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n      pop\n      pop\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":7348:8236  function VerifyLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_36:\n        /* \"MLSAGVerify.sol\":7466:7478  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":7533:7551  Variables memory v */\n      tag_170\n      jump\t// in(tag_171)\n    tag_170:\n        /* \"MLSAGVerify.sol\":7578:7579  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":7566:7567  I */\n      dup6\n        /* \"MLSAGVerify.sol\":7566:7574  I.length */\n      mload\n        /* \"MLSAGVerify.sol\":7566:7579  I.length != 2 */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":7562:7593  if (I.length != 2) return false */\n      iszero\n      tag_173\n      jumpi\n        /* \"MLSAGVerify.sol\":7588:7593  false */\n      0x0\n        /* \"MLSAGVerify.sol\":7581:7593  return false */\n      swap2\n      pop\n      jump(tag_172)\n        /* \"MLSAGVerify.sol\":7562:7593  if (I.length != 2) return false */\n    tag_173:\n        /* \"MLSAGVerify.sol\":7624:7625  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":7619:7620  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":7608:7609  P */\n      dup6\n        /* \"MLSAGVerify.sol\":7608:7616  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":7608:7620  P.length % 2 */\n      dup2\n      iszero\n      iszero\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      mod\n        /* \"MLSAGVerify.sol\":7608:7625  P.length % 2 != 0 */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":7604:7639  if (P.length % 2 != 0) return false */\n      iszero\n      tag_175\n      jumpi\n        /* \"MLSAGVerify.sol\":7634:7639  false */\n      0x0\n        /* \"MLSAGVerify.sol\":7627:7639  return false */\n      swap2\n      pop\n      jump(tag_172)\n        /* \"MLSAGVerify.sol\":7604:7639  if (P.length % 2 != 0) return false */\n    tag_175:\n        /* \"MLSAGVerify.sol\":7668:7669  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":7657:7658  P */\n      dup5\n        /* \"MLSAGVerify.sol\":7657:7665  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":7657:7669  P.length / 2 */\n      dup2\n      iszero\n      iszero\n      tag_176\n      jumpi\n      invalid\n    tag_176:\n      div\n        /* \"MLSAGVerify.sol\":7650:7651  v */\n      dup2\n        /* \"MLSAGVerify.sol\":7650:7653  v.n */\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":7650:7670  v.n = (P.length / 2) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7710:7711  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7706:7707  v */\n      dup2\n        /* \"MLSAGVerify.sol\":7706:7709  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7706:7711  v.n+1 */\n      add\n        /* \"MLSAGVerify.sol\":7685:7694  signature */\n      dup4\n        /* \"MLSAGVerify.sol\":7685:7701  signature.length */\n      mload\n        /* \"MLSAGVerify.sol\":7685:7712  signature.length != (v.n+1) */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":7681:7726  if (signature.length != (v.n+1)) return false */\n      iszero\n      tag_177\n      jumpi\n        /* \"MLSAGVerify.sol\":7721:7726  false */\n      0x0\n        /* \"MLSAGVerify.sol\":7714:7726  return false */\n      swap2\n      pop\n      jump(tag_172)\n        /* \"MLSAGVerify.sol\":7681:7726  if (signature.length != (v.n+1)) return false */\n    tag_177:\n        /* \"MLSAGVerify.sol\":7754:7763  signature */\n      dup3\n        /* \"MLSAGVerify.sol\":7764:7765  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":7754:7766  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7747:7748  v */\n      dup2\n        /* \"MLSAGVerify.sol\":7747:7751  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":7747:7766  v.ck = signature[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7842:7843  I */\n      dup5\n        /* \"MLSAGVerify.sol\":7844:7845  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":7842:7846  I[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7848:7849  I */\n      dup6\n        /* \"MLSAGVerify.sol\":7850:7851  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7848:7852  I[1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7809:7810  v */\n      dup3\n        /* \"MLSAGVerify.sol\":7809:7819  v.keyImage */\n      0x100\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7820:7821  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":7809:7822  v.keyImage[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_181\n      jumpi\n      invalid\n    tag_181:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":7824:7825  v */\n      dup4\n        /* \"MLSAGVerify.sol\":7824:7834  v.keyImage */\n      0x100\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7835:7836  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7824:7837  v.keyImage[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_182\n      jumpi\n      invalid\n    tag_182:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":7808:7853  (v.keyImage[0], v.keyImage[1]) = (I[0], I[1]) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7906:7907  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":7900:7901  v */\n      dup2\n        /* \"MLSAGVerify.sol\":7900:7903  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":7900:7907  v.i = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7895:8131  for (v.i = 0; v.i < v.n; v.i++) {\r... */\n    tag_183:\n        /* \"MLSAGVerify.sol\":7915:7916  v */\n      dup1\n        /* \"MLSAGVerify.sol\":7915:7918  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7909:7910  v */\n      dup2\n        /* \"MLSAGVerify.sol\":7909:7912  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7909:7918  v.i < v.n */\n      lt\n        /* \"MLSAGVerify.sol\":7895:8131  for (v.i = 0; v.i < v.n; v.i++) {\r... */\n      iszero\n      tag_184\n      jumpi\n        /* \"MLSAGVerify.sol\":7972:7973  P */\n      dup4\n        /* \"MLSAGVerify.sol\":7976:7977  v */\n      dup2\n        /* \"MLSAGVerify.sol\":7976:7979  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7974:7975  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":7974:7979  2*v.i */\n      mul\n        /* \"MLSAGVerify.sol\":7972:7980  P[2*v.i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_186\n      jumpi\n      invalid\n    tag_186:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7982:7983  P */\n      dup5\n        /* \"MLSAGVerify.sol\":7990:7991  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7986:7987  v */\n      dup4\n        /* \"MLSAGVerify.sol\":7986:7989  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7984:7985  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":7984:7989  2*v.i */\n      mul\n        /* \"MLSAGVerify.sol\":7984:7991  2*v.i+1 */\n      add\n        /* \"MLSAGVerify.sol\":7982:7992  P[2*v.i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7943:7944  v */\n      dup3\n        /* \"MLSAGVerify.sol\":7943:7951  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7952:7953  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":7943:7954  v.point1[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_188\n      jumpi\n      invalid\n    tag_188:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":7956:7957  v */\n      dup4\n        /* \"MLSAGVerify.sol\":7956:7964  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":7965:7966  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":7956:7967  v.point1[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_189\n      jumpi\n      invalid\n    tag_189:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":7942:7993  (v.point1[0], v.point1[1]) = (P[2*v.i], P[2*v.i+1]) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":8036:8119  CalculateLinkableRingSegment(msgHash, v.ck, signature[v.i+1], v.point1, v.keyImage) */\n      tag_190\n        /* \"MLSAGVerify.sol\":8065:8072  msgHash */\n      dup7\n        /* \"MLSAGVerify.sol\":8074:8075  v */\n      dup3\n        /* \"MLSAGVerify.sol\":8074:8078  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8080:8089  signature */\n      dup6\n        /* \"MLSAGVerify.sol\":8094:8095  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":8090:8091  v */\n      dup6\n        /* \"MLSAGVerify.sol\":8090:8093  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8090:8095  v.i+1 */\n      add\n        /* \"MLSAGVerify.sol\":8080:8096  signature[v.i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8098:8099  v */\n      dup5\n        /* \"MLSAGVerify.sol\":8098:8106  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8108:8109  v */\n      dup6\n        /* \"MLSAGVerify.sol\":8108:8118  v.keyImage */\n      0x100\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8036:8064  CalculateLinkableRingSegment */\n      tag_123\n        /* \"MLSAGVerify.sol\":8036:8119  CalculateLinkableRingSegment(msgHash, v.ck, signature[v.i+1], v.point1, v.keyImage) */\n      jump\t// in\n    tag_190:\n        /* \"MLSAGVerify.sol\":8029:8030  v */\n      dup2\n        /* \"MLSAGVerify.sol\":8029:8033  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":8029:8119  v.ck = CalculateLinkableRingSegment(msgHash, v.ck, signature[v.i+1], v.point1, v.keyImage) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7920:7921  v */\n      dup1\n        /* \"MLSAGVerify.sol\":7920:7923  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":7920:7925  v.i++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      0x1\n      add\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":7895:8131  for (v.i = 0; v.i < v.n; v.i++) {\r... */\n      jump(tag_183)\n    tag_184:\n        /* \"MLSAGVerify.sol\":8215:8224  signature */\n      dup3\n        /* \"MLSAGVerify.sol\":8225:8226  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":8215:8227  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8207:8208  v */\n      dup2\n        /* \"MLSAGVerify.sol\":8207:8211  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8207:8227  v.ck == signature[0] */\n      eq\n        /* \"MLSAGVerify.sol\":8196:8228  success = (v.ck == signature[0]) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":7348:8236  function VerifyLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_172:\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":1459:1637  function StartRing(uint256 msgHash, uint256 alpha)\r... */\n    tag_39:\n        /* \"MLSAGVerify.sol\":1544:1555  uint256 ckp */\n      0x0\n        /* \"MLSAGVerify.sol\":1579:1629  RingHashFunction(msgHash, StartRing_NoHash(alpha)) */\n      tag_194\n        /* \"MLSAGVerify.sol\":1596:1603  msgHash */\n      dup4\n        /* \"MLSAGVerify.sol\":1605:1628  StartRing_NoHash(alpha) */\n      tag_195\n        /* \"MLSAGVerify.sol\":1622:1627  alpha */\n      dup5\n        /* \"MLSAGVerify.sol\":1605:1621  StartRing_NoHash */\n      tag_108\n        /* \"MLSAGVerify.sol\":1605:1628  StartRing_NoHash(alpha) */\n      jump\t// in\n    tag_195:\n        /* \"MLSAGVerify.sol\":1579:1595  RingHashFunction */\n      tag_75\n        /* \"MLSAGVerify.sol\":1579:1629  RingHashFunction(msgHash, StartRing_NoHash(alpha)) */\n      jump\t// in\n    tag_194:\n        /* \"MLSAGVerify.sol\":1573:1629  ckp = RingHashFunction(msgHash, StartRing_NoHash(alpha)) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":1459:1637  function StartRing(uint256 msgHash, uint256 alpha)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":3234:3529  function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r... */\n    tag_42:\n        /* \"MLSAGVerify.sol\":3331:3346  uint256[2] Lout */\n      tag_196\n      jump\t// in(tag_128)\n    tag_196:\n        /* \"MLSAGVerify.sol\":3348:3363  uint256[2] Rout */\n      tag_197\n      jump\t// in(tag_128)\n    tag_197:\n        /* \"MLSAGVerify.sol\":3388:3394  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3388:3403  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":3404:3410  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3404:3416  ecMath.GetG1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae5d39f6\n        /* \"MLSAGVerify.sol\":3404:3418  ecMath.GetG1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_199:\n        /* \"MLSAGVerify.sol\":3404:3418  ecMath.GetG1() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_200:\n        /* \"MLSAGVerify.sol\":3404:3418  ecMath.GetG1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_201\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_201:\n        /* \"MLSAGVerify.sol\":3404:3418  ecMath.GetG1() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3420:3425  alpha */\n      dup7\n        /* \"MLSAGVerify.sol\":3388:3426  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_202:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_203\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_202)\n    tag_203:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3388:3426  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"MLSAGVerify.sol\":3388:3426  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"MLSAGVerify.sol\":3388:3426  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n        /* \"MLSAGVerify.sol\":3388:3426  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3381:3426  Lout = ecMath.Multiply(ecMath.GetG1(), alpha) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":3454:3460  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3454:3472  ecMath.HashToPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6032fc3f\n        /* \"MLSAGVerify.sol\":3473:3474  P */\n      dup5\n        /* \"MLSAGVerify.sol\":3454:3475  ecMath.HashToPoint(P) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_208:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_208)\n    tag_209:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3454:3475  ecMath.HashToPoint(P) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_211\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_211:\n        /* \"MLSAGVerify.sol\":3454:3475  ecMath.HashToPoint(P) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_212\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_212:\n        /* \"MLSAGVerify.sol\":3454:3475  ecMath.HashToPoint(P) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_213:\n        /* \"MLSAGVerify.sol\":3454:3475  ecMath.HashToPoint(P) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3447:3475  Rout = ecMath.HashToPoint(P) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":3493:3499  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3493:3508  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":3509:3513  Rout */\n      dup3\n        /* \"MLSAGVerify.sol\":3515:3520  alpha */\n      dup7\n        /* \"MLSAGVerify.sol\":3493:3521  ecMath.Multiply(Rout, alpha) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_214:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_214)\n    tag_215:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3493:3521  ecMath.Multiply(Rout, alpha) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_217\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_217:\n        /* \"MLSAGVerify.sol\":3493:3521  ecMath.Multiply(Rout, alpha) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_218:\n        /* \"MLSAGVerify.sol\":3493:3521  ecMath.Multiply(Rout, alpha) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_219\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_219:\n        /* \"MLSAGVerify.sol\":3493:3521  ecMath.Multiply(Rout, alpha) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3486:3521  Rout = ecMath.Multiply(Rout, alpha) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":3234:3529  function StartLinkableRing_NoHash(uint256 alpha, uint256[2] P)\r... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":1649:1954  function CalculateRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P)\r... */\n    tag_51:\n        /* \"MLSAGVerify.sol\":1758:1773  uint256[2] Pout */\n      tag_220\n      jump\t// in(tag_128)\n    tag_220:\n        /* \"MLSAGVerify.sol\":1791:1813  uint256[2] memory temp */\n      tag_221\n      jump\t// in(tag_128)\n    tag_221:\n        /* \"MLSAGVerify.sol\":1831:1837  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1831:1846  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":1847:1853  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1847:1859  ecMath.GetG1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae5d39f6\n        /* \"MLSAGVerify.sol\":1847:1861  ecMath.GetG1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_223\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_223:\n        /* \"MLSAGVerify.sol\":1847:1861  ecMath.GetG1() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_224:\n        /* \"MLSAGVerify.sol\":1847:1861  ecMath.GetG1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_225\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_225:\n        /* \"MLSAGVerify.sol\":1847:1861  ecMath.GetG1() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1863:1865  sk */\n      dup7\n        /* \"MLSAGVerify.sol\":1831:1866  ecMath.Multiply(ecMath.GetG1(), sk) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_226:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_226)\n    tag_227:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1831:1866  ecMath.Multiply(ecMath.GetG1(), sk) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_229\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_229:\n        /* \"MLSAGVerify.sol\":1831:1866  ecMath.Multiply(ecMath.GetG1(), sk) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_230\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_230:\n        /* \"MLSAGVerify.sol\":1831:1866  ecMath.Multiply(ecMath.GetG1(), sk) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_231:\n        /* \"MLSAGVerify.sol\":1831:1866  ecMath.Multiply(ecMath.GetG1(), sk) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1824:1866  Pout = ecMath.Multiply(ecMath.GetG1(), sk) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":1884:1890  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1884:1899  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":1900:1901  P */\n      dup5\n        /* \"MLSAGVerify.sol\":1903:1905  ck */\n      dup8\n        /* \"MLSAGVerify.sol\":1884:1906  ecMath.Multiply(P, ck) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_232:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_233\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_232)\n    tag_233:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1884:1906  ecMath.Multiply(P, ck) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_235\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_235:\n        /* \"MLSAGVerify.sol\":1884:1906  ecMath.Multiply(P, ck) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_236\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_236:\n        /* \"MLSAGVerify.sol\":1884:1906  ecMath.Multiply(P, ck) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_237\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_237:\n        /* \"MLSAGVerify.sol\":1884:1906  ecMath.Multiply(P, ck) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1877:1906  temp = ecMath.Multiply(P, ck) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":1924:1930  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1924:1934  ecMath.Add */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc753fe8\n        /* \"MLSAGVerify.sol\":1935:1939  Pout */\n      dup4\n        /* \"MLSAGVerify.sol\":1941:1945  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":1924:1946  ecMath.Add(Pout, temp) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_238:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_239\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_238)\n    tag_239:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1924:1946  ecMath.Add(Pout, temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_241:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_242\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_241)\n    tag_242:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1924:1946  ecMath.Add(Pout, temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_244\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_244:\n        /* \"MLSAGVerify.sol\":1924:1946  ecMath.Add(Pout, temp) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_245\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_245:\n        /* \"MLSAGVerify.sol\":1924:1946  ecMath.Add(Pout, temp) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_246\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_246:\n        /* \"MLSAGVerify.sol\":1924:1946  ecMath.Add(Pout, temp) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1917:1946  Pout = ecMath.Add(Pout, temp) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":1649:1954  function CalculateRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P)\r... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":3541:3865  function StartLinkableRing(uint256 msgHash, uint256 alpha, uint256[2] P)\r... */\n    tag_57:\n        /* \"MLSAGVerify.sol\":3648:3659  uint256 ckp */\n      0x0\n        /* \"MLSAGVerify.sol\":3677:3699  uint256[2] memory left */\n      tag_247\n      jump\t// in(tag_128)\n    tag_247:\n        /* \"MLSAGVerify.sol\":3710:3733  uint256[2] memory right */\n      tag_248\n      jump\t// in(tag_128)\n    tag_248:\n        /* \"MLSAGVerify.sol\":3760:3794  StartLinkableRing_NoHash(alpha, P) */\n      tag_250\n        /* \"MLSAGVerify.sol\":3785:3790  alpha */\n      dup6\n        /* \"MLSAGVerify.sol\":3792:3793  P */\n      dup6\n        /* \"MLSAGVerify.sol\":3760:3784  StartLinkableRing_NoHash */\n      tag_42\n        /* \"MLSAGVerify.sol\":3760:3794  StartLinkableRing_NoHash(alpha, P) */\n      jump\t// in\n    tag_250:\n        /* \"MLSAGVerify.sol\":3744:3794  (left, right) = StartLinkableRing_NoHash(alpha, P) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3811:3857  LinkableRingHashFunction(msgHash, left, right) */\n      tag_251\n        /* \"MLSAGVerify.sol\":3836:3843  msgHash */\n      dup7\n        /* \"MLSAGVerify.sol\":3845:3849  left */\n      dup4\n        /* \"MLSAGVerify.sol\":3851:3856  right */\n      dup4\n        /* \"MLSAGVerify.sol\":3811:3835  LinkableRingHashFunction */\n      tag_72\n        /* \"MLSAGVerify.sol\":3811:3857  LinkableRingHashFunction(msgHash, left, right) */\n      jump\t// in\n    tag_251:\n        /* \"MLSAGVerify.sol\":3805:3857  ckp = LinkableRingHashFunction(msgHash, left, right) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":3541:3865  function StartLinkableRing(uint256 msgHash, uint256 alpha, uint256[2] P)\r... */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":11834:12363  function VerifyMSAG_Compressed(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_60:\n        /* \"MLSAGVerify.sol\":11961:11973  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":11991:12013  uint256[2] memory temp */\n      tag_252\n      jump\t// in(tag_128)\n    tag_252:\n        /* \"MLSAGVerify.sol\":12024:12049  uint256[] memory P_uncomp */\n      0x60\n        /* \"MLSAGVerify.sol\":12098:12107  uint256 i */\n      0x0\n        /* \"MLSAGVerify.sol\":12075:12076  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":12066:12067  P */\n      dup7\n        /* \"MLSAGVerify.sol\":12066:12074  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":12066:12076  P.length*2 */\n      mul\n        /* \"MLSAGVerify.sol\":12052:12077  new uint256[](P.length*2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":12052:12077  new uint256[](P.length*2) */\n      swap1\n      pop\n    tag_254:\n      pop\n        /* \"MLSAGVerify.sol\":12024:12077  uint256[] memory P_uncomp = new uint256[](P.length*2) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":12127:12128  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":12123:12128  i = 0 */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":12118:12285  for (i = 0; i < P.length; i++) {\r... */\n    tag_255:\n        /* \"MLSAGVerify.sol\":12134:12135  P */\n      dup6\n        /* \"MLSAGVerify.sol\":12134:12142  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":12130:12131  i */\n      dup2\n        /* \"MLSAGVerify.sol\":12130:12142  i < P.length */\n      lt\n        /* \"MLSAGVerify.sol\":12118:12285  for (i = 0; i < P.length; i++) {\r... */\n      iszero\n      tag_256\n      jumpi\n        /* \"MLSAGVerify.sol\":12171:12177  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":12171:12189  ecMath.ExpandPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5da7f69e\n        /* \"MLSAGVerify.sol\":12190:12191  P */\n      dup8\n        /* \"MLSAGVerify.sol\":12192:12193  i */\n      dup4\n        /* \"MLSAGVerify.sol\":12190:12194  P[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_258\n      jumpi\n      invalid\n    tag_258:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":12171:12195  ecMath.ExpandPoint(P[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n        /* \"MLSAGVerify.sol\":12171:12195  ecMath.ExpandPoint(P[i]) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_260\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_260:\n        /* \"MLSAGVerify.sol\":12171:12195  ecMath.ExpandPoint(P[i]) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_261:\n        /* \"MLSAGVerify.sol\":12171:12195  ecMath.ExpandPoint(P[i]) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":12164:12195  temp = ecMath.ExpandPoint(P[i]) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":12226:12230  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":12231:12232  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":12226:12233  temp[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_262\n      jumpi\n      invalid\n    tag_262:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":12210:12218  P_uncomp */\n      dup3\n        /* \"MLSAGVerify.sol\":12221:12222  i */\n      dup3\n        /* \"MLSAGVerify.sol\":12219:12220  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":12219:12222  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":12210:12223  P_uncomp[2*i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_263\n      jumpi\n      invalid\n    tag_263:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":12210:12233  P_uncomp[2*i] = temp[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":12266:12270  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":12271:12272  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":12266:12273  temp[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_264\n      jumpi\n      invalid\n    tag_264:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":12248:12256  P_uncomp */\n      dup3\n        /* \"MLSAGVerify.sol\":12261:12262  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":12259:12260  i */\n      dup4\n        /* \"MLSAGVerify.sol\":12257:12258  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":12257:12260  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":12257:12262  2*i+1 */\n      add\n        /* \"MLSAGVerify.sol\":12248:12263  P_uncomp[2*i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_265\n      jumpi\n      invalid\n    tag_265:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":12248:12273  P_uncomp[2*i+1] = temp[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":12144:12147  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":12118:12285  for (i = 0; i < P.length; i++) {\r... */\n      jump(tag_255)\n    tag_256:\n        /* \"MLSAGVerify.sol\":12312:12355  VerifyMSAG(m, msgHash, P_uncomp, signature) */\n      tag_266\n        /* \"MLSAGVerify.sol\":12323:12324  m */\n      dup9\n        /* \"MLSAGVerify.sol\":12326:12333  msgHash */\n      dup9\n        /* \"MLSAGVerify.sol\":12335:12343  P_uncomp */\n      dup5\n        /* \"MLSAGVerify.sol\":12345:12354  signature */\n      dup9\n        /* \"MLSAGVerify.sol\":12312:12322  VerifyMSAG */\n      tag_66\n        /* \"MLSAGVerify.sol\":12312:12355  VerifyMSAG(m, msgHash, P_uncomp, signature) */\n      jump\t// in\n    tag_266:\n        /* \"MLSAGVerify.sol\":12305:12355  return VerifyMSAG(m, msgHash, P_uncomp, signature) */\n      swap4\n      pop\n        /* \"MLSAGVerify.sol\":11834:12363  function VerifyMSAG_Compressed(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n      pop\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":4832:5295  function Keccak256OfArray(uint256[] array)\r... */\n    tag_63:\n        /* \"MLSAGVerify.sol\":4905:4916  uint256 out */\n      0x0\n        /* \"MLSAGVerify.sol\":4934:4945  uint256 len */\n      dup1\n        /* \"MLSAGVerify.sol\":4971:4993  uint256[1] memory temp */\n      tag_267\n      jump\t// in(tag_268)\n    tag_267:\n        /* \"MLSAGVerify.sol\":4948:4953  array */\n      dup4\n        /* \"MLSAGVerify.sol\":4948:4960  array.length */\n      mload\n        /* \"MLSAGVerify.sol\":4934:4960  uint256 len = array.length */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":5087:5091  0x40 */\n      0x40\n        /* \"MLSAGVerify.sol\":5081:5092  mload(0x40) */\n      mload\n        /* \"MLSAGVerify.sol\":5133:5137  0x20 */\n      0x20\n        /* \"MLSAGVerify.sol\":5126:5130  0x20 */\n      dup1\n        /* \"MLSAGVerify.sol\":5121:5124  len */\n      dup5\n        /* \"MLSAGVerify.sol\":5117:5131  mul(len, 0x20) */\n      mul\n        /* \"MLSAGVerify.sol\":5113:5138  add(mul(len, 0x20), 0x20) */\n      add\n        /* \"MLSAGVerify.sol\":5110:5111  p */\n      dup2\n        /* \"MLSAGVerify.sol\":5103:5139  mstore(p, add(mul(len, 0x20), 0x20)) */\n      mstore\n        /* \"MLSAGVerify.sol\":5248:5249  p */\n      dup1\n        /* \"MLSAGVerify.sol\":5242:5250  mload(p) */\n      mload\n        /* \"MLSAGVerify.sol\":5235:5240  array */\n      dup6\n        /* \"MLSAGVerify.sol\":5225:5251  keccak256(array, mload(p)) */\n      keccak256\n        /* \"MLSAGVerify.sol\":5219:5223  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":5212:5252  mstore(temp, keccak256(array, mload(p))) */\n      mstore\n        /* \"MLSAGVerify.sol\":5060:5260  {\r... */\n      pop\n        /* \"MLSAGVerify.sol\":5280:5284  temp */\n      dup1\n        /* \"MLSAGVerify.sol\":5285:5286  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":5280:5287  temp[0] */\n      0x1\n      dup2\n      lt\n      iszero\n      iszero\n      tag_270\n      jumpi\n      invalid\n    tag_270:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":5274:5287  out = temp[0] */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":4832:5295  function Keccak256OfArray(uint256[] array)\r... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":9671:11410  function VerifyMSAG(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_66:\n        /* \"MLSAGVerify.sol\":9787:9799  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":9854:9872  Variables memory v */\n      tag_271\n      jump\t// in(tag_171)\n    tag_271:\n        /* \"MLSAGVerify.sol\":10113:10131  uint256[] memory c */\n      0x60\n        /* \"MLSAGVerify.sol\":9889:9890  m */\n      dup7\n        /* \"MLSAGVerify.sol\":9883:9884  v */\n      dup3\n        /* \"MLSAGVerify.sol\":9883:9886  v.m */\n      0x0\n      add\n        /* \"MLSAGVerify.sol\":9883:9890  v.m = m */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":9927:9928  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":9919:9920  v */\n      dup3\n        /* \"MLSAGVerify.sol\":9919:9922  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":9917:9918  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":9917:9922  2*v.m */\n      mul\n        /* \"MLSAGVerify.sol\":9905:9906  P */\n      dup7\n        /* \"MLSAGVerify.sol\":9905:9913  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":9905:9923  P.length % (2*v.m) */\n      dup2\n      iszero\n      iszero\n      tag_273\n      jumpi\n      invalid\n    tag_273:\n      mod\n        /* \"MLSAGVerify.sol\":9905:9928  P.length % (2*v.m) != 0 */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":9901:9942  if (P.length % (2*v.m) != 0) return false */\n      iszero\n      tag_274\n      jumpi\n        /* \"MLSAGVerify.sol\":9937:9942  false */\n      0x0\n        /* \"MLSAGVerify.sol\":9930:9942  return false */\n      swap3\n      pop\n      jump(tag_272)\n        /* \"MLSAGVerify.sol\":9901:9942  if (P.length % (2*v.m) != 0) return false */\n    tag_274:\n        /* \"MLSAGVerify.sol\":9983:9984  v */\n      dup2\n        /* \"MLSAGVerify.sol\":9983:9986  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":9981:9982  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":9981:9986  2*v.m */\n      mul\n        /* \"MLSAGVerify.sol\":9969:9970  P */\n      dup6\n        /* \"MLSAGVerify.sol\":9969:9977  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":9969:9987  P.length / (2*v.m) */\n      dup2\n      iszero\n      iszero\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n      div\n        /* \"MLSAGVerify.sol\":9963:9964  v */\n      dup3\n        /* \"MLSAGVerify.sol\":9963:9966  v.n */\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":9963:9987  v.n = P.length / (2*v.m) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10031:10032  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10027:10028  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10027:10030  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10023:10024  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10023:10026  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10023:10030  v.m*v.n */\n      mul\n        /* \"MLSAGVerify.sol\":10023:10032  v.m*v.n+1 */\n      add\n        /* \"MLSAGVerify.sol\":10002:10011  signature */\n      dup5\n        /* \"MLSAGVerify.sol\":10002:10018  signature.length */\n      mload\n        /* \"MLSAGVerify.sol\":10002:10033  signature.length != (v.m*v.n+1) */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":9998:10047  if (signature.length != (v.m*v.n+1)) return false */\n      iszero\n      tag_276\n      jumpi\n        /* \"MLSAGVerify.sol\":10042:10047  false */\n      0x0\n        /* \"MLSAGVerify.sol\":10035:10047  return false */\n      swap3\n      pop\n      jump(tag_272)\n        /* \"MLSAGVerify.sol\":9998:10047  if (signature.length != (v.m*v.n+1)) return false */\n    tag_276:\n        /* \"MLSAGVerify.sol\":10154:10155  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10150:10151  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10150:10153  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10148:10149  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":10148:10153  2*v.m */\n      mul\n        /* \"MLSAGVerify.sol\":10148:10155  2*v.m+1 */\n      add\n        /* \"MLSAGVerify.sol\":10134:10156  new uint256[](2*v.m+1) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_277\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":10134:10156  new uint256[](2*v.m+1) */\n      swap1\n      pop\n    tag_277:\n      pop\n        /* \"MLSAGVerify.sol\":10113:10156  uint256[] memory c = new uint256[](2*v.m+1) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":10174:10181  msgHash */\n      dup6\n        /* \"MLSAGVerify.sol\":10167:10168  c */\n      dup2\n        /* \"MLSAGVerify.sol\":10169:10170  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":10167:10171  c[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":10167:10181  c[0] = msgHash */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10213:10214  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":10207:10208  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10207:10210  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":10207:10214  v.i = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10202:11165  for (v.i = 0; v.i < v.m; v.i++) {\r... */\n    tag_279:\n        /* \"MLSAGVerify.sol\":10222:10223  v */\n      dup2\n        /* \"MLSAGVerify.sol\":10222:10225  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10216:10217  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10216:10219  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10216:10225  v.i < v.m */\n      lt\n        /* \"MLSAGVerify.sol\":10202:11165  for (v.i = 0; v.i < v.m; v.i++) {\r... */\n      iszero\n      tag_280\n      jumpi\n        /* \"MLSAGVerify.sol\":10256:10265  signature */\n      dup4\n        /* \"MLSAGVerify.sol\":10266:10267  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":10256:10268  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10249:10250  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10249:10253  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":10249:10268  v.ck = signature[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10400:10401  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":10394:10395  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10394:10397  v.j */\n      0x60\n      add\n        /* \"MLSAGVerify.sol\":10394:10401  v.j = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10389:10675  for (v.j = 0; v.j < (v.n-1); v.j++) {\r... */\n    tag_283:\n        /* \"MLSAGVerify.sol\":10414:10415  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10410:10411  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10410:10413  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10410:10415  v.n-1 */\n      sub\n        /* \"MLSAGVerify.sol\":10403:10404  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10403:10406  v.j */\n      0x60\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10403:10416  v.j < (v.n-1) */\n      lt\n        /* \"MLSAGVerify.sol\":10389:10675  for (v.j = 0; v.j < (v.n-1); v.j++) {\r... */\n      iszero\n      tag_284\n      jumpi\n        /* \"MLSAGVerify.sol\":10464:10465  v */\n      dup2\n        /* \"MLSAGVerify.sol\":10464:10467  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10458:10459  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10458:10461  v.j */\n      0x60\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10454:10455  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10454:10457  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10454:10461  v.m*v.j */\n      mul\n        /* \"MLSAGVerify.sol\":10454:10467  v.m*v.j + v.i */\n      add\n        /* \"MLSAGVerify.sol\":10444:10445  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10444:10451  v.index */\n      0xa0\n      add\n        /* \"MLSAGVerify.sol\":10444:10467  v.index = v.m*v.j + v.i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10516:10517  P */\n      dup5\n        /* \"MLSAGVerify.sol\":10520:10521  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10520:10527  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10518:10519  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":10518:10527  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":10516:10528  P[2*v.index] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_286\n      jumpi\n      invalid\n    tag_286:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10530:10531  P */\n      dup6\n        /* \"MLSAGVerify.sol\":10542:10543  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10534:10535  v */\n      dup5\n        /* \"MLSAGVerify.sol\":10534:10541  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10532:10533  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":10532:10541  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":10532:10543  2*v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":10530:10544  P[2*v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_287\n      jumpi\n      invalid\n    tag_287:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10487:10488  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10487:10495  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10496:10497  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":10487:10498  v.point1[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_288\n      jumpi\n      invalid\n    tag_288:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":10500:10501  v */\n      dup5\n        /* \"MLSAGVerify.sol\":10500:10508  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10509:10510  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10500:10511  v.point1[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_289\n      jumpi\n      invalid\n    tag_289:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":10486:10545  (v.point1[0], v.point1[1]) = (P[2*v.index], P[2*v.index+1]) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10592:10659  CalculateRingSegment(msgHash, v.ck, signature[v.index+1], v.point1) */\n      tag_290\n        /* \"MLSAGVerify.sol\":10613:10620  msgHash */\n      dup7\n        /* \"MLSAGVerify.sol\":10622:10623  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10622:10626  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10628:10637  signature */\n      dup7\n        /* \"MLSAGVerify.sol\":10646:10647  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10638:10639  v */\n      dup7\n        /* \"MLSAGVerify.sol\":10638:10645  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10638:10647  v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":10628:10648  signature[v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_291\n      jumpi\n      invalid\n    tag_291:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10650:10651  v */\n      dup6\n        /* \"MLSAGVerify.sol\":10650:10658  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10592:10612  CalculateRingSegment */\n      tag_117\n        /* \"MLSAGVerify.sol\":10592:10659  CalculateRingSegment(msgHash, v.ck, signature[v.index+1], v.point1) */\n      jump\t// in\n    tag_290:\n        /* \"MLSAGVerify.sol\":10585:10586  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10585:10589  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":10585:10659  v.ck = CalculateRingSegment(msgHash, v.ck, signature[v.index+1], v.point1) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10418:10419  v */\n      dup2\n        /* \"MLSAGVerify.sol\":10418:10421  v.j */\n      0x60\n      add\n        /* \"MLSAGVerify.sol\":10418:10423  v.j++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      0x1\n      add\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10389:10675  for (v.j = 0; v.j < (v.n-1); v.j++) {\r... */\n      jump(tag_283)\n    tag_284:\n        /* \"MLSAGVerify.sol\":10813:10814  v */\n      dup2\n        /* \"MLSAGVerify.sol\":10813:10816  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10808:10809  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10804:10805  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10804:10807  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10804:10809  v.n-1 */\n      sub\n        /* \"MLSAGVerify.sol\":10799:10800  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10799:10802  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10799:10810  v.m*(v.n-1) */\n      mul\n        /* \"MLSAGVerify.sol\":10799:10816  v.m*(v.n-1) + v.i */\n      add\n        /* \"MLSAGVerify.sol\":10789:10790  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10789:10796  v.index */\n      0xa0\n      add\n        /* \"MLSAGVerify.sol\":10789:10816  v.index = v.m*(v.n-1) + v.i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10861:10862  P */\n      dup5\n        /* \"MLSAGVerify.sol\":10865:10866  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10865:10872  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10863:10864  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":10863:10872  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":10861:10873  P[2*v.index] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_292\n      jumpi\n      invalid\n    tag_292:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10875:10876  P */\n      dup6\n        /* \"MLSAGVerify.sol\":10887:10888  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10879:10880  v */\n      dup5\n        /* \"MLSAGVerify.sol\":10879:10886  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10877:10878  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":10877:10886  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":10877:10888  2*v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":10875:10889  P[2*v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_293\n      jumpi\n      invalid\n    tag_293:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10832:10833  v */\n      dup4\n        /* \"MLSAGVerify.sol\":10832:10840  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10841:10842  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":10832:10843  v.point1[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_294\n      jumpi\n      invalid\n    tag_294:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":10845:10846  v */\n      dup5\n        /* \"MLSAGVerify.sol\":10845:10853  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10854:10855  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10845:10856  v.point1[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_295\n      jumpi\n      invalid\n    tag_295:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":10831:10890  (v.point1[0], v.point1[1]) = (P[2*v.index], P[2*v.index+1]) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10917:10982  CalculateRingSegment_NoHash(v.ck, signature[v.index+1], v.point1) */\n      tag_296\n        /* \"MLSAGVerify.sol\":10945:10946  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10945:10949  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10951:10960  signature */\n      dup6\n        /* \"MLSAGVerify.sol\":10969:10970  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":10961:10962  v */\n      dup6\n        /* \"MLSAGVerify.sol\":10961:10968  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10961:10970  v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":10951:10971  signature[v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_297\n      jumpi\n      invalid\n    tag_297:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10973:10974  v */\n      dup5\n        /* \"MLSAGVerify.sol\":10973:10981  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":10917:10944  CalculateRingSegment_NoHash */\n      tag_51\n        /* \"MLSAGVerify.sol\":10917:10982  CalculateRingSegment_NoHash(v.ck, signature[v.index+1], v.point1) */\n      jump\t// in\n    tag_296:\n        /* \"MLSAGVerify.sol\":10906:10907  v */\n      dup3\n        /* \"MLSAGVerify.sol\":10906:10914  v.point1 */\n      0xc0\n      add\n        /* \"MLSAGVerify.sol\":10906:10982  v.point1 = CalculateRingSegment_NoHash(v.ck, signature[v.index+1], v.point1) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":11072:11073  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":11070:11071  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":11066:11067  v */\n      dup4\n        /* \"MLSAGVerify.sol\":11066:11069  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11066:11071  v.i*2 */\n      mul\n        /* \"MLSAGVerify.sol\":11066:11073  v.i*2+1 */\n      add\n        /* \"MLSAGVerify.sol\":11056:11057  v */\n      dup3\n        /* \"MLSAGVerify.sol\":11056:11063  v.index */\n      0xa0\n      add\n        /* \"MLSAGVerify.sol\":11056:11073  v.index = v.i*2+1 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":11101:11102  v */\n      dup2\n        /* \"MLSAGVerify.sol\":11101:11109  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11110:11111  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":11101:11112  v.point1[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_298\n      jumpi\n      invalid\n    tag_298:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11088:11089  c */\n      dup2\n        /* \"MLSAGVerify.sol\":11090:11091  v */\n      dup4\n        /* \"MLSAGVerify.sol\":11090:11097  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11088:11098  c[v.index] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_299\n      jumpi\n      invalid\n    tag_299:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":11088:11112  c[v.index] = v.point1[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":11142:11143  v */\n      dup2\n        /* \"MLSAGVerify.sol\":11142:11150  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11151:11152  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":11142:11153  v.point1[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_300\n      jumpi\n      invalid\n    tag_300:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11127:11128  c */\n      dup2\n        /* \"MLSAGVerify.sol\":11137:11138  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":11129:11130  v */\n      dup5\n        /* \"MLSAGVerify.sol\":11129:11136  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11129:11138  v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":11127:11139  c[v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_301\n      jumpi\n      invalid\n    tag_301:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":11127:11153  c[v.index+1] = v.point1[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10227:10228  v */\n      dup2\n        /* \"MLSAGVerify.sol\":10227:10230  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":10227:10232  v.i++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      0x1\n      add\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":10202:11165  for (v.i = 0; v.i < v.m; v.i++) {\r... */\n      jump(tag_279)\n    tag_280:\n        /* \"MLSAGVerify.sol\":11285:11304  Keccak256OfArray(c) */\n      tag_302\n        /* \"MLSAGVerify.sol\":11302:11303  c */\n      dup2\n        /* \"MLSAGVerify.sol\":11285:11301  Keccak256OfArray */\n      tag_63\n        /* \"MLSAGVerify.sol\":11285:11304  Keccak256OfArray(c) */\n      jump\t// in\n    tag_302:\n        /* \"MLSAGVerify.sol\":11278:11279  v */\n      dup3\n        /* \"MLSAGVerify.sol\":11278:11282  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":11278:11304  v.ck = Keccak256OfArray(c) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":11389:11398  signature */\n      dup4\n        /* \"MLSAGVerify.sol\":11399:11400  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":11389:11401  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_303\n      jumpi\n      invalid\n    tag_303:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11381:11382  v */\n      dup3\n        /* \"MLSAGVerify.sol\":11381:11385  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":11381:11401  v.ck == signature[0] */\n      eq\n        /* \"MLSAGVerify.sol\":11370:11402  success = (v.ck == signature[0]) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":9671:11410  function VerifyMSAG(uint256 m, uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_272:\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":2362:2612  function CompleteRing(uint256 alpha, uint256 c, uint256 xk)\r... */\n    tag_69:\n        /* \"MLSAGVerify.sol\":2452:2461  uint256 s */\n      0x0\n        /* \"MLSAGVerify.sol\":2497:2503  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":2497:2513  ecMath.GetNCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1ff535b\n        /* \"MLSAGVerify.sol\":2497:2515  ecMath.GetNCurve() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_305\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_305:\n        /* \"MLSAGVerify.sol\":2497:2515  ecMath.GetNCurve() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_306\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_306:\n        /* \"MLSAGVerify.sol\":2497:2515  ecMath.GetNCurve() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_307\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_307:\n        /* \"MLSAGVerify.sol\":2497:2515  ecMath.GetNCurve() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":2483:2516  mulmod(c, xk, ecMath.GetNCurve()) */\n      dup1\n      iszero\n      iszero\n      tag_308\n      jumpi\n      invalid\n    tag_308:\n        /* \"MLSAGVerify.sol\":2493:2495  xk */\n      dup3\n        /* \"MLSAGVerify.sol\":2490:2491  c */\n      dup5\n        /* \"MLSAGVerify.sol\":2483:2516  mulmod(c, xk, ecMath.GetNCurve()) */\n      mulmod\n        /* \"MLSAGVerify.sol\":2479:2516  s = mulmod(c, xk, ecMath.GetNCurve()) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":2552:2553  s */\n      dup1\n        /* \"MLSAGVerify.sol\":2531:2537  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":2531:2547  ecMath.GetNCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1ff535b\n        /* \"MLSAGVerify.sol\":2531:2549  ecMath.GetNCurve() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_309\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_309:\n        /* \"MLSAGVerify.sol\":2531:2549  ecMath.GetNCurve() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_310\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_310:\n        /* \"MLSAGVerify.sol\":2531:2549  ecMath.GetNCurve() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_311\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_311:\n        /* \"MLSAGVerify.sol\":2531:2549  ecMath.GetNCurve() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":2531:2553  ecMath.GetNCurve() - s */\n      sub\n        /* \"MLSAGVerify.sol\":2527:2553  s = ecMath.GetNCurve() - s */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":2585:2591  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":2585:2601  ecMath.GetNCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1ff535b\n        /* \"MLSAGVerify.sol\":2585:2603  ecMath.GetNCurve() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_312\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_312:\n        /* \"MLSAGVerify.sol\":2585:2603  ecMath.GetNCurve() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_313\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_313:\n        /* \"MLSAGVerify.sol\":2585:2603  ecMath.GetNCurve() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_314\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_314:\n        /* \"MLSAGVerify.sol\":2585:2603  ecMath.GetNCurve() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":2568:2604  addmod(alpha, s, ecMath.GetNCurve()) */\n      dup1\n      iszero\n      iszero\n      tag_315\n      jumpi\n      invalid\n    tag_315:\n        /* \"MLSAGVerify.sol\":2582:2583  s */\n      dup2\n        /* \"MLSAGVerify.sol\":2575:2580  alpha */\n      dup6\n        /* \"MLSAGVerify.sol\":2568:2604  addmod(alpha, s, ecMath.GetNCurve()) */\n      addmod\n        /* \"MLSAGVerify.sol\":2564:2604  s = addmod(alpha, s, ecMath.GetNCurve()) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":2362:2612  function CompleteRing(uint256 alpha, uint256 c, uint256 xk)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":2665:2909  function LinkableRingHashFunction(uint256 msgHash, uint256[2] left, uint256[2] right)\r... */\n    tag_72:\n        /* \"MLSAGVerify.sol\":2781:2790  uint256 h */\n      0x0\n        /* \"MLSAGVerify.sol\":2883:2889  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":2883:2899  ecMath.GetNCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1ff535b\n        /* \"MLSAGVerify.sol\":2883:2901  ecMath.GetNCurve() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_317\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_317:\n        /* \"MLSAGVerify.sol\":2883:2901  ecMath.GetNCurve() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_318\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_318:\n        /* \"MLSAGVerify.sol\":2883:2901  ecMath.GetNCurve() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_319\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_319:\n        /* \"MLSAGVerify.sol\":2883:2901  ecMath.GetNCurve() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":2833:2840  msgHash */\n      dup5\n        /* \"MLSAGVerify.sol\":2842:2846  left */\n      dup5\n        /* \"MLSAGVerify.sol\":2847:2848  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":2842:2849  left[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_320\n      jumpi\n      invalid\n    tag_320:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":2851:2855  left */\n      dup6\n        /* \"MLSAGVerify.sol\":2856:2857  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":2851:2858  left[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_321\n      jumpi\n      invalid\n    tag_321:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":2860:2865  right */\n      dup6\n        /* \"MLSAGVerify.sol\":2866:2867  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":2860:2868  right[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_322\n      jumpi\n      invalid\n    tag_322:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":2870:2875  right */\n      dup7\n        /* \"MLSAGVerify.sol\":2876:2877  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":2870:2878  right[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_323\n      jumpi\n      invalid\n    tag_323:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":2823:2879  keccak256(msgHash, left[0], left[1], right[0], right[1]) */\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"MLSAGVerify.sol\":2815:2880  uint256(keccak256(msgHash, left[0], left[1], right[0], right[1])) */\n      0x1\n      swap1\n      div\n        /* \"MLSAGVerify.sol\":2815:2901  uint256(keccak256(msgHash, left[0], left[1], right[0], right[1])) % ecMath.GetNCurve() */\n      dup2\n      iszero\n      iszero\n      tag_324\n      jumpi\n      invalid\n    tag_324:\n      mod\n        /* \"MLSAGVerify.sol\":2808:2901  return uint256(keccak256(msgHash, left[0], left[1], right[0], right[1])) % ecMath.GetNCurve() */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":2665:2909  function LinkableRingHashFunction(uint256 msgHash, uint256[2] left, uint256[2] right)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":1073:1274  function RingHashFunction(uint256 msgHash, uint256[2] point)\r... */\n    tag_75:\n        /* \"MLSAGVerify.sol\":1164:1173  uint256 h */\n      0x0\n        /* \"MLSAGVerify.sol\":1248:1254  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1248:1264  ecMath.GetNCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1ff535b\n        /* \"MLSAGVerify.sol\":1248:1266  ecMath.GetNCurve() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_326\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_326:\n        /* \"MLSAGVerify.sol\":1248:1266  ecMath.GetNCurve() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_327\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_327:\n        /* \"MLSAGVerify.sol\":1248:1266  ecMath.GetNCurve() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_328\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_328:\n        /* \"MLSAGVerify.sol\":1248:1266  ecMath.GetNCurve() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1216:1223  msgHash */\n      dup4\n        /* \"MLSAGVerify.sol\":1225:1230  point */\n      dup4\n        /* \"MLSAGVerify.sol\":1231:1232  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":1225:1233  point[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_329\n      jumpi\n      invalid\n    tag_329:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":1235:1240  point */\n      dup5\n        /* \"MLSAGVerify.sol\":1241:1242  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":1235:1243  point[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_330\n      jumpi\n      invalid\n    tag_330:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":1206:1244  keccak256(msgHash, point[0], point[1]) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"MLSAGVerify.sol\":1198:1245  uint256(keccak256(msgHash, point[0], point[1])) */\n      0x1\n      swap1\n      div\n        /* \"MLSAGVerify.sol\":1198:1266  uint256(keccak256(msgHash, point[0], point[1])) % ecMath.GetNCurve() */\n      dup2\n      iszero\n      iszero\n      tag_331\n      jumpi\n      invalid\n    tag_331:\n      mod\n        /* \"MLSAGVerify.sol\":1191:1266  return uint256(keccak256(msgHash, point[0], point[1])) % ecMath.GetNCurve() */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":1073:1274  function RingHashFunction(uint256 msgHash, uint256[2] point)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":3877:4393  function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n    tag_78:\n        /* \"MLSAGVerify.sol\":4008:4023  uint256[2] Lout */\n      tag_332\n      jump\t// in(tag_128)\n    tag_332:\n        /* \"MLSAGVerify.sol\":4025:4040  uint256[2] Rout */\n      tag_333\n      jump\t// in(tag_128)\n    tag_333:\n        /* \"MLSAGVerify.sol\":4058:4080  uint256[2] memory temp */\n      tag_334\n      jump\t// in(tag_128)\n    tag_334:\n        /* \"MLSAGVerify.sol\":4098:4104  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4098:4113  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":4114:4120  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4114:4126  ecMath.GetG1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae5d39f6\n        /* \"MLSAGVerify.sol\":4114:4128  ecMath.GetG1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_336\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_336:\n        /* \"MLSAGVerify.sol\":4114:4128  ecMath.GetG1() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_337\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_337:\n        /* \"MLSAGVerify.sol\":4114:4128  ecMath.GetG1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_338\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_338:\n        /* \"MLSAGVerify.sol\":4114:4128  ecMath.GetG1() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4130:4132  sk */\n      dup9\n        /* \"MLSAGVerify.sol\":4098:4133  ecMath.Multiply(ecMath.GetG1(), sk) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_339:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_340\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_339)\n    tag_340:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4098:4133  ecMath.Multiply(ecMath.GetG1(), sk) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_342\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_342:\n        /* \"MLSAGVerify.sol\":4098:4133  ecMath.Multiply(ecMath.GetG1(), sk) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_343\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_343:\n        /* \"MLSAGVerify.sol\":4098:4133  ecMath.Multiply(ecMath.GetG1(), sk) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_344\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_344:\n        /* \"MLSAGVerify.sol\":4098:4133  ecMath.Multiply(ecMath.GetG1(), sk) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4091:4133  Lout = ecMath.Multiply(ecMath.GetG1(), sk) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":4151:4157  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4151:4166  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":4167:4168  P */\n      dup7\n        /* \"MLSAGVerify.sol\":4170:4172  ck */\n      dup10\n        /* \"MLSAGVerify.sol\":4151:4173  ecMath.Multiply(P, ck) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_345:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_346\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_345)\n    tag_346:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4151:4173  ecMath.Multiply(P, ck) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_348\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_348:\n        /* \"MLSAGVerify.sol\":4151:4173  ecMath.Multiply(P, ck) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_349\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_349:\n        /* \"MLSAGVerify.sol\":4151:4173  ecMath.Multiply(P, ck) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_350\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_350:\n        /* \"MLSAGVerify.sol\":4151:4173  ecMath.Multiply(P, ck) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4144:4173  temp = ecMath.Multiply(P, ck) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":4191:4197  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4191:4201  ecMath.Add */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc753fe8\n        /* \"MLSAGVerify.sol\":4202:4206  Lout */\n      dup5\n        /* \"MLSAGVerify.sol\":4208:4212  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":4191:4213  ecMath.Add(Lout, temp) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_351:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_352\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_351)\n    tag_352:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4191:4213  ecMath.Add(Lout, temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_354:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_355\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_354)\n    tag_355:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4191:4213  ecMath.Add(Lout, temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_357\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_357:\n        /* \"MLSAGVerify.sol\":4191:4213  ecMath.Add(Lout, temp) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_358\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_358:\n        /* \"MLSAGVerify.sol\":4191:4213  ecMath.Add(Lout, temp) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_359\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_359:\n        /* \"MLSAGVerify.sol\":4191:4213  ecMath.Add(Lout, temp) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4184:4213  Lout = ecMath.Add(Lout, temp) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":4241:4247  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4241:4259  ecMath.HashToPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6032fc3f\n        /* \"MLSAGVerify.sol\":4260:4261  P */\n      dup7\n        /* \"MLSAGVerify.sol\":4241:4262  ecMath.HashToPoint(P) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_360:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_361\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_360)\n    tag_361:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4241:4262  ecMath.HashToPoint(P) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_363\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_363:\n        /* \"MLSAGVerify.sol\":4241:4262  ecMath.HashToPoint(P) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_364\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_364:\n        /* \"MLSAGVerify.sol\":4241:4262  ecMath.HashToPoint(P) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_365\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_365:\n        /* \"MLSAGVerify.sol\":4241:4262  ecMath.HashToPoint(P) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4234:4262  Rout = ecMath.HashToPoint(P) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":4280:4286  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4280:4295  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":4296:4300  Rout */\n      dup4\n        /* \"MLSAGVerify.sol\":4302:4304  sk */\n      dup9\n        /* \"MLSAGVerify.sol\":4280:4305  ecMath.Multiply(Rout, sk) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_366:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_367\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_366)\n    tag_367:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4280:4305  ecMath.Multiply(Rout, sk) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_369\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_369:\n        /* \"MLSAGVerify.sol\":4280:4305  ecMath.Multiply(Rout, sk) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_370\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_370:\n        /* \"MLSAGVerify.sol\":4280:4305  ecMath.Multiply(Rout, sk) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_371\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_371:\n        /* \"MLSAGVerify.sol\":4280:4305  ecMath.Multiply(Rout, sk) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4273:4305  Rout = ecMath.Multiply(Rout, sk) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":4323:4329  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4323:4338  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":4339:4340  I */\n      dup6\n        /* \"MLSAGVerify.sol\":4342:4344  ck */\n      dup10\n        /* \"MLSAGVerify.sol\":4323:4345  ecMath.Multiply(I, ck) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_372:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_373\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_372)\n    tag_373:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4323:4345  ecMath.Multiply(I, ck) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_375\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_375:\n        /* \"MLSAGVerify.sol\":4323:4345  ecMath.Multiply(I, ck) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_376\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_376:\n        /* \"MLSAGVerify.sol\":4323:4345  ecMath.Multiply(I, ck) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_377\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_377:\n        /* \"MLSAGVerify.sol\":4323:4345  ecMath.Multiply(I, ck) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4316:4345  temp = ecMath.Multiply(I, ck) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":4363:4369  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":4363:4373  ecMath.Add */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc753fe8\n        /* \"MLSAGVerify.sol\":4374:4378  Rout */\n      dup4\n        /* \"MLSAGVerify.sol\":4380:4384  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":4363:4385  ecMath.Add(Rout, temp) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_378:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_379\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_378)\n    tag_379:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4363:4385  ecMath.Add(Rout, temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_381:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_382\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_381)\n    tag_382:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":4363:4385  ecMath.Add(Rout, temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_384\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_384:\n        /* \"MLSAGVerify.sol\":4363:4385  ecMath.Add(Rout, temp) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_385\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_385:\n        /* \"MLSAGVerify.sol\":4363:4385  ecMath.Add(Rout, temp) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_386\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_386:\n        /* \"MLSAGVerify.sol\":4363:4385  ecMath.Add(Rout, temp) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4356:4385  Rout = ecMath.Add(Rout, temp) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":3877:4393  function CalculateLinkableRingSegment_NoHash(uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n      pop\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Debuggable.sol\":73:93  address public owner */\n    tag_87:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n    tag_90:\n        /* \"Debuggable.sol\":226:231  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:222  msg.sender */\n      caller\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n      dup1\n      iszero\n      tag_388\n      jumpi\n      pop\n        /* \"Debuggable.sol\":246:247  0 */\n      0x0\n        /* \"Debuggable.sol\":237:242  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":237:247  owner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n    tag_388:\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n      iszero\n      tag_389\n      jumpi\n        /* \"Debuggable.sol\":251:259  revert() */\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n    tag_389:\n        /* \"ECMathInterface.sol\":4324:4334  ecMathAddr */\n      dup1\n        /* \"ECMathInterface.sol\":4308:4314  ecMath */\n      0x1\n      0x0\n        /* \"ECMathInterface.sol\":4308:4335  ecMath = ECMath(ecMathAddr) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n      0x7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f\n        /* \"ECMathInterface.sol\":4378:4388  ecMathAddr */\n      dup2\n        /* \"ECMathInterface.sol\":4345:4389  ContractAddressChanged(\"ECMath\", ecMathAddr) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x6\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45434d6174680000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ECMathInterface.sol\":4109:4394  function ECMath_ChangeAddress(address ecMathAddr) public ownerOnly {\r... */\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":2921:3222  function CalculateKeyImageFromPrivKey(uint256 pk)\r... */\n    tag_93:\n        /* \"MLSAGVerify.sol\":3005:3017  uint256[2] I */\n      tag_391\n      jump\t// in(tag_128)\n    tag_391:\n        /* \"MLSAGVerify.sol\":3035:3057  uint256[2] memory temp */\n      tag_392\n      jump\t// in(tag_128)\n    tag_392:\n        /* \"MLSAGVerify.sol\":3075:3081  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3075:3090  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":3091:3097  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3091:3103  ecMath.GetG1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae5d39f6\n        /* \"MLSAGVerify.sol\":3091:3105  ecMath.GetG1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_394\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_394:\n        /* \"MLSAGVerify.sol\":3091:3105  ecMath.GetG1() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_395\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_395:\n        /* \"MLSAGVerify.sol\":3091:3105  ecMath.GetG1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_396\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_396:\n        /* \"MLSAGVerify.sol\":3091:3105  ecMath.GetG1() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3107:3109  pk */\n      dup6\n        /* \"MLSAGVerify.sol\":3075:3110  ecMath.Multiply(ecMath.GetG1(), pk) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_397:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_398\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_397)\n    tag_398:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3075:3110  ecMath.Multiply(ecMath.GetG1(), pk) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_400\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_400:\n        /* \"MLSAGVerify.sol\":3075:3110  ecMath.Multiply(ecMath.GetG1(), pk) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_401\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_401:\n        /* \"MLSAGVerify.sol\":3075:3110  ecMath.Multiply(ecMath.GetG1(), pk) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_402\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_402:\n        /* \"MLSAGVerify.sol\":3075:3110  ecMath.Multiply(ecMath.GetG1(), pk) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3068:3110  temp = ecMath.Multiply(ecMath.GetG1(), pk) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":3128:3134  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3128:3146  ecMath.HashToPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6032fc3f\n        /* \"MLSAGVerify.sol\":3147:3151  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":3128:3152  ecMath.HashToPoint(temp) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_403:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_404\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_403)\n    tag_404:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3128:3152  ecMath.HashToPoint(temp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_406\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_406:\n        /* \"MLSAGVerify.sol\":3128:3152  ecMath.HashToPoint(temp) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_407\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_407:\n        /* \"MLSAGVerify.sol\":3128:3152  ecMath.HashToPoint(temp) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_408\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_408:\n        /* \"MLSAGVerify.sol\":3128:3152  ecMath.HashToPoint(temp) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3121:3152  temp = ecMath.HashToPoint(temp) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":3170:3176  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":3170:3185  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":3186:3190  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":3192:3194  pk */\n      dup6\n        /* \"MLSAGVerify.sol\":3170:3195  ecMath.Multiply(temp, pk) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_409:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_410\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_409)\n    tag_410:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":3170:3195  ecMath.Multiply(temp, pk) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_412\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_412:\n        /* \"MLSAGVerify.sol\":3170:3195  ecMath.Multiply(temp, pk) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_413\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_413:\n        /* \"MLSAGVerify.sol\":3170:3195  ecMath.Multiply(temp, pk) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_414\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_414:\n        /* \"MLSAGVerify.sol\":3170:3195  ecMath.Multiply(temp, pk) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":3163:3195  temp = ecMath.Multiply(temp, pk) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":3210:3214  temp */\n      dup1\n        /* \"MLSAGVerify.sol\":3206:3214  I = temp */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":2921:3222  function CalculateKeyImageFromPrivKey(uint256 pk)\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Debuggable.sol\":288:358  function Kill() public ownerOnly {\r... */\n    tag_99:\n        /* \"Debuggable.sol\":226:231  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":212:222  msg.sender */\n      caller\n        /* \"Debuggable.sol\":212:231  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n      dup1\n      iszero\n      tag_416\n      jumpi\n      pop\n        /* \"Debuggable.sol\":246:247  0 */\n      0x0\n        /* \"Debuggable.sol\":237:242  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Debuggable.sol\":237:247  owner != 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Debuggable.sol\":211:248  (msg.sender != owner) && (owner != 0) */\n    tag_416:\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n      iszero\n      tag_417\n      jumpi\n        /* \"Debuggable.sol\":251:259  revert() */\n      0x0\n      dup1\n      revert\n        /* \"Debuggable.sol\":206:259  if ( (msg.sender != owner) && (owner != 0) ) revert() */\n    tag_417:\n        /* \"Debuggable.sol\":342:352  msg.sender */\n      caller\n        /* \"Debuggable.sol\":329:353  selfdestruct(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"MLSAGVerify.sol\":12861:14869  function VerifyMLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_102:\n        /* \"MLSAGVerify.sol\":12980:12992  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":13047:13065  Variables memory v */\n      tag_419\n      jump\t// in(tag_171)\n    tag_419:\n        /* \"MLSAGVerify.sol\":13364:13382  uint256[] memory c */\n      0x60\n        /* \"MLSAGVerify.sol\":13095:13096  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":13090:13091  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13079:13080  I */\n      dup8\n        /* \"MLSAGVerify.sol\":13079:13087  I.length */\n      mload\n        /* \"MLSAGVerify.sol\":13079:13091  I.length % 2 */\n      dup2\n      iszero\n      iszero\n      tag_421\n      jumpi\n      invalid\n    tag_421:\n      mod\n        /* \"MLSAGVerify.sol\":13079:13096  I.length % 2 != 0 */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":13076:13110  if(I.length % 2 != 0) return false */\n      iszero\n      tag_422\n      jumpi\n        /* \"MLSAGVerify.sol\":13105:13110  false */\n      0x0\n        /* \"MLSAGVerify.sol\":13098:13110  return false */\n      swap3\n      pop\n      jump(tag_420)\n        /* \"MLSAGVerify.sol\":13076:13110  if(I.length % 2 != 0) return false */\n    tag_422:\n        /* \"MLSAGVerify.sol\":13139:13140  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13128:13129  I */\n      dup7\n        /* \"MLSAGVerify.sol\":13128:13136  I.length */\n      mload\n        /* \"MLSAGVerify.sol\":13128:13140  I.length / 2 */\n      dup2\n      iszero\n      iszero\n      tag_423\n      jumpi\n      invalid\n    tag_423:\n      div\n        /* \"MLSAGVerify.sol\":13121:13122  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13121:13124  v.m */\n      0x0\n      add\n        /* \"MLSAGVerify.sol\":13121:13141  v.m = (I.length / 2) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13178:13179  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":13170:13171  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13170:13173  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13168:13169  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13168:13173  2*v.m */\n      mul\n        /* \"MLSAGVerify.sol\":13156:13157  P */\n      dup7\n        /* \"MLSAGVerify.sol\":13156:13164  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":13156:13174  P.length % (2*v.m) */\n      dup2\n      iszero\n      iszero\n      tag_424\n      jumpi\n      invalid\n    tag_424:\n      mod\n        /* \"MLSAGVerify.sol\":13156:13179  P.length % (2*v.m) != 0 */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":13152:13193  if (P.length % (2*v.m) != 0) return false */\n      iszero\n      tag_425\n      jumpi\n        /* \"MLSAGVerify.sol\":13188:13193  false */\n      0x0\n        /* \"MLSAGVerify.sol\":13181:13193  return false */\n      swap3\n      pop\n      jump(tag_420)\n        /* \"MLSAGVerify.sol\":13152:13193  if (P.length % (2*v.m) != 0) return false */\n    tag_425:\n        /* \"MLSAGVerify.sol\":13234:13235  v */\n      dup2\n        /* \"MLSAGVerify.sol\":13234:13237  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13232:13233  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13232:13237  2*v.m */\n      mul\n        /* \"MLSAGVerify.sol\":13220:13221  P */\n      dup6\n        /* \"MLSAGVerify.sol\":13220:13228  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":13220:13238  P.length / (2*v.m) */\n      dup2\n      iszero\n      iszero\n      tag_426\n      jumpi\n      invalid\n    tag_426:\n      div\n        /* \"MLSAGVerify.sol\":13214:13215  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13214:13217  v.n */\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":13214:13238  v.n = P.length / (2*v.m) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13282:13283  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":13278:13279  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13278:13281  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13274:13275  v */\n      dup4\n        /* \"MLSAGVerify.sol\":13274:13277  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13274:13281  v.m*v.n */\n      mul\n        /* \"MLSAGVerify.sol\":13274:13283  v.m*v.n+1 */\n      add\n        /* \"MLSAGVerify.sol\":13253:13262  signature */\n      dup5\n        /* \"MLSAGVerify.sol\":13253:13269  signature.length */\n      mload\n        /* \"MLSAGVerify.sol\":13253:13284  signature.length != (v.m*v.n+1) */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":13249:13298  if (signature.length != (v.m*v.n+1)) return false */\n      iszero\n      tag_427\n      jumpi\n        /* \"MLSAGVerify.sol\":13293:13298  false */\n      0x0\n        /* \"MLSAGVerify.sol\":13286:13298  return false */\n      swap3\n      pop\n      jump(tag_420)\n        /* \"MLSAGVerify.sol\":13249:13298  if (signature.length != (v.m*v.n+1)) return false */\n    tag_427:\n        /* \"MLSAGVerify.sol\":13405:13406  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":13401:13402  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13401:13404  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13399:13400  4 */\n      0x4\n        /* \"MLSAGVerify.sol\":13399:13404  4*v.m */\n      mul\n        /* \"MLSAGVerify.sol\":13399:13406  4*v.m+1 */\n      add\n        /* \"MLSAGVerify.sol\":13385:13407  new uint256[](4*v.m+1) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_428\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":13385:13407  new uint256[](4*v.m+1) */\n      swap1\n      pop\n    tag_428:\n      pop\n        /* \"MLSAGVerify.sol\":13364:13407  uint256[] memory c = new uint256[](4*v.m+1) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":13425:13432  msgHash */\n      dup7\n        /* \"MLSAGVerify.sol\":13418:13419  c */\n      dup2\n        /* \"MLSAGVerify.sol\":13420:13421  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":13418:13422  c[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_429\n      jumpi\n      invalid\n    tag_429:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":13418:13432  c[0] = msgHash */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13464:13465  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":13458:13459  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13458:13461  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":13458:13465  v.i = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13453:14596  for (v.i = 0; v.i < v.m; v.i++) {\r... */\n    tag_430:\n        /* \"MLSAGVerify.sol\":13473:13474  v */\n      dup2\n        /* \"MLSAGVerify.sol\":13473:13476  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13467:13468  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13467:13470  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13467:13476  v.i < v.m */\n      lt\n        /* \"MLSAGVerify.sol\":13453:14596  for (v.i = 0; v.i < v.m; v.i++) {\r... */\n      iszero\n      tag_431\n      jumpi\n        /* \"MLSAGVerify.sol\":13507:13516  signature */\n      dup4\n        /* \"MLSAGVerify.sol\":13517:13518  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":13507:13519  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_433\n      jumpi\n      invalid\n    tag_433:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13500:13501  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13500:13504  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":13500:13519  v.ck = signature[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13554:13589  v.keyImage = [I[2*v.i], I[2*v.i+1]] */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"MLSAGVerify.sol\":13568:13569  I */\n      dup8\n        /* \"MLSAGVerify.sol\":13572:13573  v */\n      dup5\n        /* \"MLSAGVerify.sol\":13572:13575  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13570:13571  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13570:13575  2*v.i */\n      mul\n        /* \"MLSAGVerify.sol\":13568:13576  I[2*v.i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_434\n      jumpi\n      invalid\n    tag_434:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13554:13589  v.keyImage = [I[2*v.i], I[2*v.i+1]] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":13578:13579  I */\n      dup8\n        /* \"MLSAGVerify.sol\":13586:13587  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":13582:13583  v */\n      dup6\n        /* \"MLSAGVerify.sol\":13582:13585  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13580:13581  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13580:13585  2*v.i */\n      mul\n        /* \"MLSAGVerify.sol\":13580:13587  2*v.i+1 */\n      add\n        /* \"MLSAGVerify.sol\":13578:13588  I[2*v.i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_435\n      jumpi\n      invalid\n    tag_435:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13554:13589  v.keyImage = [I[2*v.i], I[2*v.i+1]] */\n      dup2\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":13554:13555  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13554:13564  v.keyImage */\n      0x100\n      add\n        /* \"MLSAGVerify.sol\":13554:13589  v.keyImage = [I[2*v.i], I[2*v.i+1]] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":13713:13714  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":13707:13708  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13707:13710  v.j */\n      0x60\n      add\n        /* \"MLSAGVerify.sol\":13707:13714  v.j = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13702:13990  for (v.j = 0; v.j < (v.n-1); v.j++) {\r... */\n    tag_436:\n        /* \"MLSAGVerify.sol\":13727:13728  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":13723:13724  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13723:13726  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13723:13728  v.n-1 */\n      sub\n        /* \"MLSAGVerify.sol\":13716:13717  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13716:13719  v.j */\n      0x60\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13716:13729  v.j < (v.n-1) */\n      lt\n        /* \"MLSAGVerify.sol\":13702:13990  for (v.j = 0; v.j < (v.n-1); v.j++) {\r... */\n      iszero\n      tag_437\n      jumpi\n        /* \"MLSAGVerify.sol\":13777:13778  v */\n      dup2\n        /* \"MLSAGVerify.sol\":13777:13780  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13771:13772  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13771:13774  v.j */\n      0x60\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13767:13768  v */\n      dup4\n        /* \"MLSAGVerify.sol\":13767:13770  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13767:13774  v.m*v.j */\n      mul\n        /* \"MLSAGVerify.sol\":13767:13780  v.m*v.j + v.i */\n      add\n        /* \"MLSAGVerify.sol\":13757:13758  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13757:13764  v.index */\n      0xa0\n      add\n        /* \"MLSAGVerify.sol\":13757:13780  v.index = v.m*v.j + v.i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13799:13840  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"MLSAGVerify.sol\":13811:13812  P */\n      dup7\n        /* \"MLSAGVerify.sol\":13815:13816  v */\n      dup5\n        /* \"MLSAGVerify.sol\":13815:13822  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13813:13814  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13813:13822  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":13811:13823  P[2*v.index] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_439\n      jumpi\n      invalid\n    tag_439:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13799:13840  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":13825:13826  P */\n      dup7\n        /* \"MLSAGVerify.sol\":13837:13838  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":13829:13830  v */\n      dup6\n        /* \"MLSAGVerify.sol\":13829:13836  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13827:13828  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":13827:13836  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":13827:13838  2*v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":13825:13839  P[2*v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_440\n      jumpi\n      invalid\n    tag_440:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13799:13840  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      dup2\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":13799:13800  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13799:13807  v.point1 */\n      0xc0\n      add\n        /* \"MLSAGVerify.sol\":13799:13840  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":13887:13974  CalculateLinkableRingSegment(msgHash, v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      tag_441\n        /* \"MLSAGVerify.sol\":13916:13923  msgHash */\n      dup8\n        /* \"MLSAGVerify.sol\":13925:13926  v */\n      dup4\n        /* \"MLSAGVerify.sol\":13925:13929  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13931:13940  signature */\n      dup7\n        /* \"MLSAGVerify.sol\":13949:13950  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":13941:13942  v */\n      dup7\n        /* \"MLSAGVerify.sol\":13941:13948  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13941:13950  v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":13931:13951  signature[v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_442\n      jumpi\n      invalid\n    tag_442:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13953:13954  v */\n      dup6\n        /* \"MLSAGVerify.sol\":13953:13961  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13963:13964  v */\n      dup7\n        /* \"MLSAGVerify.sol\":13963:13973  v.keyImage */\n      0x100\n      add\n      mload\n        /* \"MLSAGVerify.sol\":13887:13915  CalculateLinkableRingSegment */\n      tag_123\n        /* \"MLSAGVerify.sol\":13887:13974  CalculateLinkableRingSegment(msgHash, v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      jump\t// in\n    tag_441:\n        /* \"MLSAGVerify.sol\":13880:13881  v */\n      dup3\n        /* \"MLSAGVerify.sol\":13880:13884  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":13880:13974  v.ck = CalculateLinkableRingSegment(msgHash, v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13731:13732  v */\n      dup2\n        /* \"MLSAGVerify.sol\":13731:13734  v.j */\n      0x60\n      add\n        /* \"MLSAGVerify.sol\":13731:13736  v.j++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      0x1\n      add\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13702:13990  for (v.j = 0; v.j < (v.n-1); v.j++) {\r... */\n      jump(tag_436)\n    tag_437:\n        /* \"MLSAGVerify.sol\":14128:14129  v */\n      dup2\n        /* \"MLSAGVerify.sol\":14128:14131  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14123:14124  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14119:14120  v */\n      dup4\n        /* \"MLSAGVerify.sol\":14119:14122  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14119:14124  v.n-1 */\n      sub\n        /* \"MLSAGVerify.sol\":14114:14115  v */\n      dup4\n        /* \"MLSAGVerify.sol\":14114:14117  v.m */\n      0x0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14114:14125  v.m*(v.n-1) */\n      mul\n        /* \"MLSAGVerify.sol\":14114:14131  v.m*(v.n-1) + v.i */\n      add\n        /* \"MLSAGVerify.sol\":14104:14105  v */\n      dup3\n        /* \"MLSAGVerify.sol\":14104:14111  v.index */\n      0xa0\n      add\n        /* \"MLSAGVerify.sol\":14104:14131  v.index = v.m*(v.n-1) + v.i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14146:14187  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"MLSAGVerify.sol\":14158:14159  P */\n      dup7\n        /* \"MLSAGVerify.sol\":14162:14163  v */\n      dup5\n        /* \"MLSAGVerify.sol\":14162:14169  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14160:14161  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":14160:14169  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":14158:14170  P[2*v.index] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_443\n      jumpi\n      invalid\n    tag_443:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14146:14187  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":14172:14173  P */\n      dup7\n        /* \"MLSAGVerify.sol\":14184:14185  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14176:14177  v */\n      dup6\n        /* \"MLSAGVerify.sol\":14176:14183  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14174:14175  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":14174:14183  2*v.index */\n      mul\n        /* \"MLSAGVerify.sol\":14174:14185  2*v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":14172:14186  P[2*v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_444\n      jumpi\n      invalid\n    tag_444:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14146:14187  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      dup2\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":14146:14147  v */\n      dup3\n        /* \"MLSAGVerify.sol\":14146:14154  v.point1 */\n      0xc0\n      add\n        /* \"MLSAGVerify.sol\":14146:14187  v.point1 = [P[2*v.index], P[2*v.index+1]] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"MLSAGVerify.sol\":14246:14331  CalculateLinkableRingSegment_NoHash(v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      tag_445\n        /* \"MLSAGVerify.sol\":14282:14283  v */\n      dup3\n        /* \"MLSAGVerify.sol\":14282:14286  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14288:14297  signature */\n      dup6\n        /* \"MLSAGVerify.sol\":14306:14307  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14298:14299  v */\n      dup6\n        /* \"MLSAGVerify.sol\":14298:14305  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14298:14307  v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":14288:14308  signature[v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_446\n      jumpi\n      invalid\n    tag_446:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14310:14311  v */\n      dup5\n        /* \"MLSAGVerify.sol\":14310:14318  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14320:14321  v */\n      dup6\n        /* \"MLSAGVerify.sol\":14320:14330  v.keyImage */\n      0x100\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14246:14281  CalculateLinkableRingSegment_NoHash */\n      tag_78\n        /* \"MLSAGVerify.sol\":14246:14331  CalculateLinkableRingSegment_NoHash(v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      jump\t// in\n    tag_445:\n        /* \"MLSAGVerify.sol\":14223:14331  (v.point1, v.point2) = CalculateLinkableRingSegment_NoHash(v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      dup2\n      swap2\n      pop\n      dup1\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":14224:14225  v */\n      dup4\n        /* \"MLSAGVerify.sol\":14224:14232  v.point1 */\n      0xc0\n      add\n        /* \"MLSAGVerify.sol\":14234:14235  v */\n      dup5\n        /* \"MLSAGVerify.sol\":14234:14242  v.point2 */\n      0xe0\n      add\n        /* \"MLSAGVerify.sol\":14223:14331  (v.point1, v.point2) = CalculateLinkableRingSegment_NoHash(v.ck, signature[v.index+1], v.point1, v.keyImage) */\n      dup3\n      swap1\n      mstore\n      dup3\n      swap1\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14421:14422  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14419:14420  4 */\n      0x4\n        /* \"MLSAGVerify.sol\":14415:14416  v */\n      dup4\n        /* \"MLSAGVerify.sol\":14415:14418  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14415:14420  v.i*4 */\n      mul\n        /* \"MLSAGVerify.sol\":14415:14422  v.i*4+1 */\n      add\n        /* \"MLSAGVerify.sol\":14405:14406  v */\n      dup3\n        /* \"MLSAGVerify.sol\":14405:14412  v.index */\n      0xa0\n      add\n        /* \"MLSAGVerify.sol\":14405:14422  v.index = v.i*4+1 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14450:14451  v */\n      dup2\n        /* \"MLSAGVerify.sol\":14450:14458  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14459:14460  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":14450:14461  v.point1[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_447\n      jumpi\n      invalid\n    tag_447:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14437:14438  c */\n      dup2\n        /* \"MLSAGVerify.sol\":14439:14440  v */\n      dup4\n        /* \"MLSAGVerify.sol\":14439:14446  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14437:14447  c[v.index] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_448\n      jumpi\n      invalid\n    tag_448:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":14437:14461  c[v.index] = v.point1[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14491:14492  v */\n      dup2\n        /* \"MLSAGVerify.sol\":14491:14499  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14500:14501  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14491:14502  v.point1[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_449\n      jumpi\n      invalid\n    tag_449:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14476:14477  c */\n      dup2\n        /* \"MLSAGVerify.sol\":14486:14487  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14478:14479  v */\n      dup5\n        /* \"MLSAGVerify.sol\":14478:14485  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14478:14487  v.index+1 */\n      add\n        /* \"MLSAGVerify.sol\":14476:14488  c[v.index+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_450\n      jumpi\n      invalid\n    tag_450:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":14476:14502  c[v.index+1] = v.point1[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14532:14533  v */\n      dup2\n        /* \"MLSAGVerify.sol\":14532:14540  v.point2 */\n      0xe0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14541:14542  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":14532:14543  v.point2[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_451\n      jumpi\n      invalid\n    tag_451:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14517:14518  c */\n      dup2\n        /* \"MLSAGVerify.sol\":14527:14528  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":14519:14520  v */\n      dup5\n        /* \"MLSAGVerify.sol\":14519:14526  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14519:14528  v.index+2 */\n      add\n        /* \"MLSAGVerify.sol\":14517:14529  c[v.index+2] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_452\n      jumpi\n      invalid\n    tag_452:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":14517:14543  c[v.index+2] = v.point2[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14573:14574  v */\n      dup2\n        /* \"MLSAGVerify.sol\":14573:14581  v.point2 */\n      0xe0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14582:14583  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":14573:14584  v.point2[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_453\n      jumpi\n      invalid\n    tag_453:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14558:14559  c */\n      dup2\n        /* \"MLSAGVerify.sol\":14568:14569  3 */\n      0x3\n        /* \"MLSAGVerify.sol\":14560:14561  v */\n      dup5\n        /* \"MLSAGVerify.sol\":14560:14567  v.index */\n      0xa0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14560:14569  v.index+3 */\n      add\n        /* \"MLSAGVerify.sol\":14558:14570  c[v.index+3] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_454\n      jumpi\n      invalid\n    tag_454:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":14558:14584  c[v.index+3] = v.point2[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13478:13479  v */\n      dup2\n        /* \"MLSAGVerify.sol\":13478:13481  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":13478:13483  v.i++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      0x1\n      add\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":13453:14596  for (v.i = 0; v.i < v.m; v.i++) {\r... */\n      jump(tag_430)\n    tag_431:\n        /* \"MLSAGVerify.sol\":14744:14763  Keccak256OfArray(c) */\n      tag_455\n        /* \"MLSAGVerify.sol\":14761:14762  c */\n      dup2\n        /* \"MLSAGVerify.sol\":14744:14760  Keccak256OfArray */\n      tag_63\n        /* \"MLSAGVerify.sol\":14744:14763  Keccak256OfArray(c) */\n      jump\t// in\n    tag_455:\n        /* \"MLSAGVerify.sol\":14737:14738  v */\n      dup3\n        /* \"MLSAGVerify.sol\":14737:14741  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":14737:14763  v.ck = Keccak256OfArray(c) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":14848:14857  signature */\n      dup4\n        /* \"MLSAGVerify.sol\":14858:14859  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":14848:14860  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_456\n      jumpi\n      invalid\n    tag_456:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14840:14841  v */\n      dup3\n        /* \"MLSAGVerify.sol\":14840:14844  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":14840:14860  v.ck == signature[0] */\n      eq\n        /* \"MLSAGVerify.sol\":14829:14861  success = (v.ck == signature[0]) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":12861:14869  function VerifyMLSAG(uint256 msgHash, uint256[] I, uint256[] P, uint256[] signature)\r... */\n    tag_420:\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":5625:6359  function VerifySAG(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_105:\n        /* \"MLSAGVerify.sol\":5729:5741  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":5796:5814  Variables memory v */\n      tag_457\n      jump\t// in(tag_171)\n    tag_457:\n        /* \"MLSAGVerify.sol\":5845:5846  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":5840:5841  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":5829:5830  P */\n      dup6\n        /* \"MLSAGVerify.sol\":5829:5837  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":5829:5841  P.length % 2 */\n      dup2\n      iszero\n      iszero\n      tag_459\n      jumpi\n      invalid\n    tag_459:\n      mod\n        /* \"MLSAGVerify.sol\":5829:5846  P.length % 2 != 0 */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":5825:5860  if (P.length % 2 != 0) return false */\n      iszero\n      tag_460\n      jumpi\n        /* \"MLSAGVerify.sol\":5855:5860  false */\n      0x0\n        /* \"MLSAGVerify.sol\":5848:5860  return false */\n      swap2\n      pop\n      jump(tag_458)\n        /* \"MLSAGVerify.sol\":5825:5860  if (P.length % 2 != 0) return false */\n    tag_460:\n        /* \"MLSAGVerify.sol\":5889:5890  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":5878:5879  P */\n      dup5\n        /* \"MLSAGVerify.sol\":5878:5886  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":5878:5890  P.length / 2 */\n      dup2\n      iszero\n      iszero\n      tag_461\n      jumpi\n      invalid\n    tag_461:\n      div\n        /* \"MLSAGVerify.sol\":5871:5872  v */\n      dup2\n        /* \"MLSAGVerify.sol\":5871:5874  v.n */\n      0x20\n      add\n        /* \"MLSAGVerify.sol\":5871:5891  v.n = (P.length / 2) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":5931:5932  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":5927:5928  v */\n      dup2\n        /* \"MLSAGVerify.sol\":5927:5930  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":5927:5932  v.n+1 */\n      add\n        /* \"MLSAGVerify.sol\":5906:5915  signature */\n      dup4\n        /* \"MLSAGVerify.sol\":5906:5922  signature.length */\n      mload\n        /* \"MLSAGVerify.sol\":5906:5933  signature.length != (v.n+1) */\n      eq\n      iszero\n        /* \"MLSAGVerify.sol\":5902:5947  if (signature.length != (v.n+1)) return false */\n      iszero\n      tag_462\n      jumpi\n        /* \"MLSAGVerify.sol\":5942:5947  false */\n      0x0\n        /* \"MLSAGVerify.sol\":5935:5947  return false */\n      swap2\n      pop\n      jump(tag_458)\n        /* \"MLSAGVerify.sol\":5902:5947  if (signature.length != (v.n+1)) return false */\n    tag_462:\n        /* \"MLSAGVerify.sol\":5975:5984  signature */\n      dup3\n        /* \"MLSAGVerify.sol\":5985:5986  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":5975:5987  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_463\n      jumpi\n      invalid\n    tag_463:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":5968:5969  v */\n      dup2\n        /* \"MLSAGVerify.sol\":5968:5972  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":5968:5987  v.ck = signature[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6049:6050  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":6043:6044  v */\n      dup2\n        /* \"MLSAGVerify.sol\":6043:6046  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":6043:6050  v.i = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6038:6254  for (v.i = 0; v.i < v.n; v.i++) {\r... */\n    tag_464:\n        /* \"MLSAGVerify.sol\":6058:6059  v */\n      dup1\n        /* \"MLSAGVerify.sol\":6058:6061  v.n */\n      0x20\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6052:6053  v */\n      dup2\n        /* \"MLSAGVerify.sol\":6052:6055  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6052:6061  v.i < v.n */\n      lt\n        /* \"MLSAGVerify.sol\":6038:6254  for (v.i = 0; v.i < v.n; v.i++) {\r... */\n      iszero\n      tag_465\n      jumpi\n        /* \"MLSAGVerify.sol\":6115:6116  P */\n      dup4\n        /* \"MLSAGVerify.sol\":6119:6120  v */\n      dup2\n        /* \"MLSAGVerify.sol\":6119:6122  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6117:6118  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":6117:6122  2*v.i */\n      mul\n        /* \"MLSAGVerify.sol\":6115:6123  P[2*v.i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_467\n      jumpi\n      invalid\n    tag_467:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6125:6126  P */\n      dup5\n        /* \"MLSAGVerify.sol\":6133:6134  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":6129:6130  v */\n      dup4\n        /* \"MLSAGVerify.sol\":6129:6132  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6127:6128  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":6127:6132  2*v.i */\n      mul\n        /* \"MLSAGVerify.sol\":6127:6134  2*v.i+1 */\n      add\n        /* \"MLSAGVerify.sol\":6125:6135  P[2*v.i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_468\n      jumpi\n      invalid\n    tag_468:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6086:6087  v */\n      dup3\n        /* \"MLSAGVerify.sol\":6086:6094  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6095:6096  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":6086:6097  v.point1[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_469\n      jumpi\n      invalid\n    tag_469:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":6099:6100  v */\n      dup4\n        /* \"MLSAGVerify.sol\":6099:6107  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6108:6109  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":6099:6110  v.point1[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_470\n      jumpi\n      invalid\n    tag_470:\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":6085:6136  (v.point1[0], v.point1[1]) = (P[2*v.i], P[2*v.i+1]) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6179:6242  CalculateRingSegment(msgHash, v.ck, signature[v.i+1], v.point1) */\n      tag_471\n        /* \"MLSAGVerify.sol\":6200:6207  msgHash */\n      dup6\n        /* \"MLSAGVerify.sol\":6209:6210  v */\n      dup3\n        /* \"MLSAGVerify.sol\":6209:6213  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6215:6224  signature */\n      dup6\n        /* \"MLSAGVerify.sol\":6229:6230  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":6225:6226  v */\n      dup6\n        /* \"MLSAGVerify.sol\":6225:6228  v.i */\n      0x40\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6225:6230  v.i+1 */\n      add\n        /* \"MLSAGVerify.sol\":6215:6231  signature[v.i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_472\n      jumpi\n      invalid\n    tag_472:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6233:6234  v */\n      dup5\n        /* \"MLSAGVerify.sol\":6233:6241  v.point1 */\n      0xc0\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6179:6199  CalculateRingSegment */\n      tag_117\n        /* \"MLSAGVerify.sol\":6179:6242  CalculateRingSegment(msgHash, v.ck, signature[v.i+1], v.point1) */\n      jump\t// in\n    tag_471:\n        /* \"MLSAGVerify.sol\":6172:6173  v */\n      dup2\n        /* \"MLSAGVerify.sol\":6172:6176  v.ck */\n      0x80\n      add\n        /* \"MLSAGVerify.sol\":6172:6242  v.ck = CalculateRingSegment(msgHash, v.ck, signature[v.i+1], v.point1) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6063:6064  v */\n      dup1\n        /* \"MLSAGVerify.sol\":6063:6066  v.i */\n      0x40\n      add\n        /* \"MLSAGVerify.sol\":6063:6068  v.i++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      0x1\n      add\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":6038:6254  for (v.i = 0; v.i < v.n; v.i++) {\r... */\n      jump(tag_464)\n    tag_465:\n        /* \"MLSAGVerify.sol\":6338:6347  signature */\n      dup3\n        /* \"MLSAGVerify.sol\":6348:6349  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":6338:6350  signature[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_473\n      jumpi\n      invalid\n    tag_473:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6330:6331  v */\n      dup2\n        /* \"MLSAGVerify.sol\":6330:6334  v.ck */\n      0x80\n      add\n      mload\n        /* \"MLSAGVerify.sol\":6330:6350  v.ck == signature[0] */\n      eq\n        /* \"MLSAGVerify.sol\":6319:6351  success = (v.ck == signature[0]) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":5625:6359  function VerifySAG(uint256 msgHash, uint256[] P, uint256[] signature)\r... */\n    tag_458:\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":1286:1447  function StartRing_NoHash(uint256 alpha)\r... */\n    tag_108:\n        /* \"MLSAGVerify.sol\":1361:1376  uint256[2] Pout */\n      tag_474\n      jump\t// in(tag_128)\n    tag_474:\n        /* \"MLSAGVerify.sol\":1401:1407  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1401:1416  ecMath.Multiply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc025d89b\n        /* \"MLSAGVerify.sol\":1417:1423  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":1417:1429  ecMath.GetG1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae5d39f6\n        /* \"MLSAGVerify.sol\":1417:1431  ecMath.GetG1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_476\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_476:\n        /* \"MLSAGVerify.sol\":1417:1431  ecMath.GetG1() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_477\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_477:\n        /* \"MLSAGVerify.sol\":1417:1431  ecMath.GetG1() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_478\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_478:\n        /* \"MLSAGVerify.sol\":1417:1431  ecMath.GetG1() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1433:1438  alpha */\n      dup5\n        /* \"MLSAGVerify.sol\":1401:1439  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      mul(0x20, 0x2)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_479:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_480\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_479)\n    tag_480:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"MLSAGVerify.sol\":1401:1439  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_482\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_482:\n        /* \"MLSAGVerify.sol\":1401:1439  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_483\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_483:\n        /* \"MLSAGVerify.sol\":1401:1439  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_484\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_484:\n        /* \"MLSAGVerify.sol\":1401:1439  ecMath.Multiply(ecMath.GetG1(), alpha) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":1394:1439  Pout = ecMath.Multiply(ecMath.GetG1(), alpha) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":1286:1447  function StartRing_NoHash(uint256 alpha)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n    tag_114:\n        /* \"ECMathInterface.sol\":3844:3851  address */\n      0x0\n        /* \"ECMathInterface.sol\":3876:3882  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECMathInterface.sol\":3861:3883  return address(ecMath) */\n      swap1\n      pop\n        /* \"ECMathInterface.sol\":3790:3888  function ECMath_GetAddress() public constant returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"MLSAGVerify.sol\":1966:2248  function CalculateRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P)\r... */\n    tag_117:\n        /* \"MLSAGVerify.sol\":2085:2096  uint256 ckp */\n      0x0\n        /* \"MLSAGVerify.sol\":2114:2136  uint256[2] memory temp */\n      tag_486\n      jump\t// in(tag_128)\n    tag_486:\n        /* \"MLSAGVerify.sol\":2154:2192  CalculateRingSegment_NoHash(ck, sk, P) */\n      tag_488\n        /* \"MLSAGVerify.sol\":2182:2184  ck */\n      dup6\n        /* \"MLSAGVerify.sol\":2186:2188  sk */\n      dup6\n        /* \"MLSAGVerify.sol\":2190:2191  P */\n      dup6\n        /* \"MLSAGVerify.sol\":2154:2181  CalculateRingSegment_NoHash */\n      tag_51\n        /* \"MLSAGVerify.sol\":2154:2192  CalculateRingSegment_NoHash(ck, sk, P) */\n      jump\t// in\n    tag_488:\n        /* \"MLSAGVerify.sol\":2147:2192  temp = CalculateRingSegment_NoHash(ck, sk, P) */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":2209:2240  RingHashFunction(msgHash, temp) */\n      tag_489\n        /* \"MLSAGVerify.sol\":2226:2233  msgHash */\n      dup7\n        /* \"MLSAGVerify.sol\":2235:2239  temp */\n      dup3\n        /* \"MLSAGVerify.sol\":2209:2225  RingHashFunction */\n      tag_75\n        /* \"MLSAGVerify.sol\":2209:2240  RingHashFunction(msgHash, temp) */\n      jump\t// in\n    tag_489:\n        /* \"MLSAGVerify.sol\":2203:2240  ckp = RingHashFunction(msgHash, temp) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":1966:2248  function CalculateRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P)\r... */\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n    tag_120:\n        /* \"ECMathInterface.sol\":3949:3953  uint */\n      0x0\n        /* \"ECMathInterface.sol\":3963:3977  uint code_size */\n      dup1\n        /* \"ECMathInterface.sol\":3982:3994  address addr */\n      0x0\n        /* \"ECMathInterface.sol\":3997:4016  ECMath_GetAddress() */\n      tag_491\n        /* \"ECMathInterface.sol\":3997:4014  ECMath_GetAddress */\n      tag_114\n        /* \"ECMathInterface.sol\":3997:4016  ECMath_GetAddress() */\n      jump\t// in\n    tag_491:\n        /* \"ECMathInterface.sol\":3982:4016  address addr = ECMath_GetAddress() */\n      swap1\n      pop\n        /* \"ECMathInterface.sol\":4064:4068  addr */\n      dup1\n        /* \"ECMathInterface.sol\":4052:4069  extcodesize(addr) */\n      extcodesize\n        /* \"ECMathInterface.sol\":4039:4069  code_size := extcodesize(addr) */\n      swap2\n      pop\n        /* \"ECMathInterface.sol\":4089:4098  code_size */\n      dup2\n        /* \"ECMathInterface.sol\":4082:4098  return code_size */\n      swap3\n      pop\n        /* \"ECMathInterface.sol\":3894:4103  function ECMath_GetCodeSize() public constant returns (uint) {\r... */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"MLSAGVerify.sol\":4405:4778  function CalculateLinkableRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n    tag_123:\n        /* \"MLSAGVerify.sol\":4546:4557  uint256 ckp */\n      0x0\n        /* \"MLSAGVerify.sol\":4575:4597  uint256[2] memory left */\n      tag_492\n      jump\t// in(tag_128)\n    tag_492:\n        /* \"MLSAGVerify.sol\":4608:4631  uint256[2] memory right */\n      tag_493\n      jump\t// in(tag_128)\n    tag_493:\n        /* \"MLSAGVerify.sol\":4658:4707  CalculateLinkableRingSegment_NoHash(ck, sk, P, I) */\n      tag_495\n        /* \"MLSAGVerify.sol\":4694:4696  ck */\n      dup8\n        /* \"MLSAGVerify.sol\":4698:4700  sk */\n      dup8\n        /* \"MLSAGVerify.sol\":4702:4703  P */\n      dup8\n        /* \"MLSAGVerify.sol\":4705:4706  I */\n      dup8\n        /* \"MLSAGVerify.sol\":4658:4693  CalculateLinkableRingSegment_NoHash */\n      tag_78\n        /* \"MLSAGVerify.sol\":4658:4707  CalculateLinkableRingSegment_NoHash(ck, sk, P, I) */\n      jump\t// in\n    tag_495:\n        /* \"MLSAGVerify.sol\":4642:4707  (left, right) = CalculateLinkableRingSegment_NoHash(ck, sk, P, I) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":4724:4770  LinkableRingHashFunction(msgHash, left, right) */\n      tag_496\n        /* \"MLSAGVerify.sol\":4749:4756  msgHash */\n      dup9\n        /* \"MLSAGVerify.sol\":4758:4762  left */\n      dup4\n        /* \"MLSAGVerify.sol\":4764:4769  right */\n      dup4\n        /* \"MLSAGVerify.sol\":4724:4748  LinkableRingHashFunction */\n      tag_72\n        /* \"MLSAGVerify.sol\":4724:4770  LinkableRingHashFunction(msgHash, left, right) */\n      jump\t// in\n    tag_496:\n        /* \"MLSAGVerify.sol\":4718:4770  ckp = LinkableRingHashFunction(msgHash, left, right) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":4405:4778  function CalculateLinkableRingSegment(uint256 msgHash, uint256 ck, uint256 sk, uint256[2] P, uint256[2] I)\r... */\n      pop\n      pop\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":8520:9218  function VerifyLSAG_Compressed(uint256 msgHash, uint256 I, uint256[] P, uint256[] signature)\r... */\n    tag_126:\n        /* \"MLSAGVerify.sol\":8647:8659  bool success */\n      0x0\n        /* \"MLSAGVerify.sol\":8677:8699  uint256[2] memory temp */\n      tag_497\n      jump\t// in(tag_128)\n    tag_497:\n        /* \"MLSAGVerify.sol\":8710:8735  uint256[] memory P_uncomp */\n      0x60\n        /* \"MLSAGVerify.sol\":8774:8799  uint256[] memory I_uncomp */\n      dup1\n        /* \"MLSAGVerify.sol\":8839:8848  uint256 i */\n      0x0\n        /* \"MLSAGVerify.sol\":8761:8762  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":8752:8753  P */\n      dup8\n        /* \"MLSAGVerify.sol\":8752:8760  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":8752:8762  P.length*2 */\n      mul\n        /* \"MLSAGVerify.sol\":8738:8763  new uint256[](P.length*2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_499\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":8738:8763  new uint256[](P.length*2) */\n      swap1\n      pop\n    tag_499:\n      pop\n        /* \"MLSAGVerify.sol\":8710:8763  uint256[] memory P_uncomp = new uint256[](P.length*2) */\n      swap3\n      pop\n        /* \"MLSAGVerify.sol\":8816:8817  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":8802:8818  new uint256[](2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_500\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":8802:8818  new uint256[](2) */\n      swap1\n      pop\n    tag_500:\n      pop\n        /* \"MLSAGVerify.sol\":8774:8818  uint256[] memory I_uncomp = new uint256[](2) */\n      swap2\n      pop\n        /* \"MLSAGVerify.sol\":8868:8869  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":8864:8869  i = 0 */\n      swap1\n      pop\n        /* \"MLSAGVerify.sol\":8859:9026  for (i = 0; i < P.length; i++) {\r... */\n    tag_501:\n        /* \"MLSAGVerify.sol\":8875:8876  P */\n      dup7\n        /* \"MLSAGVerify.sol\":8875:8883  P.length */\n      mload\n        /* \"MLSAGVerify.sol\":8871:8872  i */\n      dup2\n        /* \"MLSAGVerify.sol\":8871:8883  i < P.length */\n      lt\n        /* \"MLSAGVerify.sol\":8859:9026  for (i = 0; i < P.length; i++) {\r... */\n      iszero\n      tag_502\n      jumpi\n        /* \"MLSAGVerify.sol\":8912:8918  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":8912:8930  ecMath.ExpandPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5da7f69e\n        /* \"MLSAGVerify.sol\":8931:8932  P */\n      dup9\n        /* \"MLSAGVerify.sol\":8933:8934  i */\n      dup4\n        /* \"MLSAGVerify.sol\":8931:8935  P[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_504\n      jumpi\n      invalid\n    tag_504:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8912:8936  ecMath.ExpandPoint(P[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_505\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_505:\n        /* \"MLSAGVerify.sol\":8912:8936  ecMath.ExpandPoint(P[i]) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_506\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_506:\n        /* \"MLSAGVerify.sol\":8912:8936  ecMath.ExpandPoint(P[i]) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_507\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_507:\n        /* \"MLSAGVerify.sol\":8912:8936  ecMath.ExpandPoint(P[i]) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":8905:8936  temp = ecMath.ExpandPoint(P[i]) */\n      swap4\n      pop\n        /* \"MLSAGVerify.sol\":8967:8971  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":8972:8973  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":8967:8974  temp[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_508\n      jumpi\n      invalid\n    tag_508:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8951:8959  P_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":8962:8963  i */\n      dup3\n        /* \"MLSAGVerify.sol\":8960:8961  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":8960:8963  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":8951:8964  P_uncomp[2*i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_509\n      jumpi\n      invalid\n    tag_509:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":8951:8974  P_uncomp[2*i] = temp[0] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":9007:9011  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":9012:9013  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":9007:9014  temp[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_510\n      jumpi\n      invalid\n    tag_510:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":8989:8997  P_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":9002:9003  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":9000:9001  i */\n      dup4\n        /* \"MLSAGVerify.sol\":8998:8999  2 */\n      0x2\n        /* \"MLSAGVerify.sol\":8998:9001  2*i */\n      mul\n        /* \"MLSAGVerify.sol\":8998:9003  2*i+1 */\n      add\n        /* \"MLSAGVerify.sol\":8989:9004  P_uncomp[2*i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_511\n      jumpi\n      invalid\n    tag_511:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":8989:9014  P_uncomp[2*i+1] = temp[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":8885:8888  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":8859:9026  for (i = 0; i < P.length; i++) {\r... */\n      jump(tag_501)\n    tag_502:\n        /* \"MLSAGVerify.sol\":9053:9059  ecMath */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MLSAGVerify.sol\":9053:9071  ecMath.ExpandPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5da7f69e\n        /* \"MLSAGVerify.sol\":9072:9073  I */\n      dup10\n        /* \"MLSAGVerify.sol\":9053:9074  ecMath.ExpandPoint(I) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_512\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_512:\n        /* \"MLSAGVerify.sol\":9053:9074  ecMath.ExpandPoint(I) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_513\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_513:\n        /* \"MLSAGVerify.sol\":9053:9074  ecMath.ExpandPoint(I) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_514\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_514:\n        /* \"MLSAGVerify.sol\":9053:9074  ecMath.ExpandPoint(I) */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":9046:9074  temp = ecMath.ExpandPoint(I) */\n      swap4\n      pop\n        /* \"MLSAGVerify.sol\":9115:9119  temp */\n      dup4\n        /* \"MLSAGVerify.sol\":9120:9121  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":9115:9122  temp[0] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_515\n      jumpi\n      invalid\n    tag_515:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":9124:9128  temp */\n      dup5\n        /* \"MLSAGVerify.sol\":9129:9130  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":9124:9131  temp[1] */\n      0x2\n      dup2\n      lt\n      iszero\n      iszero\n      tag_516\n      jumpi\n      invalid\n    tag_516:\n      0x20\n      mul\n      add\n      mload\n        /* \"MLSAGVerify.sol\":9086:9094  I_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":9095:9096  0 */\n      0x0\n        /* \"MLSAGVerify.sol\":9086:9097  I_uncomp[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_517\n      jumpi\n      invalid\n    tag_517:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":9099:9107  I_uncomp */\n      dup5\n        /* \"MLSAGVerify.sol\":9108:9109  1 */\n      0x1\n        /* \"MLSAGVerify.sol\":9099:9110  I_uncomp[1] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_518\n      jumpi\n      invalid\n    tag_518:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n        /* \"MLSAGVerify.sol\":9085:9132  (I_uncomp[0], I_uncomp[1]) = (temp[0], temp[1]) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"MLSAGVerify.sol\":9160:9210  VerifyLSAG(msgHash, I_uncomp, P_uncomp, signature) */\n      tag_519\n        /* \"MLSAGVerify.sol\":9171:9178  msgHash */\n      dup10\n        /* \"MLSAGVerify.sol\":9180:9188  I_uncomp */\n      dup4\n        /* \"MLSAGVerify.sol\":9190:9198  P_uncomp */\n      dup6\n        /* \"MLSAGVerify.sol\":9200:9209  signature */\n      dup10\n        /* \"MLSAGVerify.sol\":9160:9170  VerifyLSAG */\n      tag_36\n        /* \"MLSAGVerify.sol\":9160:9210  VerifyLSAG(msgHash, I_uncomp, P_uncomp, signature) */\n      jump\t// in\n    tag_519:\n        /* \"MLSAGVerify.sol\":9153:9210  return VerifyLSAG(msgHash, I_uncomp, P_uncomp, signature) */\n      swap5\n      pop\n        /* \"MLSAGVerify.sol\":8520:9218  function VerifyLSAG_Compressed(uint256 msgHash, uint256 I, uint256[] P, uint256[] signature)\r... */\n      pop\n      pop\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n    tag_128:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x2\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_171:\n      0x180\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      tag_520\n      jump\t// in(tag_521)\n    tag_520:\n      dup2\n      mstore\n      0x20\n      add\n      tag_522\n      jump\t// in(tag_521)\n    tag_522:\n      dup2\n      mstore\n      0x20\n      add\n      tag_523\n      jump\t// in(tag_521)\n    tag_523:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_268:\n      0x20\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x1\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_521:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x2\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"MLSAGVerify.sol\":91:16066  contract MLSAGVerify is ECMathInterface {\r... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820aada2f4c302f892e7f4c77e27b061ad863e12d25c425936f1a9887a1f2f5eba20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH3 0x489B DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x90 DUP2 PUSH3 0x98 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST POP POP PUSH3 0x219 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x12E JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F DUP2 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434D6174680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x4672 DUP1 PUSH3 0x229 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x154 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x66D1749 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x813D72A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x200FC39C EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x26E37EC5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x2D57F6E7 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x36490458 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x38F3E171 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x44FC0C93 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0x490EE1CB EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x4F2CE9A3 EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x5C859D09 EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0x6FB015CC EQ PUSH2 0x8E7 JUMPI DUP1 PUSH4 0x81B4EF31 EQ PUSH2 0x986 JUMPI DUP1 PUSH4 0x88C01ED8 EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAF6 JUMPI DUP1 PUSH4 0x9C8FDA72 EQ PUSH2 0xB4D JUMPI DUP1 PUSH4 0xA3D53298 EQ PUSH2 0xB90 JUMPI DUP1 PUSH4 0xBE26733C EQ PUSH2 0xBF9 JUMPI DUP1 PUSH4 0xC17065D0 EQ PUSH2 0xC10 JUMPI DUP1 PUSH4 0xC4E8E6A6 EQ PUSH2 0xD1E JUMPI DUP1 PUSH4 0xC8FC7CA8 EQ PUSH2 0xDE9 JUMPI DUP1 PUSH4 0xCBA51FF3 EQ PUSH2 0xE52 JUMPI DUP1 PUSH4 0xDB8C735E EQ PUSH2 0xEA9 JUMPI DUP1 PUSH4 0xEFD6B306 EQ PUSH2 0xF2D JUMPI DUP1 PUSH4 0xF8C8B0CA EQ PUSH2 0xF58 JUMPI DUP1 PUSH4 0xFF7D69A8 EQ PUSH2 0x100B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x182D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x510 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4F5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x523 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x729 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x878 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x970 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x289F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA99 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAE2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAC7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0B PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3389 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBBB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBCB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0E PUSH2 0x38E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD04 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x399F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x3E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE14 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3FC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE3F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE24 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE67 PUSH2 0x419C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF17 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x41C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF42 PUSH2 0x41F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x420D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x424B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x10EA PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP7 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1121 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1292 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP8 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x117E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x122B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1241 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x125E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1277 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x129D DUP8 DUP4 DUP8 PUSH2 0x3E3B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B3 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP8 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12EB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x2 DUP9 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1321 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1492 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP9 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x137E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x142B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1441 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x145E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1477 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP10 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14EC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1599 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15AF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x15CC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15E5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x160C DUP10 DUP4 DUP6 DUP10 PUSH2 0x399F JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1624 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x2 DUP6 MLOAD EQ ISZERO ISZERO PUSH2 0x1638 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x1647 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x1658 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x2 DUP5 MLOAD DUP2 ISZERO ISZERO PUSH2 0x1665 JUMPI INVALID JUMPDEST DIV DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD ADD DUP4 MLOAD EQ ISZERO ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1698 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x16BA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x16D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH2 0x100 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP4 PUSH2 0x100 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1709 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x1802 JUMPI DUP4 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1748 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x176A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1787 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x17E4 DUP7 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0x40 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17CA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x420D JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x1723 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1811 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1841 DUP4 PUSH2 0x183C DUP5 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1851 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x1859 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x191C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1930 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1999 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6032FC3F DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A9B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP3 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BB2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B97 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2E PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x1C36 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D91 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D76 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP5 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E94 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E79 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC753FE8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F97 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FC5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FAA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203E PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2046 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2050 DUP6 DUP6 PUSH2 0x1849 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x2063 DUP7 DUP4 DUP4 PUSH2 0x289F JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2078 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP7 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20AF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2220 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP8 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x210C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x21B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x21CF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x21EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2205 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x222C DUP9 DUP9 DUP5 DUP9 PUSH2 0x2277 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2244 PUSH2 0x4601 JUMP JUMPDEST DUP4 MLOAD SWAP2 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP5 MUL ADD DUP2 MSTORE DUP1 MLOAD DUP6 KECCAK256 DUP3 MSTORE POP DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT ISZERO ISZERO PUSH2 0x2269 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2281 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x60 DUP7 DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP7 MLOAD DUP2 ISZERO ISZERO PUSH2 0x22A2 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2629 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x22C6 JUMPI INVALID JUMPDEST DIV DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP5 MLOAD EQ ISZERO ISZERO PUSH2 0x22F0 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2329 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x233C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x25F5 JUMPI DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2375 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD SUB DUP3 PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x248A JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x23D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x23F8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2415 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP5 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x242C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x246C DUP7 DUP4 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x1 DUP7 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2458 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x41C6 JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x60 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x2394 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD SUB DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x24BC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x24DE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x24FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP5 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2512 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x2551 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x253D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x1C26 JUMP JUMPDEST DUP3 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x2 DUP4 PUSH1 0x40 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2580 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2597 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x25B8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x25D2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x25FE DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2616 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD EQ SWAP3 POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 ISZERO ISZERO PUSH2 0x26FF JUMPI INVALID JUMPDEST DUP3 DUP5 MULMOD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x278B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x279F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SUB SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 ISZERO ISZERO PUSH2 0x2893 JUMPI INVALID JUMPDEST DUP2 DUP6 ADDMOD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x293B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP5 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2972 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2986 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x299A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x29AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x29F1 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2ACE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2AE2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x2B17 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B28 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2B30 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2B38 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C93 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C78 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP7 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D96 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D7B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC753FE8 DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E7E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EAC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6032FC3F DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FA8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x301F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP4 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP6 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC753FE8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32AA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x332B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x341E JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F DUP2 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434D6174680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3510 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x3518 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3673 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3658 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x369D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6032FC3F DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3775 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x375A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP3 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3871 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3856 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x397C JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH2 0x39A9 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP8 MLOAD DUP2 ISZERO ISZERO PUSH2 0x39BA JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x39CB JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x2 DUP7 MLOAD DUP2 ISZERO ISZERO PUSH2 0x39D8 JUMPI INVALID JUMPDEST DIV DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP7 MLOAD DUP2 ISZERO ISZERO PUSH2 0x39F7 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x3A08 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x3E31 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x3A1B JUMPI INVALID JUMPDEST DIV DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP5 MLOAD EQ ISZERO ISZERO PUSH2 0x3A45 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A7E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3A91 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x3DFD JUMPI DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3ACA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3AFD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3B24 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP DUP3 PUSH2 0x100 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD SUB DUP3 PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x3C25 JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3B93 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3BBA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP DUP3 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x3C07 DUP8 DUP4 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x1 DUP7 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3BED JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD DUP7 PUSH2 0x100 ADD MLOAD PUSH2 0x420D JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x60 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x3B46 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD SUB DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3C62 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3C89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP DUP3 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x3CD5 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3CBB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x2B20 JUMP JUMPDEST DUP2 SWAP2 POP DUP1 SWAP1 POP DUP4 PUSH1 0xC0 ADD DUP5 PUSH1 0xE0 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 MSTORE POP POP PUSH1 0x1 PUSH1 0x4 DUP4 PUSH1 0x40 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3D12 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3D29 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3D4A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3D64 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3D85 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x2 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3D9F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3DC0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x3 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3DDA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x3AAB JUMP JUMPDEST PUSH2 0x3E06 DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3E1E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD EQ SWAP3 POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E45 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x3E54 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x3E65 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x3FBF JUMP JUMPDEST PUSH1 0x2 DUP5 MLOAD DUP2 ISZERO ISZERO PUSH2 0x3E72 JUMPI INVALID JUMPDEST DIV DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD ADD DUP4 MLOAD EQ ISZERO ISZERO PUSH2 0x3E96 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x3FBF JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3EA5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x3F9D JUMPI DUP4 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3EE9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3F0B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3F28 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3F3F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x3F7F DUP6 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0x40 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3F6B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x41C6 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x3EC4 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3FAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3FCF PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x412A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x410F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4168 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x418D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D0 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x41DB DUP6 DUP6 DUP6 PUSH2 0x1C26 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E7 DUP7 DUP3 PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x41FF PUSH2 0x419C JUMP JUMPDEST SWAP1 POP DUP1 EXTCODESIZE SWAP2 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4217 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x421F PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x422B DUP8 DUP8 DUP8 DUP8 PUSH2 0x2B20 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x423E DUP9 DUP4 DUP4 PUSH2 0x289F JUMP JUMPDEST SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4255 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP8 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x428D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x4431 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP9 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x431D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x438C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x43CA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x43E0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x43FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4416 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x42C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x4513 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x4527 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x453B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4553 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x4572 DUP10 DUP4 DUP6 DUP10 PUSH2 0x161A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45E1 PUSH2 0x4624 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45EE PUSH2 0x4624 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45FB PUSH2 0x4624 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xaa 0xda 0x2f 0x4c ADDRESS 0x2f DUP10 0x2e PUSH32 0x4C77E27B061AD863E12D25C425936F1A9887A1F2F5EBA2002900000000000000 ",
							"sourceMap": "91:15975:2:-;;;200:69;8:9:-1;5:2;;;30:1;27;20:12;5:2;200:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;248:10;146::0;138:5;;:18;;;;;;;;;;;;;;;;;;4596:32:1;4617:10;4596:20;;;:32;;;:::i;:::-;4549:84;200:69:2;91:15975;;4109:285:1;226:5:0;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;4324:10:1;4308:6;;:27;;;;;;;;;;;;;;;;;;4345:44;4378:10;4345:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:285;:::o;91:15975:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063066d1749146101595780630813d72a14610224578063200fc39c1461033257806326e37ec5146104405780632d57f6e71461048b578063364904581461055257806338f3e171146105f457806344fc0c931461066e578063490ee1cb146107435780634f2ce9a3146107bd5780635c859d09146108925780636fb015cc146108e757806381b4ef311461098657806388c01ed8146109f65780638da5cb5b14610af65780639c8fda7214610b4d578063a3d5329814610b90578063be26733c14610bf9578063c17065d014610c10578063c4e8e6a614610d1e578063c8fc7ca814610de9578063cba51ff314610e52578063db8c735e14610ea9578063efd6b30614610f2d578063f8c8b0ca14610f58578063ff7d69a81461100b575b600080fd5b34801561016557600080fd5b5061020a6004803603810190808035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506110e0565b604051808215151515815260200191505060405180910390f35b34801561023057600080fd5b50610318600480360381019080803590602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506112a9565b604051808215151515815260200191505060405180910390f35b34801561033e57600080fd5b506104266004803603810190808035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061161a565b604051808215151515815260200191505060405180910390f35b34801561044c57600080fd5b50610475600480360381019080803590602001909291908035906020019092919050505061182d565b6040518082815260200191505060405180910390f35b34801561049757600080fd5b506104e5600480360381019080803590602001909291908060400190600280602002604051908101604052809291908260026020028082843782019150505050509192919290505050611849565b6040518083600260200280838360005b838110156105105780820151818401526020810190506104f5565b5050505090500182600260200280838360005b8381101561053e578082015181840152602081019050610523565b505050509050019250505060405180910390f35b34801561055e57600080fd5b506105b660048036038101908080359060200190929190803590602001909291908060400190600280602002604051908101604052809291908260026020028082843782019150505050509192919290505050611c26565b6040518082600260200280838360005b838110156105e15780820151818401526020810190506105c6565b5050505090500191505060405180910390f35b34801561060057600080fd5b5061065860048036038101908080359060200190929190803590602001909291908060400190600280602002604051908101604052809291908260026020028082843782019150505050509192919290505050612034565b6040518082815260200191505060405180910390f35b34801561067a57600080fd5b506107296004803603810190808035906020019092919080359060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061206e565b604051808215151515815260200191505060405180910390f35b34801561074f57600080fd5b506107a760048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050612239565b6040518082815260200191505060405180910390f35b3480156107c957600080fd5b5061087860048036038101908080359060200190929190803590602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050612277565b604051808215151515815260200191505060405180910390f35b34801561089e57600080fd5b506108d1600480360381019080803590602001909291908035906020019092919080359060200190929190505050612633565b6040518082815260200191505060405180910390f35b3480156108f357600080fd5b50610970600480360381019080803590602001909291908060400190600280602002604051908101604052809291908260026020028082843782019150505050509192919290806040019060028060200260405190810160405280929190826002602002808284378201915050505050919291929050505061289f565b6040518082815260200191505060405180910390f35b34801561099257600080fd5b506109e06004803603810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437820191505050505091929192905050506129fb565b6040518082815260200191505060405180910390f35b348015610a0257600080fd5b50610a89600480360381019080803590602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437820191505050505091929192908060400190600280602002604051908101604052809291908260026020028082843782019150505050509192919290505050612b20565b6040518083600260200280838360005b83811015610ab4578082015181840152602081019050610a99565b5050505090500182600260200280838360005b83811015610ae2578082015181840152602081019050610ac7565b505050509050019250505060405180910390f35b348015610b0257600080fd5b50610b0b613364565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b5957600080fd5b50610b8e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613389565b005b348015610b9c57600080fd5b50610bbb60048036038101908080359060200190929190505050613508565b6040518082600260200280838360005b83811015610be6578082015181840152602081019050610bcb565b5050505090500191505060405180910390f35b348015610c0557600080fd5b50610c0e6138e7565b005b348015610c1c57600080fd5b50610d046004803603810190808035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061399f565b604051808215151515815260200191505060405180910390f35b348015610d2a57600080fd5b50610dcf600480360381019080803590602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050613e3b565b604051808215151515815260200191505060405180910390f35b348015610df557600080fd5b50610e1460048036038101908080359060200190929190505050613fc7565b6040518082600260200280838360005b83811015610e3f578082015181840152602081019050610e24565b5050505090500191505060405180910390f35b348015610e5e57600080fd5b50610e6761419c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610eb557600080fd5b50610f1760048036038101908080359060200190929190803590602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437820191505050505091929192905050506141c6565b6040518082815260200191505060405180910390f35b348015610f3957600080fd5b50610f426141f2565b6040518082815260200191505060405180910390f35b348015610f6457600080fd5b50610ff56004803603810190808035906020019092919080359060200190929190803590602001909291908060400190600280602002604051908101604052809291908260026020028082843782019150505050509192919290806040019060028060200260405190810160405280929190826002602002808284378201915050505050919291929050505061420d565b6040518082815260200191505060405180910390f35b34801561101757600080fd5b506110c66004803603810190808035906020019092919080359060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061424b565b604051808215151515815260200191505060405180910390f35b60006110ea614580565b6060600060028651026040519080825280602002602001820160405280156111215781602001602082028038833980820191505090505b509150600090505b855181101561129257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da7f69e878381518110151561117e57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506040805180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561121257600080fd5b8101908091905050925082600060028110151561122b57fe5b6020020151828260020281518110151561124157fe5b906020019060200201818152505082600160028110151561125e57fe5b6020020151826001836002020181518110151561127757fe5b90602001906020020181815250508080600101915050611129565b61129d878387613e3b565b93505050509392505050565b60006112b3614580565b606080600060028751026040519080825280602002602001820160405280156112eb5781602001602082028038833980820191505090505b50925060028851026040519080825280602002602001820160405280156113215781602001602082028038833980820191505090505b509150600090505b865181101561149257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da7f69e888381518110151561137e57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506040805180830381600087803b1580156113d957600080fd5b505af11580156113ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561141257600080fd5b8101908091905050935083600060028110151561142b57fe5b6020020151838260020281518110151561144157fe5b906020019060200201818152505083600160028110151561145e57fe5b6020020151836001836002020181518110151561147757fe5b90602001906020020181815250508080600101915050611329565b600090505b875181101561160057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da7f69e89838151811015156114ec57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506040805180830381600087803b15801561154757600080fd5b505af115801561155b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561158057600080fd5b8101908091905050935083600060028110151561159957fe5b602002015182826002028151811015156115af57fe5b90602001906020020181815250508360016002811015156115cc57fe5b602002015182600183600202018151811015156115e557fe5b90602001906020020181815250508080600101915050611497565b61160c8983858961399f565b945050505050949350505050565b60006116246145a2565b600285511415156116385760009150611824565b60006002855181151561164757fe5b061415156116585760009150611824565b6002845181151561166557fe5b04816020018181525050600181602001510183511415156116895760009150611824565b82600081518110151561169857fe5b906020019060200201518160800181815250508460008151811015156116ba57fe5b906020019060200201518560018151811015156116d357fe5b9060200190602002015182610100015160006002811015156116f157fe5b60200201836101000151600160028110151561170957fe5b602002018281525082815250505060008160400181815250505b8060200151816040015110156118025783816040015160020281518110151561174857fe5b9060200190602002015184600183604001516002020181518110151561176a57fe5b906020019060200201518260c00151600060028110151561178757fe5b602002018360c00151600160028110151561179e57fe5b60200201828152508281525050506117e48682608001518560018560400151018151811015156117ca57fe5b906020019060200201518460c0015185610100015161420d565b81608001818152505080604001805180919060010181525050611723565b82600081518110151561181157fe5b9060200190602002015181608001511491505b50949350505050565b60006118418361183c84613fc7565b6129fb565b905092915050565b611851614580565b611859614580565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5d39f66040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016040805180830381600087803b15801561191c57600080fd5b505af1158015611930573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561195557600080fd5b8101908091905050866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b838110156119b4578082015181840152602081019050611999565b50505050905001828152602001925050506040805180830381600087803b1580156119de57600080fd5b505af11580156119f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015611a1757600080fd5b81019080919050509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636032fc3f846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600260200280838360005b83811015611ab6578082015181840152602081019050611a9b565b505050509050019150506040805180830381600087803b158015611ad957600080fd5b505af1158015611aed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015611b1257600080fd5b81019080919050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b82866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015611bb2578082015181840152602081019050611b97565b50505050905001828152602001925050506040805180830381600087803b158015611bdc57600080fd5b505af1158015611bf0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015611c1557600080fd5b810190809190505090509250929050565b611c2e614580565b611c36614580565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5d39f66040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016040805180830381600087803b158015611cf957600080fd5b505af1158015611d0d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015611d3257600080fd5b8101908091905050866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015611d91578082015181840152602081019050611d76565b50505050905001828152602001925050506040805180830381600087803b158015611dbb57600080fd5b505af1158015611dcf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015611df457600080fd5b81019080919050509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b84876040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015611e94578082015181840152602081019050611e79565b50505050905001828152602001925050506040805180830381600087803b158015611ebe57600080fd5b505af1158015611ed2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015611ef757600080fd5b81019080919050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c753fe883836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015611f97578082015181840152602081019050611f7c565b5050505090500182600260200280838360005b83811015611fc5578082015181840152602081019050611faa565b50505050905001925050506040805180830381600087803b158015611fe957600080fd5b505af1158015611ffd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561202257600080fd5b81019080919050509150509392505050565b600061203e614580565b612046614580565b6120508585611849565b809250819350505061206386838361289f565b925050509392505050565b6000612078614580565b6060600060028651026040519080825280602002602001820160405280156120af5781602001602082028038833980820191505090505b509150600090505b855181101561222057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da7f69e878381518110151561210c57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506040805180830381600087803b15801561216757600080fd5b505af115801561217b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156121a057600080fd5b810190809190505092508260006002811015156121b957fe5b602002015182826002028151811015156121cf57fe5b90602001906020020181815250508260016002811015156121ec57fe5b6020020151826001836002020181518110151561220557fe5b906020019060200201818152505080806001019150506120b7565b61222c88888488612277565b9350505050949350505050565b600080612244614601565b8351915060405160208084020181528051852082525080600060018110151561226957fe5b602002015192505050919050565b60006122816145a2565b6060868260000181815250506000826000015160020286518115156122a257fe5b061415156122b35760009250612629565b816000015160020285518115156122c657fe5b04826020018181525050600182602001518360000151020184511415156122f05760009250612629565b60018260000151600202016040519080825280602002602001820160405280156123295781602001602082028038833980820191505090505b5090508581600081518110151561233c57fe5b906020019060200201818152505060008260400181815250505b8160000151826040015110156125f55783600081518110151561237557fe5b9060200190602002015182608001818152505060008260600181815250505b60018260200151038260600151101561248a5781604001518260600151836000015102018260a0018181525050848260a001516002028151811015156123d657fe5b906020019060200201518560018460a00151600202018151811015156123f857fe5b906020019060200201518360c00151600060028110151561241557fe5b602002018460c00151600160028110151561242c57fe5b602002018281525082815250505061246c8683608001518660018660a001510181518110151561245857fe5b906020019060200201518560c001516141c6565b82608001818152505081606001805180919060010181525050612394565b81604001516001836020015103836000015102018260a0018181525050848260a001516002028151811015156124bc57fe5b906020019060200201518560018460a00151600202018151811015156124de57fe5b906020019060200201518360c0015160006002811015156124fb57fe5b602002018460c00151600160028110151561251257fe5b602002018281525082815250505061255182608001518560018560a001510181518110151561253d57fe5b906020019060200201518460c00151611c26565b8260c0018190525060016002836040015102018260a00181815250508160c00151600060028110151561258057fe5b6020020151818360a0015181518110151561259757fe5b90602001906020020181815250508160c0015160016002811015156125b857fe5b60200201518160018460a00151018151811015156125d257fe5b906020019060200201818152505081604001805180919060010181525050612356565b6125fe81612239565b82608001818152505083600081518110151561261657fe5b9060200190602002015182608001511492505b5050949350505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1ff535b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156126bb57600080fd5b505af11580156126cf573d6000803e3d6000fd5b505050506040513d60208110156126e557600080fd5b81019080805190602001909291905050508015156126ff57fe5b828409905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1ff535b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561278b57600080fd5b505af115801561279f573d6000803e3d6000fd5b505050506040513d60208110156127b557600080fd5b8101908080519060200190929190505050039050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1ff535b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561284f57600080fd5b505af1158015612863573d6000803e3d6000fd5b505050506040513d602081101561287957600080fd5b810190808051906020019092919050505080151561289357fe5b81850890509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1ff535b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561292757600080fd5b505af115801561293b573d6000803e3d6000fd5b505050506040513d602081101561295157600080fd5b81019080805190602001909291905050508484600060028110151561297257fe5b602002015185600160028110151561298657fe5b602002015185600060028110151561299a57fe5b60200201518660016002811015156129ae57fe5b602002015160405180868152602001858152602001848152602001838152602001828152602001955050505050506040518091039020600190048115156129f157fe5b0690509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1ff535b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612a8357600080fd5b505af1158015612a97573d6000803e3d6000fd5b505050506040513d6020811015612aad57600080fd5b810190808051906020019092919050505083836000600281101515612ace57fe5b6020020151846001600281101515612ae257fe5b6020020151604051808481526020018381526020018281526020019350505050604051809103902060019004811515612b1757fe5b06905092915050565b612b28614580565b612b30614580565b612b38614580565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5d39f66040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016040805180830381600087803b158015612bfb57600080fd5b505af1158015612c0f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015612c3457600080fd5b8101908091905050886040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015612c93578082015181840152602081019050612c78565b50505050905001828152602001925050506040805180830381600087803b158015612cbd57600080fd5b505af1158015612cd1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015612cf657600080fd5b81019080919050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b86896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015612d96578082015181840152602081019050612d7b565b50505050905001828152602001925050506040805180830381600087803b158015612dc057600080fd5b505af1158015612dd4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015612df957600080fd5b81019080919050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c753fe884836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015612e99578082015181840152602081019050612e7e565b5050505090500182600260200280838360005b83811015612ec7578082015181840152602081019050612eac565b50505050905001925050506040805180830381600087803b158015612eeb57600080fd5b505af1158015612eff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015612f2457600080fd5b81019080919050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636032fc3f866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600260200280838360005b83811015612fc3578082015181840152602081019050612fa8565b505050509050019150506040805180830381600087803b158015612fe657600080fd5b505af1158015612ffa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561301f57600080fd5b81019080919050509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b83886040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b838110156130bf5780820151818401526020810190506130a4565b50505050905001828152602001925050506040805180830381600087803b1580156130e957600080fd5b505af11580156130fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561312257600080fd5b81019080919050509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b85896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b838110156131c25780820151818401526020810190506131a7565b50505050905001828152602001925050506040805180830381600087803b1580156131ec57600080fd5b505af1158015613200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561322557600080fd5b81019080919050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c753fe883836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b838110156132c55780820151818401526020810190506132aa565b5050505090500182600260200280838360005b838110156132f35780820151818401526020810190506132d8565b50505050905001925050506040805180830381600087803b15801561331757600080fd5b505af115801561332b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561335057600080fd5b810190809190505091505094509492505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561341e575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561342857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7cc5320aa18fb40c93aed6f76ae28088a8aaf67a112e0ca55367cd087b21802f8160405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260068152602001807f45434d61746800000000000000000000000000000000000000000000000000008152506020019250505060405180910390a150565b613510614580565b613518614580565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5d39f66040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016040805180830381600087803b1580156135db57600080fd5b505af11580156135ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561361457600080fd5b8101908091905050856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015613673578082015181840152602081019050613658565b50505050905001828152602001925050506040805180830381600087803b15801561369d57600080fd5b505af11580156136b1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156136d657600080fd5b81019080919050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636032fc3f826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600260200280838360005b8381101561377557808201518184015260208101905061375a565b505050509050019150506040805180830381600087803b15801561379857600080fd5b505af11580156137ac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156137d157600080fd5b81019080919050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b82856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b83811015613871578082015181840152602081019050613856565b50505050905001828152602001925050506040805180830381600087803b15801561389b57600080fd5b505af11580156138af573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156138d457600080fd5b8101908091905050905080915050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561397c575060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561398657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b60006139a96145a2565b60606000600287518115156139ba57fe5b061415156139cb5760009250613e31565b600286518115156139d857fe5b048260000181815250506000826000015160020286518115156139f757fe5b06141515613a085760009250613e31565b81600001516002028551811515613a1b57fe5b0482602001818152505060018260200151836000015102018451141515613a455760009250613e31565b6001826000015160040201604051908082528060200260200182016040528015613a7e5781602001602082028038833980820191505090505b50905086816000815181101515613a9157fe5b906020019060200201818152505060008260400181815250505b816000015182604001511015613dfd57836000815181101515613aca57fe5b906020019060200201518260800181815250506040805190810160405280878460400151600202815181101515613afd57fe5b906020019060200201518152602001876001856040015160020201815181101515613b2457fe5b9060200190602002015181525082610100018190525060008260600181815250505b600182602001510382606001511015613c255781604001518260600151836000015102018260a00181815250506040805190810160405280868460a00151600202815181101515613b9357fe5b9060200190602002015181526020018660018560a0015160020201815181101515613bba57fe5b906020019060200201518152508260c00181905250613c078783608001518660018660a0015101815181101515613bed57fe5b906020019060200201518560c0015186610100015161420d565b82608001818152505081606001805180919060010181525050613b46565b81604001516001836020015103836000015102018260a00181815250506040805190810160405280868460a00151600202815181101515613c6257fe5b9060200190602002015181526020018660018560a0015160020201815181101515613c8957fe5b906020019060200201518152508260c00181905250613cd582608001518560018560a0015101815181101515613cbb57fe5b906020019060200201518460c00151856101000151612b20565b8191508090508360c0018460e001829052829052505060016004836040015102018260a00181815250508160c001516000600281101515613d1257fe5b6020020151818360a00151815181101515613d2957fe5b90602001906020020181815250508160c001516001600281101515613d4a57fe5b60200201518160018460a0015101815181101515613d6457fe5b90602001906020020181815250508160e001516000600281101515613d8557fe5b60200201518160028460a0015101815181101515613d9f57fe5b90602001906020020181815250508160e001516001600281101515613dc057fe5b60200201518160038460a0015101815181101515613dda57fe5b906020019060200201818152505081604001805180919060010181525050613aab565b613e0681612239565b826080018181525050836000815181101515613e1e57fe5b9060200190602002015182608001511492505b5050949350505050565b6000613e456145a2565b600060028551811515613e5457fe5b06141515613e655760009150613fbf565b60028451811515613e7257fe5b0481602001818152505060018160200151018351141515613e965760009150613fbf565b826000815181101515613ea557fe5b9060200190602002015181608001818152505060008160400181815250505b806020015181604001511015613f9d57838160400151600202815181101515613ee957fe5b90602001906020020151846001836040015160020201815181101515613f0b57fe5b906020019060200201518260c001516000600281101515613f2857fe5b602002018360c001516001600281101515613f3f57fe5b6020020182815250828152505050613f7f858260800151856001856040015101815181101515613f6b57fe5b906020019060200201518460c001516141c6565b81608001818152505080604001805180919060010181525050613ec4565b826000815181101515613fac57fe5b9060200190602002015181608001511491505b509392505050565b613fcf614580565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c025d89b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5d39f66040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016040805180830381600087803b15801561409257600080fd5b505af11580156140a6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156140cb57600080fd5b8101908091905050846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600260200280838360005b8381101561412a57808201518184015260208101905061410f565b50505050905001828152602001925050506040805180830381600087803b15801561415457600080fd5b505af1158015614168573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250604081101561418d57600080fd5b81019080919050509050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006141d0614580565b6141db858585611c26565b90506141e786826129fb565b915050949350505050565b60008060006141ff61419c565b9050803b9150819250505090565b6000614217614580565b61421f614580565b61422b87878787612b20565b809250819350505061423e88838361289f565b9250505095945050505050565b6000614255614580565b6060806000600287510260405190808252806020026020018201604052801561428d5781602001602082028038833980820191505090505b50925060026040519080825280602002602001820160405280156142c05781602001602082028038833980820191505090505b509150600090505b865181101561443157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da7f69e888381518110151561431d57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506040805180830381600087803b15801561437857600080fd5b505af115801561438c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156143b157600080fd5b810190809190505093508360006002811015156143ca57fe5b602002015183826002028151811015156143e057fe5b90602001906020020181815250508360016002811015156143fd57fe5b6020020151836001836002020181518110151561441657fe5b906020019060200201818152505080806001019150506142c8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da7f69e896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506040805180830381600087803b1580156144c157600080fd5b505af11580156144d5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156144fa57600080fd5b8101908091905050935083600060028110151561451357fe5b602002015184600160028110151561452757fe5b602002015183600081518110151561453b57fe5b90602001906020020184600181518110151561455357fe5b906020019060200201828152508281525050506145728983858961161a565b945050505050949350505050565b6040805190810160405280600290602082028038833980820191505090505090565b610180604051908101604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016145e1614624565b81526020016145ee614624565b81526020016145fb614624565b81525090565b602060405190810160405280600190602082028038833980820191505090505090565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a72305820aada2f4c302f892e7f4c77e27b061ad863e12d25c425936f1a9887a1f2f5eba20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x154 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x66D1749 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x813D72A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x200FC39C EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x26E37EC5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x2D57F6E7 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x36490458 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x38F3E171 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x44FC0C93 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0x490EE1CB EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x4F2CE9A3 EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x5C859D09 EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0x6FB015CC EQ PUSH2 0x8E7 JUMPI DUP1 PUSH4 0x81B4EF31 EQ PUSH2 0x986 JUMPI DUP1 PUSH4 0x88C01ED8 EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAF6 JUMPI DUP1 PUSH4 0x9C8FDA72 EQ PUSH2 0xB4D JUMPI DUP1 PUSH4 0xA3D53298 EQ PUSH2 0xB90 JUMPI DUP1 PUSH4 0xBE26733C EQ PUSH2 0xBF9 JUMPI DUP1 PUSH4 0xC17065D0 EQ PUSH2 0xC10 JUMPI DUP1 PUSH4 0xC4E8E6A6 EQ PUSH2 0xD1E JUMPI DUP1 PUSH4 0xC8FC7CA8 EQ PUSH2 0xDE9 JUMPI DUP1 PUSH4 0xCBA51FF3 EQ PUSH2 0xE52 JUMPI DUP1 PUSH4 0xDB8C735E EQ PUSH2 0xEA9 JUMPI DUP1 PUSH4 0xEFD6B306 EQ PUSH2 0xF2D JUMPI DUP1 PUSH4 0xF8C8B0CA EQ PUSH2 0xF58 JUMPI DUP1 PUSH4 0xFF7D69A8 EQ PUSH2 0x100B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x182D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x510 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4F5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x523 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x729 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x878 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x970 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x289F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA99 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAE2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAC7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0B PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3389 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBBB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBCB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0E PUSH2 0x38E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD04 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x399F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x3E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE14 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3FC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE3F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE24 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE67 PUSH2 0x419C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF17 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x41C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF42 PUSH2 0x41F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x420D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x424B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x10EA PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP7 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1121 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1292 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP8 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x117E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x122B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1241 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x125E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1277 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x129D DUP8 DUP4 DUP8 PUSH2 0x3E3B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B3 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP8 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12EB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x2 DUP9 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1321 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1492 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP9 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x137E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x142B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1441 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x145E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1477 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP10 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14EC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1599 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15AF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x15CC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15E5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x160C DUP10 DUP4 DUP6 DUP10 PUSH2 0x399F JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1624 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x2 DUP6 MLOAD EQ ISZERO ISZERO PUSH2 0x1638 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x1647 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x1658 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x2 DUP5 MLOAD DUP2 ISZERO ISZERO PUSH2 0x1665 JUMPI INVALID JUMPDEST DIV DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD ADD DUP4 MLOAD EQ ISZERO ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1698 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x16BA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x16D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH2 0x100 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP4 PUSH2 0x100 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1709 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x1802 JUMPI DUP4 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1748 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x176A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1787 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x179E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x17E4 DUP7 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0x40 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17CA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x420D JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x1723 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1811 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1841 DUP4 PUSH2 0x183C DUP5 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1851 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x1859 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x191C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1930 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1999 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6032FC3F DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A9B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP3 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BB2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B97 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2E PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x1C36 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D91 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D76 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP5 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E94 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E79 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC753FE8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F97 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FC5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FAA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203E PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2046 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2050 DUP6 DUP6 PUSH2 0x1849 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x2063 DUP7 DUP4 DUP4 PUSH2 0x289F JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2078 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP7 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20AF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2220 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP8 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x210C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x21B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x21CF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x21EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2205 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x222C DUP9 DUP9 DUP5 DUP9 PUSH2 0x2277 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2244 PUSH2 0x4601 JUMP JUMPDEST DUP4 MLOAD SWAP2 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP5 MUL ADD DUP2 MSTORE DUP1 MLOAD DUP6 KECCAK256 DUP3 MSTORE POP DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT ISZERO ISZERO PUSH2 0x2269 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2281 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x60 DUP7 DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP7 MLOAD DUP2 ISZERO ISZERO PUSH2 0x22A2 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2629 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x22C6 JUMPI INVALID JUMPDEST DIV DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP5 MLOAD EQ ISZERO ISZERO PUSH2 0x22F0 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2329 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x233C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x25F5 JUMPI DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2375 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD SUB DUP3 PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x248A JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x23D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x23F8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2415 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP5 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x242C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x246C DUP7 DUP4 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x1 DUP7 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2458 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x41C6 JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x60 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x2394 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD SUB DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x24BC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x24DE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x24FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP5 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2512 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x2551 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x253D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x1C26 JUMP JUMPDEST DUP3 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x2 DUP4 PUSH1 0x40 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2580 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2597 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x25B8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x25D2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x25FE DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2616 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD EQ SWAP3 POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 ISZERO ISZERO PUSH2 0x26FF JUMPI INVALID JUMPDEST DUP3 DUP5 MULMOD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x278B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x279F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SUB SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 ISZERO ISZERO PUSH2 0x2893 JUMPI INVALID JUMPDEST DUP2 DUP6 ADDMOD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x293B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP5 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2972 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2986 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x299A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x29AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x29F1 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1FF535B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2ACE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x2AE2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x2B17 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B28 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2B30 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x2B38 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C93 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C78 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP7 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D96 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D7B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC753FE8 DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E7E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EAC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6032FC3F DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FA8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x301F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP4 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP6 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC753FE8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32AA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x332B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP2 POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x341E JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F DUP2 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434D6174680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3510 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x3518 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3673 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3658 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x369D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6032FC3F DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3775 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x375A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B DUP3 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3871 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3856 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x397C JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH2 0x39A9 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP8 MLOAD DUP2 ISZERO ISZERO PUSH2 0x39BA JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x39CB JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x2 DUP7 MLOAD DUP2 ISZERO ISZERO PUSH2 0x39D8 JUMPI INVALID JUMPDEST DIV DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP7 MLOAD DUP2 ISZERO ISZERO PUSH2 0x39F7 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x3A08 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x3E31 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 MUL DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x3A1B JUMPI INVALID JUMPDEST DIV DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP5 MLOAD EQ ISZERO ISZERO PUSH2 0x3A45 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A7E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3A91 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x3DFD JUMPI DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3ACA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3AFD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3B24 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP DUP3 PUSH2 0x100 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x20 ADD MLOAD SUB DUP3 PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x3C25 JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3B93 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3BBA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP DUP3 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x3C07 DUP8 DUP4 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x1 DUP7 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3BED JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD DUP7 PUSH2 0x100 ADD MLOAD PUSH2 0x420D JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x60 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x3B46 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD SUB DUP4 PUSH1 0x0 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3C62 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3C89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP DUP3 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x3CD5 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3CBB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x2B20 JUMP JUMPDEST DUP2 SWAP2 POP DUP1 SWAP1 POP DUP4 PUSH1 0xC0 ADD DUP5 PUSH1 0xE0 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 MSTORE POP POP PUSH1 0x1 PUSH1 0x4 DUP4 PUSH1 0x40 ADD MLOAD MUL ADD DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3D12 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3D29 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3D4A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3D64 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3D85 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x2 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3D9F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3DC0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x3 DUP5 PUSH1 0xA0 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3DDA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x3AAB JUMP JUMPDEST PUSH2 0x3E06 DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3E1E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD EQ SWAP3 POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E45 PUSH2 0x45A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD DUP2 ISZERO ISZERO PUSH2 0x3E54 JUMPI INVALID JUMPDEST MOD EQ ISZERO ISZERO PUSH2 0x3E65 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x3FBF JUMP JUMPDEST PUSH1 0x2 DUP5 MLOAD DUP2 ISZERO ISZERO PUSH2 0x3E72 JUMPI INVALID JUMPDEST DIV DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD ADD DUP4 MLOAD EQ ISZERO ISZERO PUSH2 0x3E96 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x3FBF JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3EA5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x3F9D JUMPI DUP4 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3EE9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3F0B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3F28 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3F3F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x3F7F DUP6 DUP3 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x1 DUP6 PUSH1 0x40 ADD MLOAD ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3F6B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x41C6 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 ADD DUP2 MSTORE POP POP PUSH2 0x3EC4 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x3FAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3FCF PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC025D89B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5D39F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x412A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x410F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4168 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x418D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D0 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x41DB DUP6 DUP6 DUP6 PUSH2 0x1C26 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E7 DUP7 DUP3 PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x41FF PUSH2 0x419C JUMP JUMPDEST SWAP1 POP DUP1 EXTCODESIZE SWAP2 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4217 PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x421F PUSH2 0x4580 JUMP JUMPDEST PUSH2 0x422B DUP8 DUP8 DUP8 DUP8 PUSH2 0x2B20 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x423E DUP9 DUP4 DUP4 PUSH2 0x289F JUMP JUMPDEST SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4255 PUSH2 0x4580 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP8 MLOAD MUL PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x428D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x4431 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP9 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x431D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x438C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x43CA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x2 MUL DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x43E0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x43FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH1 0x2 MUL ADD DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4416 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x42C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DA7F69E DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP4 POP DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x4513 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x4527 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x453B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4553 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x4572 DUP10 DUP4 DUP6 DUP10 PUSH2 0x161A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45E1 PUSH2 0x4624 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45EE PUSH2 0x4624 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45FB PUSH2 0x4624 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xaa 0xda 0x2f 0x4c ADDRESS 0x2f DUP10 0x2e PUSH32 0x4C77E27B061AD863E12D25C425936F1A9887A1F2F5EBA2002900000000000000 ",
							"sourceMap": "91:15975:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6604:501;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6604:501:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15272:791;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15272:791:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7348:888;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7348:888:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:178;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1459:178:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3234:295;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3234:295:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3234:295:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3234:295:2;;;;;;;;;;;;;;;;;1649:305;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1649:305:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1649:305:2;;;;;;;;;;;;;;;;3541:324;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3541:324:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11834:529;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11834:529:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4832:463;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4832:463:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9671:1739;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9671:1739:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:250;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2362:250:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2665:244;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2665:244:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:201;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1073:201:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:516;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3877:516:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3877:516:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3877:516:2;;;;;;;;;;;;;;;;;73:20:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:285:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4109:285:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2921:301:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2921:301:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2921:301:2;;;;;;;;;;;;;;;;288:70:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:70:0;;;;;;12861:2008:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12861:2008:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5625:734;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5625:734:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1286:161:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1286:161:2;;;;;;;;;;;;;;;;3790:98:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3790:98:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1966:282:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1966:282:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:209:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3894:209:1;;;;;;;;;;;;;;;;;;;;;;;4405:373:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4405:373:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8520:698;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8520:698:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6604:501;6719:12;6749:22;;:::i;:::-;6782:25;6861:9;6833:1;6824;:8;:10;6810:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6810:25:2;;;;6782:53;;6873:1;6861:13;;6856:175;6880:1;:8;6876:1;:12;6856:175;;;6917:6;;;;;;;;;;;:18;;;6936:1;6938;6936:4;;;;;;;;;;;;;;;;;;6917:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6917:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6917:24:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6917:24:2;;;;;;;;6910:31;;6972:4;6977:1;6972:7;;;;;;;;;;;;;6956:8;6967:1;6965;:3;6956:13;;;;;;;;;;;;;;;;;:23;;;;;7012:4;7017:1;7012:7;;;;;;;;;;;;;6994:8;7007:1;7005;7003;:3;:5;6994:15;;;;;;;;;;;;;;;;;:25;;;;;6890:3;;;;;;;6856:175;;;7058:39;7068:7;7077:8;7087:9;7058;:39::i;:::-;7051:46;;6604:501;;;;;;;;:::o;15272:791::-;15402:12;15432:22;;:::i;:::-;15465:25;15529;15603:9;15516:1;15507;:8;:10;15493:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;15493:25:2;;;;15465:53;;15580:1;15571;:8;:10;15557:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;15557:25:2;;;;15529:53;;15632:1;15628:5;;15623:167;15639:1;:8;15635:1;:12;15623:167;;;15676:6;;;;;;;;;;;:18;;;15695:1;15697;15695:4;;;;;;;;;;;;;;;;;;15676:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15676:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15676:24:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15676:24:2;;;;;;;;15669:31;;15731:4;15736:1;15731:7;;;;;;;;;;;;;15715:8;15726:1;15724;:3;15715:13;;;;;;;;;;;;;;;;;:23;;;;;15771:4;15776:1;15771:7;;;;;;;;;;;;;15753:8;15766:1;15764;15762;:3;:5;15753:15;;;;;;;;;;;;;;;;;:25;;;;;15649:3;;;;;;;15623:167;;;15819:1;15815:5;;15810:167;15826:1;:8;15822:1;:12;15810:167;;;15863:6;;;;;;;;;;;:18;;;15882:1;15884;15882:4;;;;;;;;;;;;;;;;;;15863:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15863:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15863:24:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15863:24:2;;;;;;;;15856:31;;15918:4;15923:1;15918:7;;;;;;;;;;;;;15902:8;15913:1;15911;:3;15902:13;;;;;;;;;;;;;;;;;:23;;;;;15958:4;15963:1;15958:7;;;;;;;;;;;;;15940:8;15953:1;15951;15949;:3;:5;15940:15;;;;;;;;;;;;;;;;;:25;;;;;15836:3;;;;;;;15810:167;;;16004:51;16016:7;16025:8;16035;16045:9;16004:11;:51::i;:::-;15997:58;;15272:791;;;;;;;;;;:::o;7348:888::-;7466:12;7533:18;;:::i;:::-;7578:1;7566;:8;:13;;7562:31;;;7588:5;7581:12;;;;7562:31;7624:1;7619;7608;:8;:12;;;;;;;;:17;;7604:35;;;7634:5;7627:12;;;;7604:35;7668:1;7657;:8;:12;;;;;;;;7650:1;:3;;:20;;;;;7710:1;7706;:3;;;:5;7685:9;:16;:27;;7681:45;;;7721:5;7714:12;;;;7681:45;7754:9;7764:1;7754:12;;;;;;;;;;;;;;;;;;7747:1;:4;;:19;;;;;7842:1;7844;7842:4;;;;;;;;;;;;;;;;;;7848:1;7850;7848:4;;;;;;;;;;;;;;;;;;7809:1;:10;;;7820:1;7809:13;;;;;;;;;;;;7824:1;:10;;;7835:1;7824:13;;;;;;;;;;;;7808:45;;;;;;;;;;7906:1;7900;:3;;:7;;;;;7895:236;7915:1;:3;;;7909:1;:3;;;:9;7895:236;;;7972:1;7976;:3;;;7974:1;:5;7972:8;;;;;;;;;;;;;;;;;;7982:1;7990;7986;:3;;;7984:1;:5;:7;7982:10;;;;;;;;;;;;;;;;;;7943:1;:8;;;7952:1;7943:11;;;;;;;;;;;;7956:1;:8;;;7965:1;7956:11;;;;;;;;;;;;7942:51;;;;;;;;;;8036:83;8065:7;8074:1;:4;;;8080:9;8094:1;8090;:3;;;:5;8080:16;;;;;;;;;;;;;;;;;;8098:1;:8;;;8108:1;:10;;;8036:28;:83::i;:::-;8029:1;:4;;:90;;;;;7920:1;:3;;:5;;;;;;;;;;;7895:236;;;8215:9;8225:1;8215:12;;;;;;;;;;;;;;;;;;8207:1;:4;;;:20;8196:32;;7348:888;;;;;;;;:::o;1459:178::-;1544:11;1579:50;1596:7;1605:23;1622:5;1605:16;:23::i;:::-;1579:16;:50::i;:::-;1573:56;;1459:178;;;;:::o;3234:295::-;3331:15;;:::i;:::-;3348;;:::i;:::-;3388:6;;;;;;;;;;;:15;;;3404:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3404:14:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3404:14:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3404:14:2;;;;;;;;3420:5;3388:38;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3388:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3388:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3388:38:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3388:38:2;;;;;;;;3381:45;;3454:6;;;;;;;;;;;:18;;;3473:1;3454:21;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3454:21:2;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3454:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3454:21:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3454:21:2;;;;;;;;3447:28;;3493:6;;;;;;;;;;;:15;;;3509:4;3515:5;3493:28;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3493:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3493:28:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3493:28:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3493:28:2;;;;;;;;3486:35;;3234:295;;;;;:::o;1649:305::-;1758:15;;:::i;:::-;1791:22;;:::i;:::-;1831:6;;;;;;;;;;;:15;;;1847:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1847:14:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1847:14:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1847:14:2;;;;;;;;1863:2;1831:35;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1831:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1831:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1831:35:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1831:35:2;;;;;;;;1824:42;;1884:6;;;;;;;;;;;:15;;;1900:1;1903:2;1884:22;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1884:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1884:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1884:22:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1884:22:2;;;;;;;;1877:29;;1924:6;;;;;;;;;;;:10;;;1935:4;1941;1924:22;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1924:22:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1924:22:2;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1924:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1924:22:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1924:22:2;;;;;;;;1917:29;;1649:305;;;;;;:::o;3541:324::-;3648:11;3677:22;;:::i;:::-;3710:23;;:::i;:::-;3760:34;3785:5;3792:1;3760:24;:34::i;:::-;3744:50;;;;;;;;3811:46;3836:7;3845:4;3851:5;3811:24;:46::i;:::-;3805:52;;3541:324;;;;;;;:::o;11834:529::-;11961:12;11991:22;;:::i;:::-;12024:25;12098:9;12075:1;12066;:8;:10;12052:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;12052:25:2;;;;12024:53;;12127:1;12123:5;;12118:167;12134:1;:8;12130:1;:12;12118:167;;;12171:6;;;;;;;;;;;:18;;;12190:1;12192;12190:4;;;;;;;;;;;;;;;;;;12171:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12171:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12171:24:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12171:24:2;;;;;;;;12164:31;;12226:4;12231:1;12226:7;;;;;;;;;;;;;12210:8;12221:1;12219;:3;12210:13;;;;;;;;;;;;;;;;;:23;;;;;12266:4;12271:1;12266:7;;;;;;;;;;;;;12248:8;12261:1;12259;12257;:3;:5;12248:15;;;;;;;;;;;;;;;;;:25;;;;;12144:3;;;;;;;12118:167;;;12312:43;12323:1;12326:7;12335:8;12345:9;12312:10;:43::i;:::-;12305:50;;11834:529;;;;;;;;;:::o;4832:463::-;4905:11;4934;4971:22;;:::i;:::-;4948:5;:12;4934:26;;5087:4;5081:11;5133:4;5126;5121:3;5117:14;5113:25;5110:1;5103:36;5248:1;5242:8;5235:5;5225:26;5219:4;5212:40;5060:200;5280:4;5285:1;5280:7;;;;;;;;;;;;;5274:13;;4832:463;;;;;:::o;9671:1739::-;9787:12;9854:18;;:::i;:::-;10113;9889:1;9883;:3;;:7;;;;;9927:1;9919;:3;;;9917:1;:5;9905:1;:8;:18;;;;;;;;:23;;9901:41;;;9937:5;9930:12;;;;9901:41;9983:1;:3;;;9981:1;:5;9969:1;:8;:18;;;;;;;;9963:1;:3;;:24;;;;;10031:1;10027;:3;;;10023:1;:3;;;:7;:9;10002;:16;:31;;9998:49;;;10042:5;10035:12;;;;9998:49;10154:1;10150;:3;;;10148:1;:5;:7;10134:22;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;10134:22:2;;;;10113:43;;10174:7;10167:1;10169;10167:4;;;;;;;;;;;;;;;;;:14;;;;;10213:1;10207;:3;;:7;;;;;10202:963;10222:1;:3;;;10216:1;:3;;;:9;10202:963;;;10256:9;10266:1;10256:12;;;;;;;;;;;;;;;;;;10249:1;:4;;:19;;;;;10400:1;10394;:3;;:7;;;;;10389:286;10414:1;10410;:3;;;:5;10403:1;:3;;;:13;10389:286;;;10464:1;:3;;;10458:1;:3;;;10454:1;:3;;;:7;:13;10444:1;:7;;:23;;;;;10516:1;10520;:7;;;10518:1;:9;10516:12;;;;;;;;;;;;;;;;;;10530:1;10542;10534;:7;;;10532:1;:9;:11;10530:14;;;;;;;;;;;;;;;;;;10487:1;:8;;;10496:1;10487:11;;;;;;;;;;;;10500:1;:8;;;10509:1;10500:11;;;;;;;;;;;;10486:59;;;;;;;;;;10592:67;10613:7;10622:1;:4;;;10628:9;10646:1;10638;:7;;;:9;10628:20;;;;;;;;;;;;;;;;;;10650:1;:8;;;10592:20;:67::i;:::-;10585:1;:4;;:74;;;;;10418:1;:3;;:5;;;;;;;;;;;10389:286;;;10813:1;:3;;;10808:1;10804;:3;;;:5;10799:1;:3;;;:11;:17;10789:1;:7;;:27;;;;;10861:1;10865;:7;;;10863:1;:9;10861:12;;;;;;;;;;;;;;;;;;10875:1;10887;10879;:7;;;10877:1;:9;:11;10875:14;;;;;;;;;;;;;;;;;;10832:1;:8;;;10841:1;10832:11;;;;;;;;;;;;10845:1;:8;;;10854:1;10845:11;;;;;;;;;;;;10831:59;;;;;;;;;;10917:65;10945:1;:4;;;10951:9;10969:1;10961;:7;;;:9;10951:20;;;;;;;;;;;;;;;;;;10973:1;:8;;;10917:27;:65::i;:::-;10906:1;:8;;:76;;;;11072:1;11070;11066;:3;;;:5;:7;11056:1;:7;;:17;;;;;11101:1;:8;;;11110:1;11101:11;;;;;;;;;;;;;11088:1;11090;:7;;;11088:10;;;;;;;;;;;;;;;;;:24;;;;;11142:1;:8;;;11151:1;11142:11;;;;;;;;;;;;;11127:1;11137;11129;:7;;;:9;11127:12;;;;;;;;;;;;;;;;;:26;;;;;10227:1;:3;;:5;;;;;;;;;;;10202:963;;;11285:19;11302:1;11285:16;:19::i;:::-;11278:1;:4;;:26;;;;;11389:9;11399:1;11389:12;;;;;;;;;;;;;;;;;;11381:1;:4;;;:20;11370:32;;9671:1739;;;;;;;;;:::o;2362:250::-;2452:9;2497:6;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2497:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2497:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2497:18:2;;;;;;;;;;;;;;;;2483:33;;;;;;;2493:2;2490:1;2483:33;2479:37;;2552:1;2531:6;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2531:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2531:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2531:18:2;;;;;;;;;;;;;;;;:22;2527:26;;2585:6;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2585:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2585:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2585:18:2;;;;;;;;;;;;;;;;2568:36;;;;;;;2582:1;2575:5;2568:36;2564:40;;2362:250;;;;;:::o;2665:244::-;2781:9;2883:6;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2883:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2883:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2883:18:2;;;;;;;;;;;;;;;;2833:7;2842:4;2847:1;2842:7;;;;;;;;;;;;;2851:4;2856:1;2851:7;;;;;;;;;;;;;2860:5;2866:1;2860:8;;;;;;;;;;;;;2870:5;2876:1;2870:8;;;;;;;;;;;;;2823:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:65;;;:86;;;;;;;;2808:93;;2665:244;;;;;:::o;1073:201::-;1164:9;1248:6;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1248:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1248:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1248:18:2;;;;;;;;;;;;;;;;1216:7;1225:5;1231:1;1225:8;;;;;;;;;;;;;1235:5;1241:1;1235:8;;;;;;;;;;;;;1206:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:47;;;:68;;;;;;;;1191:75;;1073:201;;;;:::o;3877:516::-;4008:15;;:::i;:::-;4025;;:::i;:::-;4058:22;;:::i;:::-;4098:6;;;;;;;;;;;:15;;;4114:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4114:14:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4114:14:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4114:14:2;;;;;;;;4130:2;4098:35;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4098:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4098:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4098:35:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4098:35:2;;;;;;;;4091:42;;4151:6;;;;;;;;;;;:15;;;4167:1;4170:2;4151:22;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4151:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4151:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4151:22:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4151:22:2;;;;;;;;4144:29;;4191:6;;;;;;;;;;;:10;;;4202:4;4208;4191:22;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4191:22:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4191:22:2;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4191:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4191:22:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4191:22:2;;;;;;;;4184:29;;4241:6;;;;;;;;;;;:18;;;4260:1;4241:21;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4241:21:2;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4241:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4241:21:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4241:21:2;;;;;;;;4234:28;;4280:6;;;;;;;;;;;:15;;;4296:4;4302:2;4280:25;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4280:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4280:25:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4280:25:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4280:25:2;;;;;;;;4273:32;;4323:6;;;;;;;;;;;:15;;;4339:1;4342:2;4323:22;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4323:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4323:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4323:22:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4323:22:2;;;;;;;;4316:29;;4363:6;;;;;;;;;;;:10;;;4374:4;4380;4363:22;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4363:22:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4363:22:2;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4363:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4363:22:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4363:22:2;;;;;;;;4356:29;;3877:516;;;;;;;;:::o;73:20:0:-;;;;;;;;;;;;;:::o;4109:285:1:-;226:5:0;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;4324:10:1;4308:6;;:27;;;;;;;;;;;;;;;;;;4345:44;4378:10;4345:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:285;:::o;2921:301:2:-;3005:12;;:::i;:::-;3035:22;;:::i;:::-;3075:6;;;;;;;;;;;:15;;;3091:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3091:14:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3091:14:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3091:14:2;;;;;;;;3107:2;3075:35;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3075:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3075:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3075:35:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3075:35:2;;;;;;;;3068:42;;3128:6;;;;;;;;;;;:18;;;3147:4;3128:24;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3128:24:2;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3128:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3128:24:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3128:24:2;;;;;;;;3121:31;;3170:6;;;;;;;;;;;:15;;;3186:4;3192:2;3170:25;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3170:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3170:25:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3170:25:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3170:25:2;;;;;;;;3163:32;;3210:4;3206:8;;2921:301;;;;:::o;288:70:0:-;226:5;;;;;;;;;;;212:19;;:10;:19;;;;211:37;;;;;246:1;237:5;;;;;;;;;;;:10;;;;211:37;206:53;;;251:8;;;206:53;342:10;329:24;;;12861:2008:2;12980:12;13047:18;;:::i;:::-;13364;13095:1;13090;13079;:8;:12;;;;;;;;:17;;13076:34;;;13105:5;13098:12;;;;13076:34;13139:1;13128;:8;:12;;;;;;;;13121:1;:3;;:20;;;;;13178:1;13170;:3;;;13168:1;:5;13156:1;:8;:18;;;;;;;;:23;;13152:41;;;13188:5;13181:12;;;;13152:41;13234:1;:3;;;13232:1;:5;13220:1;:8;:18;;;;;;;;13214:1;:3;;:24;;;;;13282:1;13278;:3;;;13274:1;:3;;;:7;:9;13253;:16;:31;;13249:49;;;13293:5;13286:12;;;;13249:49;13405:1;13401;:3;;;13399:1;:5;:7;13385:22;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13385:22:2;;;;13364:43;;13425:7;13418:1;13420;13418:4;;;;;;;;;;;;;;;;;:14;;;;;13464:1;13458;:3;;:7;;;;;13453:1143;13473:1;:3;;;13467:1;:3;;;:9;13453:1143;;;13507:9;13517:1;13507:12;;;;;;;;;;;;;;;;;;13500:1;:4;;:19;;;;;13554:35;;;;;;;;;13568:1;13572;:3;;;13570:1;:5;13568:8;;;;;;;;;;;;;;;;;;13554:35;;;;13578:1;13586;13582;:3;;;13580:1;:5;:7;13578:10;;;;;;;;;;;;;;;;;;13554:35;;;:1;:10;;:35;;;;13713:1;13707;:3;;:7;;;;;13702:288;13727:1;13723;:3;;;:5;13716:1;:3;;;:13;13702:288;;;13777:1;:3;;;13771:1;:3;;;13767:1;:3;;;:7;:13;13757:1;:7;;:23;;;;;13799:41;;;;;;;;;13811:1;13815;:7;;;13813:1;:9;13811:12;;;;;;;;;;;;;;;;;;13799:41;;;;13825:1;13837;13829;:7;;;13827:1;:9;:11;13825:14;;;;;;;;;;;;;;;;;;13799:41;;;:1;:8;;:41;;;;13887:87;13916:7;13925:1;:4;;;13931:9;13949:1;13941;:7;;;:9;13931:20;;;;;;;;;;;;;;;;;;13953:1;:8;;;13963:1;:10;;;13887:28;:87::i;:::-;13880:1;:4;;:94;;;;;13731:1;:3;;:5;;;;;;;;;;;13702:288;;;14128:1;:3;;;14123:1;14119;:3;;;:5;14114:1;:3;;;:11;:17;14104:1;:7;;:27;;;;;14146:41;;;;;;;;;14158:1;14162;:7;;;14160:1;:9;14158:12;;;;;;;;;;;;;;;;;;14146:41;;;;14172:1;14184;14176;:7;;;14174:1;:9;:11;14172:14;;;;;;;;;;;;;;;;;;14146:41;;;:1;:8;;:41;;;;14246:85;14282:1;:4;;;14288:9;14306:1;14298;:7;;;:9;14288:20;;;;;;;;;;;;;;;;;;14310:1;:8;;;14320:1;:10;;;14246:35;:85::i;:::-;14223:108;;;;;;14224:1;:8;;14234:1;:8;;14223:108;;;;;;;;14421:1;14419;14415;:3;;;:5;:7;14405:1;:7;;:17;;;;;14450:1;:8;;;14459:1;14450:11;;;;;;;;;;;;;14437:1;14439;:7;;;14437:10;;;;;;;;;;;;;;;;;:24;;;;;14491:1;:8;;;14500:1;14491:11;;;;;;;;;;;;;14476:1;14486;14478;:7;;;:9;14476:12;;;;;;;;;;;;;;;;;:26;;;;;14532:1;:8;;;14541:1;14532:11;;;;;;;;;;;;;14517:1;14527;14519;:7;;;:9;14517:12;;;;;;;;;;;;;;;;;:26;;;;;14573:1;:8;;;14582:1;14573:11;;;;;;;;;;;;;14558:1;14568;14560;:7;;;:9;14558:12;;;;;;;;;;;;;;;;;:26;;;;;13478:1;:3;;:5;;;;;;;;;;;13453:1143;;;14744:19;14761:1;14744:16;:19::i;:::-;14737:1;:4;;:26;;;;;14848:9;14858:1;14848:12;;;;;;;;;;;;;;;;;;14840:1;:4;;;:20;14829:32;;12861:2008;;;;;;;;;:::o;5625:734::-;5729:12;5796:18;;:::i;:::-;5845:1;5840;5829;:8;:12;;;;;;;;:17;;5825:35;;;5855:5;5848:12;;;;5825:35;5889:1;5878;:8;:12;;;;;;;;5871:1;:3;;:20;;;;;5931:1;5927;:3;;;:5;5906:9;:16;:27;;5902:45;;;5942:5;5935:12;;;;5902:45;5975:9;5985:1;5975:12;;;;;;;;;;;;;;;;;;5968:1;:4;;:19;;;;;6049:1;6043;:3;;:7;;;;;6038:216;6058:1;:3;;;6052:1;:3;;;:9;6038:216;;;6115:1;6119;:3;;;6117:1;:5;6115:8;;;;;;;;;;;;;;;;;;6125:1;6133;6129;:3;;;6127:1;:5;:7;6125:10;;;;;;;;;;;;;;;;;;6086:1;:8;;;6095:1;6086:11;;;;;;;;;;;;6099:1;:8;;;6108:1;6099:11;;;;;;;;;;;;6085:51;;;;;;;;;;6179:63;6200:7;6209:1;:4;;;6215:9;6229:1;6225;:3;;;:5;6215:16;;;;;;;;;;;;;;;;;;6233:1;:8;;;6179:20;:63::i;:::-;6172:1;:4;;:70;;;;;6063:1;:3;;:5;;;;;;;;;;;6038:216;;;6338:9;6348:1;6338:12;;;;;;;;;;;;;;;;;;6330:1;:4;;;:20;6319:32;;5625:734;;;;;;;:::o;1286:161::-;1361:15;;:::i;:::-;1401:6;;;;;;;;;;;:15;;;1417:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1417:14:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1417:14:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1417:14:2;;;;;;;;1433:5;1401:38;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1401:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1401:38:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1401:38:2;;;;;;;;1394:45;;1286:161;;;:::o;3790:98:1:-;3844:7;3876:6;;;;;;;;;;;3861:22;;3790:98;:::o;1966:282:2:-;2085:11;2114:22;;:::i;:::-;2154:38;2182:2;2186;2190:1;2154:27;:38::i;:::-;2147:45;;2209:31;2226:7;2235:4;2209:16;:31::i;:::-;2203:37;;1966:282;;;;;;;:::o;3894:209:1:-;3949:4;3963:14;3982:12;3997:19;:17;:19::i;:::-;3982:34;;4064:4;4052:17;4039:30;;4089:9;4082:16;;3894:209;;;:::o;4405:373:2:-;4546:11;4575:22;;:::i;:::-;4608:23;;:::i;:::-;4658:49;4694:2;4698;4702:1;4705;4658:35;:49::i;:::-;4642:65;;;;;;;;4724:46;4749:7;4758:4;4764:5;4724:24;:46::i;:::-;4718:52;;4405:373;;;;;;;;;:::o;8520:698::-;8647:12;8677:22;;:::i;:::-;8710:25;8774;8839:9;8761:1;8752;:8;:10;8738:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8738:25:2;;;;8710:53;;8816:1;8802:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8802:16:2;;;;8774:44;;8868:1;8864:5;;8859:167;8875:1;:8;8871:1;:12;8859:167;;;8912:6;;;;;;;;;;;:18;;;8931:1;8933;8931:4;;;;;;;;;;;;;;;;;;8912:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8912:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8912:24:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8912:24:2;;;;;;;;8905:31;;8967:4;8972:1;8967:7;;;;;;;;;;;;;8951:8;8962:1;8960;:3;8951:13;;;;;;;;;;;;;;;;;:23;;;;;9007:4;9012:1;9007:7;;;;;;;;;;;;;8989:8;9002:1;9000;8998;:3;:5;8989:15;;;;;;;;;;;;;;;;;:25;;;;;8885:3;;;;;;;8859:167;;;9053:6;;;;;;;;;;;:18;;;9072:1;9053:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9053:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9053:21:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9053:21:2;;;;;;;;9046:28;;9115:4;9120:1;9115:7;;;;;;;;;;;;;9124:4;9129:1;9124:7;;;;;;;;;;;;;9086:8;9095:1;9086:11;;;;;;;;;;;;;;;;;9099:8;9108:1;9099:11;;;;;;;;;;;;;;;;;9085:47;;;;;;;;;;9160:50;9171:7;9180:8;9190;9200:9;9160:10;:50::i;:::-;9153:57;;8520:698;;;;;;;;;;:::o;91:15975::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;91:15975:2;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;91:15975:2;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;91:15975:2;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3606800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CalculateKeyImageFromPrivKey(uint256)": "infinite",
								"CalculateLinkableRingSegment(uint256,uint256,uint256,uint256[2],uint256[2])": "infinite",
								"CalculateLinkableRingSegment_NoHash(uint256,uint256,uint256[2],uint256[2])": "infinite",
								"CalculateRingSegment(uint256,uint256,uint256,uint256[2])": "infinite",
								"CalculateRingSegment_NoHash(uint256,uint256,uint256[2])": "infinite",
								"CompleteRing(uint256,uint256,uint256)": "infinite",
								"ECMath_ChangeAddress(address)": "23263",
								"ECMath_GetAddress()": "912",
								"ECMath_GetCodeSize()": "1705",
								"Keccak256OfArray(uint256[])": "infinite",
								"Kill()": "31058",
								"LinkableRingHashFunction(uint256,uint256[2],uint256[2])": "infinite",
								"RingHashFunction(uint256,uint256[2])": "infinite",
								"StartLinkableRing(uint256,uint256,uint256[2])": "infinite",
								"StartLinkableRing_NoHash(uint256,uint256[2])": "infinite",
								"StartRing(uint256,uint256)": "infinite",
								"StartRing_NoHash(uint256)": "infinite",
								"VerifyLSAG(uint256,uint256[],uint256[],uint256[])": "infinite",
								"VerifyLSAG_Compressed(uint256,uint256,uint256[],uint256[])": "infinite",
								"VerifyMLSAG(uint256,uint256[],uint256[],uint256[])": "infinite",
								"VerifyMLSAG_Compressed(uint256,uint256[],uint256[],uint256[])": "infinite",
								"VerifyMSAG(uint256,uint256,uint256[],uint256[])": "infinite",
								"VerifyMSAG_Compressed(uint256,uint256,uint256[],uint256[])": "infinite",
								"VerifySAG(uint256,uint256[],uint256[])": "infinite",
								"VerifySAG_Compressed(uint256,uint256[],uint256[])": "infinite",
								"owner()": "750"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "MSTORE"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "MLOAD"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "PUSHSIZE"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP4"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "CODECOPY"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP2"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "ADD"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "MSTORE"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP2"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "ADD"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "DUP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "MLOAD"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "ADD"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "SWAP3"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "SWAP2"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 248,
									"end": 258,
									"name": "DUP1"
								},
								{
									"begin": 146,
									"end": 156,
									"name": "CALLER"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "EXP"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SLOAD"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "MUL"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "NOT"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "AND"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SWAP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "DUP4"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "AND"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "MUL"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "OR"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SWAP1"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "SSTORE"
								},
								{
									"begin": 138,
									"end": 156,
									"name": "POP"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4617,
									"end": 4627,
									"name": "DUP2"
								},
								{
									"begin": 4596,
									"end": 4616,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 4596,
									"end": 4616,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 4596,
									"end": 4616,
									"name": "MUL"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "SWAP1"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "DIV"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 4596,
									"end": 4628,
									"name": "JUMPDEST"
								},
								{
									"begin": 4549,
									"end": 4633,
									"name": "POP"
								},
								{
									"begin": 200,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "JUMP"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "JUMPDEST"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "DUP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SLOAD"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "EXP"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "DIV"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 226,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 222,
									"name": "CALLER"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "EQ"
								},
								{
									"begin": 212,
									"end": 231,
									"name": "ISZERO"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "DUP1"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "ISZERO"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "JUMPI"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "POP"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "DUP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SWAP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SLOAD"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SWAP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "EXP"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "SWAP1"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "DIV"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 242,
									"name": "AND"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "AND"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "EQ"
								},
								{
									"begin": 237,
									"end": 247,
									"name": "ISZERO"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "JUMPDEST"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "ISZERO"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "JUMPI"
								},
								{
									"begin": 251,
									"end": 259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 251,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 251,
									"end": 259,
									"name": "REVERT"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 206,
									"end": 259,
									"name": "JUMPDEST"
								},
								{
									"begin": 4324,
									"end": 4334,
									"name": "DUP1"
								},
								{
									"begin": 4308,
									"end": 4314,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4308,
									"end": 4314,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "EXP"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "DUP2"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SLOAD"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "DUP2"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "MUL"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "NOT"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "AND"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SWAP1"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "DUP4"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "AND"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "MUL"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "OR"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SWAP1"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "SSTORE"
								},
								{
									"begin": 4308,
									"end": 4335,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F"
								},
								{
									"begin": 4378,
									"end": 4388,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MLOAD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP4"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "AND"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "AND"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP3"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SUB"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP3"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "45434D6174680000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MSTORE"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "ADD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SWAP3"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "POP"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "MLOAD"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "DUP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SWAP2"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SUB"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "SWAP1"
								},
								{
									"begin": 4345,
									"end": 4389,
									"name": "LOG1"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "POP"
								},
								{
									"begin": 4109,
									"end": 4394,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "JUMPDEST"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "DUP1"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "CODECOPY"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 91,
									"end": 16066,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820aada2f4c302f892e7f4c77e27b061ad863e12d25c425936f1a9887a1f2f5eba20029",
									".code": [
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "LT"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DIV"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "AND"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "66D1749"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "813D72A"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "200FC39C"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "26E37EC5"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "2D57F6E7"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "36490458"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "38F3E171"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "44FC0C93"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "490EE1CB"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "4F2CE9A3"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "5C859D09"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "6FB015CC"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "81B4EF31"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "88C01ED8"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "9C8FDA72"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "A3D53298"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "BE26733C"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "C17065D0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "C4E8E6A6"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "C8FC7CA8"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "CBA51FF3"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "DB8C735E"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "EFD6B306"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "F8C8B0CA"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "FF7D69A8"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "REVERT"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "JUMPDEST"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SUB"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MUL"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MLOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MSTORE"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MSTORE"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MUL"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP5"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MUL"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MLOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MSTORE"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MSTORE"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MUL"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP5"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "JUMP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "JUMPDEST"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MLOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ISZERO"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ISZERO"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ISZERO"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ISZERO"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MSTORE"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "ADD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "MLOAD"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "DUP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP2"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SUB"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP1"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "RETURN"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "JUMPDEST"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SUB"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MUL"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MLOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MUL"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP5"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MUL"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MLOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MUL"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP5"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MUL"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MLOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MUL"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP5"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "JUMP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "JUMPDEST"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MLOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ISZERO"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ISZERO"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ISZERO"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ISZERO"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "MLOAD"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SUB"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "RETURN"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "JUMPDEST"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SUB"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MUL"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MLOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MUL"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP5"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MUL"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MLOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MUL"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP5"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MUL"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MLOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MUL"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP5"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "JUMP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "JUMPDEST"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MLOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP3"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ISZERO"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ISZERO"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ISZERO"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ISZERO"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "MLOAD"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP2"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SUB"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "RETURN"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "JUMPDEST"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SUB"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "ADD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "ADD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP3"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "ADD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP3"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "JUMP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "JUMPDEST"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "MLOAD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP3"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "MSTORE"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "ADD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "MLOAD"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "DUP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SUB"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "RETURN"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "JUMPDEST"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SUB"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MUL"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MSTORE"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MUL"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP5"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "JUMP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "JUMPDEST"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP4"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MUL"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP4"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MUL"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP4"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SUB"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "RETURN"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "JUMPDEST"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SUB"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MUL"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MLOAD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MSTORE"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MUL"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP5"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "JUMP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "JUMPDEST"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MLOAD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MUL"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP4"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "MLOAD"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SUB"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "RETURN"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "JUMPDEST"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SUB"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MUL"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MLOAD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MSTORE"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MUL"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP5"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "JUMP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "JUMPDEST"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MLOAD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MSTORE"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "MLOAD"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP2"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SUB"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "RETURN"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "JUMPDEST"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SUB"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MUL"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MLOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MSTORE"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MSTORE"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MUL"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP5"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MUL"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MLOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MSTORE"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MSTORE"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MUL"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP5"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "JUMP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "JUMPDEST"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MLOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP3"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ISZERO"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ISZERO"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ISZERO"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ISZERO"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MSTORE"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "ADD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "MLOAD"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "DUP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP2"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SUB"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP1"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "RETURN"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "JUMPDEST"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SUB"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MUL"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MLOAD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MSTORE"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP4"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MSTORE"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP4"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP4"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MUL"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP5"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "JUMP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "JUMPDEST"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MLOAD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP3"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MSTORE"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "ADD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "MLOAD"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "DUP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SUB"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "RETURN"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SUB"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MUL"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MUL"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP5"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MUL"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MUL"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP5"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "JUMP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ISZERO"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ISZERO"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ISZERO"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ISZERO"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SUB"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "RETURN"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "JUMP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP3"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "RETURN"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "JUMPDEST"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SUB"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MUL"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MLOAD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MSTORE"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MUL"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP5"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MUL"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MLOAD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MSTORE"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MUL"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP5"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "JUMP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "JUMPDEST"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MLOAD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MSTORE"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "ADD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "MLOAD"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "DUP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP2"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SUB"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "RETURN"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "JUMPDEST"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SUB"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MUL"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MLOAD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MSTORE"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MUL"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP5"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "JUMP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "JUMPDEST"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MLOAD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MSTORE"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "ADD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "MLOAD"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SUB"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "RETURN"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "JUMPDEST"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SUB"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MUL"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MLOAD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MSTORE"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MUL"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP5"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MUL"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MLOAD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MSTORE"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MUL"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP5"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "JUMP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "JUMPDEST"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MLOAD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP4"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MUL"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP4"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MUL"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP4"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "MLOAD"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "DUP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SUB"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "RETURN"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP3"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "RETURN"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SUB"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP2"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "ADD"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "AND"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "ADD"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP3"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP2"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "STOP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "JUMPDEST"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SUB"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP2"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP3"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "JUMP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "JUMPDEST"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "MLOAD"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP3"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "MUL"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP4"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "MLOAD"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SUB"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "RETURN"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMP"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "STOP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "JUMPDEST"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SUB"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MUL"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MLOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MUL"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP5"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MUL"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MLOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MUL"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP5"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MUL"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MLOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MUL"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP5"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "JUMP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "JUMPDEST"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MLOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP3"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ISZERO"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ISZERO"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ISZERO"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ISZERO"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MSTORE"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "ADD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "MLOAD"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "DUP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP2"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SUB"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP1"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "RETURN"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "JUMPDEST"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SUB"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MUL"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MLOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MUL"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP5"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MUL"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MLOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MUL"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP5"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "JUMP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "JUMPDEST"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MLOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ISZERO"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ISZERO"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ISZERO"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ISZERO"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "MLOAD"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP2"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SUB"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "RETURN"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "JUMPDEST"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SUB"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP2"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP3"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "JUMP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "JUMPDEST"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "MLOAD"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP3"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "MUL"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP4"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "MLOAD"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SUB"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "RETURN"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMPDEST"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "MLOAD"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP3"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "AND"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "AND"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP2"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "MSTORE"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "ADD"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "MLOAD"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "DUP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP2"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SUB"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "RETURN"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SUB"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MUL"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MLOAD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MSTORE"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MUL"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP5"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "JUMP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MLOAD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP3"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MSTORE"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "MLOAD"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "DUP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP2"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SUB"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "RETURN"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMPDEST"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "MLOAD"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP3"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP2"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "MSTORE"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "ADD"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP2"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "MLOAD"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "DUP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP2"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SUB"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "RETURN"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "JUMPDEST"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SUB"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MUL"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MSTORE"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MUL"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP5"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MUL"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MSTORE"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MUL"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP5"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "JUMP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "JUMPDEST"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MSTORE"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SUB"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "RETURN"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "JUMPDEST"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SUB"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MUL"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MUL"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP5"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MUL"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MUL"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP5"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "JUMP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "JUMPDEST"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ISZERO"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ISZERO"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ISZERO"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ISZERO"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SUB"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "RETURN"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "JUMPDEST"
										},
										{
											"begin": 6719,
											"end": 6731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6771,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 6749,
											"end": 6771,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 6749,
											"end": 6771,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6771,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 6749,
											"end": 6771,
											"name": "JUMPDEST"
										},
										{
											"begin": 6782,
											"end": 6807,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6824,
											"end": 6825,
											"name": "DUP7"
										},
										{
											"begin": 6824,
											"end": 6832,
											"name": "MLOAD"
										},
										{
											"begin": 6824,
											"end": 6834,
											"name": "MUL"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "MLOAD"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "SWAP1"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "DUP1"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "DUP3"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "MSTORE"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "DUP1"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "MUL"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "ADD"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "DUP3"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "ADD"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "MSTORE"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "DUP1"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "ISZERO"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "JUMPI"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "DUP2"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "SWAP1"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "POP"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "JUMPDEST"
										},
										{
											"begin": 6810,
											"end": 6835,
											"name": "POP"
										},
										{
											"begin": 6782,
											"end": 6835,
											"name": "SWAP2"
										},
										{
											"begin": 6782,
											"end": 6835,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6874,
											"name": "SWAP1"
										},
										{
											"begin": 6861,
											"end": 6874,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "JUMPDEST"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "DUP6"
										},
										{
											"begin": 6880,
											"end": 6888,
											"name": "MLOAD"
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "DUP2"
										},
										{
											"begin": 6876,
											"end": 6888,
											"name": "LT"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "ISZERO"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "JUMPI"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "SWAP1"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "SLOAD"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "SWAP1"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "EXP"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "SWAP1"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "DIV"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "AND"
										},
										{
											"begin": 6917,
											"end": 6935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6917,
											"end": 6935,
											"name": "AND"
										},
										{
											"begin": 6917,
											"end": 6935,
											"name": "PUSH",
											"value": "5DA7F69E"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP8"
										},
										{
											"begin": 6938,
											"end": 6939,
											"name": "DUP4"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP2"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "MLOAD"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP2"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "LT"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "ISZERO"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "ISZERO"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "JUMPI"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "INVALID"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "JUMPDEST"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "SWAP1"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "ADD"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "SWAP1"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "MUL"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "ADD"
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "MLOAD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "MLOAD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP3"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "AND"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "MUL"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP2"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "MSTORE"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "ADD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP3"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP2"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "MSTORE"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "ADD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "SWAP2"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "MLOAD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP4"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "SUB"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP2"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP8"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "GAS"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "CALL"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "MLOAD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP2"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "ADD"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "SWAP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "DUP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "SWAP2"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "SWAP1"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6917,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6910,
											"end": 6941,
											"name": "SWAP3"
										},
										{
											"begin": 6910,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "DUP3"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "LT"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "ISZERO"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "ISZERO"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "JUMPI"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "INVALID"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "JUMPDEST"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "MUL"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "ADD"
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "MLOAD"
										},
										{
											"begin": 6956,
											"end": 6964,
											"name": "DUP3"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP3"
										},
										{
											"begin": 6965,
											"end": 6966,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6965,
											"end": 6968,
											"name": "MUL"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "DUP2"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "MLOAD"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "DUP2"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "LT"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "ISZERO"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "ISZERO"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "JUMPI"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "INVALID"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "JUMPDEST"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "SWAP1"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "ADD"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "SWAP1"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "MUL"
										},
										{
											"begin": 6956,
											"end": 6969,
											"name": "ADD"
										},
										{
											"begin": 6956,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6956,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6956,
											"end": 6979,
											"name": "MSTORE"
										},
										{
											"begin": 6956,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6956,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "DUP3"
										},
										{
											"begin": 7017,
											"end": 7018,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP2"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "LT"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "ISZERO"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "ISZERO"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "JUMPI"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "INVALID"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "JUMPDEST"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "MUL"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "ADD"
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "MLOAD"
										},
										{
											"begin": 6994,
											"end": 7002,
											"name": "DUP3"
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7005,
											"end": 7006,
											"name": "DUP4"
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "MUL"
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "ADD"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "DUP2"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "MLOAD"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "DUP2"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "LT"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "ISZERO"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "ISZERO"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "JUMPI"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "INVALID"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "JUMPDEST"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "SWAP1"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "ADD"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "SWAP1"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "MUL"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "ADD"
										},
										{
											"begin": 6994,
											"end": 7019,
											"name": "DUP2"
										},
										{
											"begin": 6994,
											"end": 7019,
											"name": "DUP2"
										},
										{
											"begin": 6994,
											"end": 7019,
											"name": "MSTORE"
										},
										{
											"begin": 6994,
											"end": 7019,
											"name": "POP"
										},
										{
											"begin": 6994,
											"end": 7019,
											"name": "POP"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "DUP1"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "DUP1"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "ADD"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "SWAP2"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "POP"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "JUMP"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 6856,
											"end": 7031,
											"name": "JUMPDEST"
										},
										{
											"begin": 7058,
											"end": 7097,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 7068,
											"end": 7075,
											"name": "DUP8"
										},
										{
											"begin": 7077,
											"end": 7085,
											"name": "DUP4"
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "DUP8"
										},
										{
											"begin": 7058,
											"end": 7067,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 7058,
											"end": 7097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7058,
											"end": 7097,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 7058,
											"end": 7097,
											"name": "JUMPDEST"
										},
										{
											"begin": 7051,
											"end": 7097,
											"name": "SWAP4"
										},
										{
											"begin": 7051,
											"end": 7097,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP4"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "SWAP3"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "POP"
										},
										{
											"begin": 6604,
											"end": 7105,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "JUMPDEST"
										},
										{
											"begin": 15402,
											"end": 15414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15432,
											"end": 15454,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 15432,
											"end": 15454,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 15432,
											"end": 15454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15432,
											"end": 15454,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 15432,
											"end": 15454,
											"name": "JUMPDEST"
										},
										{
											"begin": 15465,
											"end": 15490,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15529,
											"end": 15554,
											"name": "DUP1"
										},
										{
											"begin": 15603,
											"end": 15612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15516,
											"end": 15517,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15507,
											"end": 15508,
											"name": "DUP8"
										},
										{
											"begin": 15507,
											"end": 15515,
											"name": "MLOAD"
										},
										{
											"begin": 15507,
											"end": 15517,
											"name": "MUL"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "MLOAD"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "SWAP1"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "DUP1"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "DUP3"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "MSTORE"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "DUP1"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "MUL"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "ADD"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "DUP3"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "ADD"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "MSTORE"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "DUP1"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "ISZERO"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "JUMPI"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "DUP2"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "SWAP1"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "POP"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "JUMPDEST"
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "POP"
										},
										{
											"begin": 15465,
											"end": 15518,
											"name": "SWAP3"
										},
										{
											"begin": 15465,
											"end": 15518,
											"name": "POP"
										},
										{
											"begin": 15580,
											"end": 15581,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15571,
											"end": 15572,
											"name": "DUP9"
										},
										{
											"begin": 15571,
											"end": 15579,
											"name": "MLOAD"
										},
										{
											"begin": 15571,
											"end": 15581,
											"name": "MUL"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "MLOAD"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "SWAP1"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "DUP1"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "DUP3"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "MSTORE"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "DUP1"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "MUL"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "ADD"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "DUP3"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "ADD"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "MSTORE"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "DUP1"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "ISZERO"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "JUMPI"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "DUP2"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "SWAP1"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "POP"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "JUMPDEST"
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "POP"
										},
										{
											"begin": 15529,
											"end": 15582,
											"name": "SWAP2"
										},
										{
											"begin": 15529,
											"end": 15582,
											"name": "POP"
										},
										{
											"begin": 15632,
											"end": 15633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15628,
											"end": 15633,
											"name": "SWAP1"
										},
										{
											"begin": 15628,
											"end": 15633,
											"name": "POP"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "JUMPDEST"
										},
										{
											"begin": 15639,
											"end": 15640,
											"name": "DUP7"
										},
										{
											"begin": 15639,
											"end": 15647,
											"name": "MLOAD"
										},
										{
											"begin": 15635,
											"end": 15636,
											"name": "DUP2"
										},
										{
											"begin": 15635,
											"end": 15647,
											"name": "LT"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "ISZERO"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "JUMPI"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "SWAP1"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "SLOAD"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "SWAP1"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "EXP"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "SWAP1"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "DIV"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "AND"
										},
										{
											"begin": 15676,
											"end": 15694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15676,
											"end": 15694,
											"name": "AND"
										},
										{
											"begin": 15676,
											"end": 15694,
											"name": "PUSH",
											"value": "5DA7F69E"
										},
										{
											"begin": 15695,
											"end": 15696,
											"name": "DUP9"
										},
										{
											"begin": 15697,
											"end": 15698,
											"name": "DUP4"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "DUP2"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "MLOAD"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "DUP2"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "LT"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "ISZERO"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "ISZERO"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "JUMPI"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "INVALID"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "JUMPDEST"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "SWAP1"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "ADD"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "SWAP1"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "MUL"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "ADD"
										},
										{
											"begin": 15695,
											"end": 15699,
											"name": "MLOAD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "MLOAD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP3"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "AND"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "MUL"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP2"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "MSTORE"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "ADD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP3"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP2"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "MSTORE"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "ADD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "SWAP2"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "MLOAD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP4"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "SUB"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP2"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP8"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "GAS"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "CALL"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "MLOAD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP2"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "ADD"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "SWAP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "DUP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "SWAP2"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "SWAP1"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15676,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15669,
											"end": 15700,
											"name": "SWAP4"
										},
										{
											"begin": 15669,
											"end": 15700,
											"name": "POP"
										},
										{
											"begin": 15731,
											"end": 15735,
											"name": "DUP4"
										},
										{
											"begin": 15736,
											"end": 15737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "DUP2"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "LT"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "ISZERO"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "ISZERO"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "JUMPI"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "INVALID"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "JUMPDEST"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "MUL"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "ADD"
										},
										{
											"begin": 15731,
											"end": 15738,
											"name": "MLOAD"
										},
										{
											"begin": 15715,
											"end": 15723,
											"name": "DUP4"
										},
										{
											"begin": 15726,
											"end": 15727,
											"name": "DUP3"
										},
										{
											"begin": 15724,
											"end": 15725,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15724,
											"end": 15727,
											"name": "MUL"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "DUP2"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "MLOAD"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "DUP2"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "LT"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "ISZERO"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "ISZERO"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "JUMPI"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "INVALID"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "JUMPDEST"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "SWAP1"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "ADD"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "SWAP1"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "MUL"
										},
										{
											"begin": 15715,
											"end": 15728,
											"name": "ADD"
										},
										{
											"begin": 15715,
											"end": 15738,
											"name": "DUP2"
										},
										{
											"begin": 15715,
											"end": 15738,
											"name": "DUP2"
										},
										{
											"begin": 15715,
											"end": 15738,
											"name": "MSTORE"
										},
										{
											"begin": 15715,
											"end": 15738,
											"name": "POP"
										},
										{
											"begin": 15715,
											"end": 15738,
											"name": "POP"
										},
										{
											"begin": 15771,
											"end": 15775,
											"name": "DUP4"
										},
										{
											"begin": 15776,
											"end": 15777,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "DUP2"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "LT"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "ISZERO"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "ISZERO"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "JUMPI"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "INVALID"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "JUMPDEST"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "MUL"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "ADD"
										},
										{
											"begin": 15771,
											"end": 15778,
											"name": "MLOAD"
										},
										{
											"begin": 15753,
											"end": 15761,
											"name": "DUP4"
										},
										{
											"begin": 15766,
											"end": 15767,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15764,
											"end": 15765,
											"name": "DUP4"
										},
										{
											"begin": 15762,
											"end": 15763,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15762,
											"end": 15765,
											"name": "MUL"
										},
										{
											"begin": 15762,
											"end": 15767,
											"name": "ADD"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "DUP2"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "MLOAD"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "DUP2"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "LT"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "ISZERO"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "ISZERO"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "JUMPI"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "INVALID"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "JUMPDEST"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "ADD"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "SWAP1"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "MUL"
										},
										{
											"begin": 15753,
											"end": 15768,
											"name": "ADD"
										},
										{
											"begin": 15753,
											"end": 15778,
											"name": "DUP2"
										},
										{
											"begin": 15753,
											"end": 15778,
											"name": "DUP2"
										},
										{
											"begin": 15753,
											"end": 15778,
											"name": "MSTORE"
										},
										{
											"begin": 15753,
											"end": 15778,
											"name": "POP"
										},
										{
											"begin": 15753,
											"end": 15778,
											"name": "POP"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "DUP1"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "DUP1"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "ADD"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "SWAP2"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "POP"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "POP"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "JUMP"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 15623,
											"end": 15790,
											"name": "JUMPDEST"
										},
										{
											"begin": 15819,
											"end": 15820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15815,
											"end": 15820,
											"name": "SWAP1"
										},
										{
											"begin": 15815,
											"end": 15820,
											"name": "POP"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "JUMPDEST"
										},
										{
											"begin": 15826,
											"end": 15827,
											"name": "DUP8"
										},
										{
											"begin": 15826,
											"end": 15834,
											"name": "MLOAD"
										},
										{
											"begin": 15822,
											"end": 15823,
											"name": "DUP2"
										},
										{
											"begin": 15822,
											"end": 15834,
											"name": "LT"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "ISZERO"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "JUMPI"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "SWAP1"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "SLOAD"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "SWAP1"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "EXP"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "SWAP1"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "DIV"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "AND"
										},
										{
											"begin": 15863,
											"end": 15881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15863,
											"end": 15881,
											"name": "AND"
										},
										{
											"begin": 15863,
											"end": 15881,
											"name": "PUSH",
											"value": "5DA7F69E"
										},
										{
											"begin": 15882,
											"end": 15883,
											"name": "DUP10"
										},
										{
											"begin": 15884,
											"end": 15885,
											"name": "DUP4"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "DUP2"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "MLOAD"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "DUP2"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "LT"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "ISZERO"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "ISZERO"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "JUMPI"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "INVALID"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "JUMPDEST"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "SWAP1"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "ADD"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "SWAP1"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "MUL"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "ADD"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "MLOAD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "MLOAD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP3"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "AND"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "MUL"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP2"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "MSTORE"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "ADD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP3"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP2"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "MSTORE"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "ADD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "SWAP2"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "MLOAD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP4"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "SUB"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP2"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP8"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "GAS"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "CALL"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "MLOAD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP2"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "ADD"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "SWAP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "DUP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "SWAP2"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "SWAP1"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15863,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15856,
											"end": 15887,
											"name": "SWAP4"
										},
										{
											"begin": 15856,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15918,
											"end": 15922,
											"name": "DUP4"
										},
										{
											"begin": 15923,
											"end": 15924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "DUP2"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "LT"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "ISZERO"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "ISZERO"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "JUMPI"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "INVALID"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "JUMPDEST"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "MUL"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "ADD"
										},
										{
											"begin": 15918,
											"end": 15925,
											"name": "MLOAD"
										},
										{
											"begin": 15902,
											"end": 15910,
											"name": "DUP3"
										},
										{
											"begin": 15913,
											"end": 15914,
											"name": "DUP3"
										},
										{
											"begin": 15911,
											"end": 15912,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15911,
											"end": 15914,
											"name": "MUL"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "DUP2"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "MLOAD"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "DUP2"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "LT"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "ISZERO"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "ISZERO"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "JUMPI"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "INVALID"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "JUMPDEST"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "SWAP1"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "ADD"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "SWAP1"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "MUL"
										},
										{
											"begin": 15902,
											"end": 15915,
											"name": "ADD"
										},
										{
											"begin": 15902,
											"end": 15925,
											"name": "DUP2"
										},
										{
											"begin": 15902,
											"end": 15925,
											"name": "DUP2"
										},
										{
											"begin": 15902,
											"end": 15925,
											"name": "MSTORE"
										},
										{
											"begin": 15902,
											"end": 15925,
											"name": "POP"
										},
										{
											"begin": 15902,
											"end": 15925,
											"name": "POP"
										},
										{
											"begin": 15958,
											"end": 15962,
											"name": "DUP4"
										},
										{
											"begin": 15963,
											"end": 15964,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "DUP2"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "LT"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "ISZERO"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "ISZERO"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "JUMPI"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "INVALID"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "JUMPDEST"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "MUL"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "ADD"
										},
										{
											"begin": 15958,
											"end": 15965,
											"name": "MLOAD"
										},
										{
											"begin": 15940,
											"end": 15948,
											"name": "DUP3"
										},
										{
											"begin": 15953,
											"end": 15954,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15951,
											"end": 15952,
											"name": "DUP4"
										},
										{
											"begin": 15949,
											"end": 15950,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15949,
											"end": 15952,
											"name": "MUL"
										},
										{
											"begin": 15949,
											"end": 15954,
											"name": "ADD"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "DUP2"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "MLOAD"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "DUP2"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "LT"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "ISZERO"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "ISZERO"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "JUMPI"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "INVALID"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "JUMPDEST"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "SWAP1"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "ADD"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "SWAP1"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "MUL"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "ADD"
										},
										{
											"begin": 15940,
											"end": 15965,
											"name": "DUP2"
										},
										{
											"begin": 15940,
											"end": 15965,
											"name": "DUP2"
										},
										{
											"begin": 15940,
											"end": 15965,
											"name": "MSTORE"
										},
										{
											"begin": 15940,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15940,
											"end": 15965,
											"name": "POP"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "DUP1"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "DUP1"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "ADD"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "SWAP2"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "POP"
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "POP"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "JUMP"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 15810,
											"end": 15977,
											"name": "JUMPDEST"
										},
										{
											"begin": 16004,
											"end": 16055,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 16016,
											"end": 16023,
											"name": "DUP10"
										},
										{
											"begin": 16025,
											"end": 16033,
											"name": "DUP4"
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "DUP6"
										},
										{
											"begin": 16045,
											"end": 16054,
											"name": "DUP10"
										},
										{
											"begin": 16004,
											"end": 16015,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 16004,
											"end": 16055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16004,
											"end": 16055,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16004,
											"end": 16055,
											"name": "JUMPDEST"
										},
										{
											"begin": 15997,
											"end": 16055,
											"name": "SWAP5"
										},
										{
											"begin": 15997,
											"end": 16055,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP5"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "SWAP4"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 15272,
											"end": 16063,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "JUMPDEST"
										},
										{
											"begin": 7466,
											"end": 7478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "JUMPDEST"
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "DUP6"
										},
										{
											"begin": 7566,
											"end": 7574,
											"name": "MLOAD"
										},
										{
											"begin": 7566,
											"end": 7579,
											"name": "EQ"
										},
										{
											"begin": 7566,
											"end": 7579,
											"name": "ISZERO"
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "ISZERO"
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "JUMPI"
										},
										{
											"begin": 7588,
											"end": 7593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7593,
											"name": "SWAP2"
										},
										{
											"begin": 7581,
											"end": 7593,
											"name": "POP"
										},
										{
											"begin": 7581,
											"end": 7593,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 7581,
											"end": 7593,
											"name": "JUMP"
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "JUMPDEST"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7620,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "DUP6"
										},
										{
											"begin": 7608,
											"end": 7616,
											"name": "MLOAD"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "DUP2"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "ISZERO"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "ISZERO"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "JUMPI"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "INVALID"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "JUMPDEST"
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "MOD"
										},
										{
											"begin": 7608,
											"end": 7625,
											"name": "EQ"
										},
										{
											"begin": 7608,
											"end": 7625,
											"name": "ISZERO"
										},
										{
											"begin": 7604,
											"end": 7639,
											"name": "ISZERO"
										},
										{
											"begin": 7604,
											"end": 7639,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7604,
											"end": 7639,
											"name": "JUMPI"
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "SWAP2"
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "JUMP"
										},
										{
											"begin": 7604,
											"end": 7639,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 7604,
											"end": 7639,
											"name": "JUMPDEST"
										},
										{
											"begin": 7668,
											"end": 7669,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7657,
											"end": 7658,
											"name": "DUP5"
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "MLOAD"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "DUP2"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "ISZERO"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "ISZERO"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "JUMPI"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "INVALID"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "JUMPDEST"
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "DIV"
										},
										{
											"begin": 7650,
											"end": 7651,
											"name": "DUP2"
										},
										{
											"begin": 7650,
											"end": 7653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7653,
											"name": "ADD"
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "DUP2"
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "DUP2"
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "MSTORE"
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "POP"
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "POP"
										},
										{
											"begin": 7710,
											"end": 7711,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7706,
											"end": 7707,
											"name": "DUP2"
										},
										{
											"begin": 7706,
											"end": 7709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7706,
											"end": 7709,
											"name": "ADD"
										},
										{
											"begin": 7706,
											"end": 7709,
											"name": "MLOAD"
										},
										{
											"begin": 7706,
											"end": 7711,
											"name": "ADD"
										},
										{
											"begin": 7685,
											"end": 7694,
											"name": "DUP4"
										},
										{
											"begin": 7685,
											"end": 7701,
											"name": "MLOAD"
										},
										{
											"begin": 7685,
											"end": 7712,
											"name": "EQ"
										},
										{
											"begin": 7685,
											"end": 7712,
											"name": "ISZERO"
										},
										{
											"begin": 7681,
											"end": 7726,
											"name": "ISZERO"
										},
										{
											"begin": 7681,
											"end": 7726,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 7681,
											"end": 7726,
											"name": "JUMPI"
										},
										{
											"begin": 7721,
											"end": 7726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "SWAP2"
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "POP"
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "JUMP"
										},
										{
											"begin": 7681,
											"end": 7726,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 7681,
											"end": 7726,
											"name": "JUMPDEST"
										},
										{
											"begin": 7754,
											"end": 7763,
											"name": "DUP3"
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "MLOAD"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "LT"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "ISZERO"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "ISZERO"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "JUMPI"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "INVALID"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "JUMPDEST"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "ADD"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "MUL"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "ADD"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "MLOAD"
										},
										{
											"begin": 7747,
											"end": 7748,
											"name": "DUP2"
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "ADD"
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "MSTORE"
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7842,
											"end": 7843,
											"name": "DUP5"
										},
										{
											"begin": 7844,
											"end": 7845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "DUP2"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "MLOAD"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "DUP2"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "LT"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "ISZERO"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "ISZERO"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "JUMPI"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "INVALID"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "JUMPDEST"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "SWAP1"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "ADD"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "SWAP1"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "MUL"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "ADD"
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "DUP6"
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "LT"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "ISZERO"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "ISZERO"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "INVALID"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "JUMPDEST"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "MUL"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7852,
											"name": "MLOAD"
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "DUP3"
										},
										{
											"begin": 7809,
											"end": 7819,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7809,
											"end": 7819,
											"name": "ADD"
										},
										{
											"begin": 7809,
											"end": 7819,
											"name": "MLOAD"
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "DUP2"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "LT"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "ISZERO"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "ISZERO"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "JUMPI"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "INVALID"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "JUMPDEST"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "MUL"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "ADD"
										},
										{
											"begin": 7824,
											"end": 7825,
											"name": "DUP4"
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "ADD"
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "MLOAD"
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "DUP2"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "LT"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "ISZERO"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "ISZERO"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "JUMPI"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "INVALID"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "JUMPDEST"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "MUL"
										},
										{
											"begin": 7824,
											"end": 7837,
											"name": "ADD"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "DUP3"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "DUP2"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "MSTORE"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "POP"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "DUP3"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "DUP2"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "MSTORE"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "POP"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "POP"
										},
										{
											"begin": 7808,
											"end": 7853,
											"name": "POP"
										},
										{
											"begin": 7906,
											"end": 7907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7903,
											"name": "ADD"
										},
										{
											"begin": 7900,
											"end": 7907,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7907,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7907,
											"name": "MSTORE"
										},
										{
											"begin": 7900,
											"end": 7907,
											"name": "POP"
										},
										{
											"begin": 7900,
											"end": 7907,
											"name": "POP"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "JUMPDEST"
										},
										{
											"begin": 7915,
											"end": 7916,
											"name": "DUP1"
										},
										{
											"begin": 7915,
											"end": 7918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7915,
											"end": 7918,
											"name": "ADD"
										},
										{
											"begin": 7915,
											"end": 7918,
											"name": "MLOAD"
										},
										{
											"begin": 7909,
											"end": 7910,
											"name": "DUP2"
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "ADD"
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "MLOAD"
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "LT"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "ISZERO"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "JUMPI"
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "DUP4"
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "DUP2"
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "ADD"
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "MLOAD"
										},
										{
											"begin": 7974,
											"end": 7975,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7974,
											"end": 7979,
											"name": "MUL"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "DUP2"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "MLOAD"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "DUP2"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "LT"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "ISZERO"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "ISZERO"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "JUMPI"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "INVALID"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "JUMPDEST"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "SWAP1"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "ADD"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "SWAP1"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "MUL"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "ADD"
										},
										{
											"begin": 7972,
											"end": 7980,
											"name": "MLOAD"
										},
										{
											"begin": 7982,
											"end": 7983,
											"name": "DUP5"
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "DUP4"
										},
										{
											"begin": 7986,
											"end": 7989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7986,
											"end": 7989,
											"name": "ADD"
										},
										{
											"begin": 7986,
											"end": 7989,
											"name": "MLOAD"
										},
										{
											"begin": 7984,
											"end": 7985,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7984,
											"end": 7989,
											"name": "MUL"
										},
										{
											"begin": 7984,
											"end": 7991,
											"name": "ADD"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "DUP2"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "MLOAD"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "DUP2"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "LT"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "ISZERO"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "ISZERO"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "JUMPI"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "INVALID"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "JUMPDEST"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "SWAP1"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "ADD"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "SWAP1"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "MUL"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "ADD"
										},
										{
											"begin": 7982,
											"end": 7992,
											"name": "MLOAD"
										},
										{
											"begin": 7943,
											"end": 7944,
											"name": "DUP3"
										},
										{
											"begin": 7943,
											"end": 7951,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 7943,
											"end": 7951,
											"name": "ADD"
										},
										{
											"begin": 7943,
											"end": 7951,
											"name": "MLOAD"
										},
										{
											"begin": 7952,
											"end": 7953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "DUP2"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "LT"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "ISZERO"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "ISZERO"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "JUMPI"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "INVALID"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "JUMPDEST"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "MUL"
										},
										{
											"begin": 7943,
											"end": 7954,
											"name": "ADD"
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "DUP4"
										},
										{
											"begin": 7956,
											"end": 7964,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 7956,
											"end": 7964,
											"name": "ADD"
										},
										{
											"begin": 7956,
											"end": 7964,
											"name": "MLOAD"
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "DUP2"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "LT"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "ISZERO"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "ISZERO"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "JUMPI"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "INVALID"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "JUMPDEST"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "MUL"
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "ADD"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "DUP3"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "DUP2"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "MSTORE"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "POP"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "DUP3"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "DUP2"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "MSTORE"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "POP"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "POP"
										},
										{
											"begin": 7942,
											"end": 7993,
											"name": "POP"
										},
										{
											"begin": 8036,
											"end": 8119,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 8065,
											"end": 8072,
											"name": "DUP7"
										},
										{
											"begin": 8074,
											"end": 8075,
											"name": "DUP3"
										},
										{
											"begin": 8074,
											"end": 8078,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8074,
											"end": 8078,
											"name": "ADD"
										},
										{
											"begin": 8074,
											"end": 8078,
											"name": "MLOAD"
										},
										{
											"begin": 8080,
											"end": 8089,
											"name": "DUP6"
										},
										{
											"begin": 8094,
											"end": 8095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "DUP6"
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "ADD"
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "MLOAD"
										},
										{
											"begin": 8090,
											"end": 8095,
											"name": "ADD"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "DUP2"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "MLOAD"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "DUP2"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "LT"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "ISZERO"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "ISZERO"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "JUMPI"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "INVALID"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "JUMPDEST"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "SWAP1"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "ADD"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "SWAP1"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "MUL"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "ADD"
										},
										{
											"begin": 8080,
											"end": 8096,
											"name": "MLOAD"
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "DUP5"
										},
										{
											"begin": 8098,
											"end": 8106,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8098,
											"end": 8106,
											"name": "ADD"
										},
										{
											"begin": 8098,
											"end": 8106,
											"name": "MLOAD"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "DUP6"
										},
										{
											"begin": 8108,
											"end": 8118,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8108,
											"end": 8118,
											"name": "ADD"
										},
										{
											"begin": 8108,
											"end": 8118,
											"name": "MLOAD"
										},
										{
											"begin": 8036,
											"end": 8064,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 8036,
											"end": 8119,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8036,
											"end": 8119,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 8036,
											"end": 8119,
											"name": "JUMPDEST"
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "DUP2"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 8029,
											"end": 8119,
											"name": "DUP2"
										},
										{
											"begin": 8029,
											"end": 8119,
											"name": "DUP2"
										},
										{
											"begin": 8029,
											"end": 8119,
											"name": "MSTORE"
										},
										{
											"begin": 8029,
											"end": 8119,
											"name": "POP"
										},
										{
											"begin": 8029,
											"end": 8119,
											"name": "POP"
										},
										{
											"begin": 7920,
											"end": 7921,
											"name": "DUP1"
										},
										{
											"begin": 7920,
											"end": 7923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7920,
											"end": 7923,
											"name": "ADD"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "DUP1"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "MLOAD"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "DUP1"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "SWAP2"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "SWAP1"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "ADD"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "DUP2"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "MSTORE"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "POP"
										},
										{
											"begin": 7920,
											"end": 7925,
											"name": "POP"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "JUMP"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 7895,
											"end": 8131,
											"name": "JUMPDEST"
										},
										{
											"begin": 8215,
											"end": 8224,
											"name": "DUP3"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "DUP2"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "MLOAD"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "DUP2"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "LT"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "ISZERO"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "ISZERO"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "JUMPI"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "INVALID"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "JUMPDEST"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "SWAP1"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "ADD"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "SWAP1"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "MUL"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "ADD"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "MLOAD"
										},
										{
											"begin": 8207,
											"end": 8208,
											"name": "DUP2"
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "ADD"
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "MLOAD"
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "EQ"
										},
										{
											"begin": 8196,
											"end": 8228,
											"name": "SWAP2"
										},
										{
											"begin": 8196,
											"end": 8228,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "JUMPDEST"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP5"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "SWAP4"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "POP"
										},
										{
											"begin": 7348,
											"end": 8236,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "JUMPDEST"
										},
										{
											"begin": 1544,
											"end": 1555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 1622,
											"end": 1627,
											"name": "DUP5"
										},
										{
											"begin": 1605,
											"end": 1621,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 1579,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 1573,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP3"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1637,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "JUMPDEST"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "JUMPDEST"
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "JUMPDEST"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "SWAP1"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "SLOAD"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "SWAP1"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "EXP"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "SWAP1"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "DIV"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SLOAD"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "EXP"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DIV"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "AND"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "AND"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "PUSH",
											"value": "AE5D39F6"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "MLOAD"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP2"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "AND"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "MUL"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP2"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "MSTORE"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "ADD"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "MLOAD"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP4"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SUB"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP2"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP8"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "GAS"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "CALL"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "MLOAD"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP2"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "ADD"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP2"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "POP"
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP7"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MLOAD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP4"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MUL"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP2"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MSTORE"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "ADD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP4"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MUL"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP4"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "ADD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP3"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP2"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MSTORE"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "ADD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP3"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MLOAD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP4"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SUB"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP2"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP8"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "GAS"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "CALL"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "MLOAD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP2"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "ADD"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "DUP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP2"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP1"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3381,
											"end": 3426,
											"name": "SWAP2"
										},
										{
											"begin": 3381,
											"end": 3426,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "SLOAD"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "EXP"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DIV"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "PUSH",
											"value": "6032FC3F"
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "DUP5"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "MUL"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "MUL"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP4"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "SWAP2"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP4"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "SUB"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP8"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "GAS"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "CALL"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "SWAP2"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3447,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3447,
											"end": 3475,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "SLOAD"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "EXP"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DIV"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3508,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3508,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 3509,
											"end": 3513,
											"name": "DUP3"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "DUP7"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP4"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MUL"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP4"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MUL"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP4"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP3"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "SWAP3"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP4"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "SUB"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP8"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "GAS"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "CALL"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3486,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3529,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "JUMPDEST"
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "JUMPDEST"
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "SLOAD"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "EXP"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DIV"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1846,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1846,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "SLOAD"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "EXP"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DIV"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "AND"
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "AND"
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "PUSH",
											"value": "AE5D39F6"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "MLOAD"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "MUL"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "MSTORE"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "ADD"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "MLOAD"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP4"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "SUB"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP8"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "GAS"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "CALL"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "MLOAD"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "ADD"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "SWAP2"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "DUP7"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP8"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "GAS"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "CALL"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "SLOAD"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "EXP"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DIV"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1884,
											"end": 1899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 1899,
											"name": "AND"
										},
										{
											"begin": 1884,
											"end": 1899,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP5"
										},
										{
											"begin": 1903,
											"end": 1905,
											"name": "DUP8"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MLOAD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP4"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "AND"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MUL"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP2"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MSTORE"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "ADD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP4"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MUL"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP4"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "SWAP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "ADD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP3"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP2"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MSTORE"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "ADD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "SWAP3"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MLOAD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP4"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "SUB"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP2"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP8"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "GAS"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "CALL"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "MLOAD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP2"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "ADD"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "SWAP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "DUP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "SWAP2"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "SWAP1"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1884,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1877,
											"end": 1906,
											"name": "SWAP1"
										},
										{
											"begin": 1877,
											"end": 1906,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "SLOAD"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "EXP"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DIV"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "PUSH",
											"value": "C753FE8"
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "DUP4"
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MSTORE"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP3"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SWAP3"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SUB"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP8"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "GAS"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "CALL"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1917,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1917,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP4"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "SWAP3"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1954,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "JUMPDEST"
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3699,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 3677,
											"end": 3699,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3677,
											"end": 3699,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3677,
											"end": 3699,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 3677,
											"end": 3699,
											"name": "JUMPDEST"
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "JUMPDEST"
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 3785,
											"end": 3790,
											"name": "DUP6"
										},
										{
											"begin": 3792,
											"end": 3793,
											"name": "DUP6"
										},
										{
											"begin": 3760,
											"end": 3784,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 3760,
											"end": 3794,
											"name": "JUMPDEST"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "DUP1"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "SWAP3"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "POP"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "DUP2"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "SWAP4"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "POP"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "POP"
										},
										{
											"begin": 3744,
											"end": 3794,
											"name": "POP"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "DUP7"
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "DUP4"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "DUP4"
										},
										{
											"begin": 3811,
											"end": 3835,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "JUMPDEST"
										},
										{
											"begin": 3805,
											"end": 3857,
											"name": "SWAP3"
										},
										{
											"begin": 3805,
											"end": 3857,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP4"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "SWAP3"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3541,
											"end": 3865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "JUMPDEST"
										},
										{
											"begin": 11961,
											"end": 11973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11991,
											"end": 12013,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 11991,
											"end": 12013,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 11991,
											"end": 12013,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11991,
											"end": 12013,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 11991,
											"end": 12013,
											"name": "JUMPDEST"
										},
										{
											"begin": 12024,
											"end": 12049,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12066,
											"end": 12067,
											"name": "DUP7"
										},
										{
											"begin": 12066,
											"end": 12074,
											"name": "MLOAD"
										},
										{
											"begin": 12066,
											"end": 12076,
											"name": "MUL"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "MLOAD"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "SWAP1"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP1"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP3"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "MSTORE"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP1"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "MUL"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "ADD"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP3"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "ADD"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "MSTORE"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP1"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "ISZERO"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "JUMPI"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "DUP2"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "SWAP1"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "POP"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "JUMPDEST"
										},
										{
											"begin": 12052,
											"end": 12077,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12077,
											"name": "SWAP2"
										},
										{
											"begin": 12024,
											"end": 12077,
											"name": "POP"
										},
										{
											"begin": 12127,
											"end": 12128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "POP"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "JUMPDEST"
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "DUP6"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "MLOAD"
										},
										{
											"begin": 12130,
											"end": 12131,
											"name": "DUP2"
										},
										{
											"begin": 12130,
											"end": 12142,
											"name": "LT"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "ISZERO"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "JUMPI"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "SWAP1"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "SLOAD"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "SWAP1"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "EXP"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "SWAP1"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "DIV"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "AND"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "AND"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "PUSH",
											"value": "5DA7F69E"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP8"
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "DUP4"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "DUP2"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "MLOAD"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "DUP2"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "LT"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "ISZERO"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "ISZERO"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "JUMPI"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "INVALID"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "SWAP1"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "ADD"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "SWAP1"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "MUL"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "ADD"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "MLOAD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "MLOAD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP3"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "AND"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "MUL"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP2"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "MSTORE"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "ADD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP3"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP2"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "MSTORE"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "ADD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "SWAP2"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "MLOAD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP4"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "SUB"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP2"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP8"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "GAS"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "CALL"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "MLOAD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP2"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "ADD"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "SWAP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "DUP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "SWAP2"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "SWAP1"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12171,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12164,
											"end": 12195,
											"name": "SWAP3"
										},
										{
											"begin": 12164,
											"end": 12195,
											"name": "POP"
										},
										{
											"begin": 12226,
											"end": 12230,
											"name": "DUP3"
										},
										{
											"begin": 12231,
											"end": 12232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "LT"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "ISZERO"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "ISZERO"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "JUMPI"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "INVALID"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "JUMPDEST"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "MUL"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "ADD"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "MLOAD"
										},
										{
											"begin": 12210,
											"end": 12218,
											"name": "DUP3"
										},
										{
											"begin": 12221,
											"end": 12222,
											"name": "DUP3"
										},
										{
											"begin": 12219,
											"end": 12220,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12219,
											"end": 12222,
											"name": "MUL"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "DUP2"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "MLOAD"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "DUP2"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "LT"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "ISZERO"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "ISZERO"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "JUMPI"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "INVALID"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "JUMPDEST"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "SWAP1"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "ADD"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "SWAP1"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "MUL"
										},
										{
											"begin": 12210,
											"end": 12223,
											"name": "ADD"
										},
										{
											"begin": 12210,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12210,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12210,
											"end": 12233,
											"name": "MSTORE"
										},
										{
											"begin": 12210,
											"end": 12233,
											"name": "POP"
										},
										{
											"begin": 12210,
											"end": 12233,
											"name": "POP"
										},
										{
											"begin": 12266,
											"end": 12270,
											"name": "DUP3"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "DUP2"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "LT"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "ISZERO"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "ISZERO"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "JUMPI"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "INVALID"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "JUMPDEST"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "MUL"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "ADD"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "MLOAD"
										},
										{
											"begin": 12248,
											"end": 12256,
											"name": "DUP3"
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12259,
											"end": 12260,
											"name": "DUP4"
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12257,
											"end": 12260,
											"name": "MUL"
										},
										{
											"begin": 12257,
											"end": 12262,
											"name": "ADD"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "DUP2"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "MLOAD"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "DUP2"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "LT"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "ISZERO"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "ISZERO"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "JUMPI"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "INVALID"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "JUMPDEST"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "SWAP1"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "ADD"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "SWAP1"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "MUL"
										},
										{
											"begin": 12248,
											"end": 12263,
											"name": "ADD"
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "DUP2"
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "DUP2"
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "MSTORE"
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "POP"
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "POP"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "DUP1"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "DUP1"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "ADD"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "SWAP2"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "POP"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "POP"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "JUMP"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 12118,
											"end": 12285,
											"name": "JUMPDEST"
										},
										{
											"begin": 12312,
											"end": 12355,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "DUP9"
										},
										{
											"begin": 12326,
											"end": 12333,
											"name": "DUP9"
										},
										{
											"begin": 12335,
											"end": 12343,
											"name": "DUP5"
										},
										{
											"begin": 12345,
											"end": 12354,
											"name": "DUP9"
										},
										{
											"begin": 12312,
											"end": 12322,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 12312,
											"end": 12355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12312,
											"end": 12355,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 12312,
											"end": 12355,
											"name": "JUMPDEST"
										},
										{
											"begin": 12305,
											"end": 12355,
											"name": "SWAP4"
										},
										{
											"begin": 12305,
											"end": 12355,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP5"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "SWAP4"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "POP"
										},
										{
											"begin": 11834,
											"end": 12363,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "JUMPDEST"
										},
										{
											"begin": 4905,
											"end": 4916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4945,
											"name": "DUP1"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "JUMPDEST"
										},
										{
											"begin": 4948,
											"end": 4953,
											"name": "DUP4"
										},
										{
											"begin": 4948,
											"end": 4960,
											"name": "MLOAD"
										},
										{
											"begin": 4934,
											"end": 4960,
											"name": "SWAP2"
										},
										{
											"begin": 4934,
											"end": 4960,
											"name": "POP"
										},
										{
											"begin": 5087,
											"end": 5091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5092,
											"name": "MLOAD"
										},
										{
											"begin": 5133,
											"end": 5137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "DUP1"
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "DUP5"
										},
										{
											"begin": 5117,
											"end": 5131,
											"name": "MUL"
										},
										{
											"begin": 5113,
											"end": 5138,
											"name": "ADD"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "DUP2"
										},
										{
											"begin": 5103,
											"end": 5139,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "DUP1"
										},
										{
											"begin": 5242,
											"end": 5250,
											"name": "MLOAD"
										},
										{
											"begin": 5235,
											"end": 5240,
											"name": "DUP6"
										},
										{
											"begin": 5225,
											"end": 5251,
											"name": "KECCAK256"
										},
										{
											"begin": 5219,
											"end": 5223,
											"name": "DUP3"
										},
										{
											"begin": 5212,
											"end": 5252,
											"name": "MSTORE"
										},
										{
											"begin": 5060,
											"end": 5260,
											"name": "POP"
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "DUP1"
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP2"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "LT"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "ISZERO"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "ISZERO"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "JUMPI"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "INVALID"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "JUMPDEST"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "MUL"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "ADD"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "MLOAD"
										},
										{
											"begin": 5274,
											"end": 5287,
											"name": "SWAP3"
										},
										{
											"begin": 5274,
											"end": 5287,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "SWAP1"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 4832,
											"end": 5295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "JUMPDEST"
										},
										{
											"begin": 9787,
											"end": 9799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9889,
											"end": 9890,
											"name": "DUP7"
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "DUP3"
										},
										{
											"begin": 9883,
											"end": 9886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9886,
											"name": "ADD"
										},
										{
											"begin": 9883,
											"end": 9890,
											"name": "DUP2"
										},
										{
											"begin": 9883,
											"end": 9890,
											"name": "DUP2"
										},
										{
											"begin": 9883,
											"end": 9890,
											"name": "MSTORE"
										},
										{
											"begin": 9883,
											"end": 9890,
											"name": "POP"
										},
										{
											"begin": 9883,
											"end": 9890,
											"name": "POP"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "DUP3"
										},
										{
											"begin": 9919,
											"end": 9922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9922,
											"name": "ADD"
										},
										{
											"begin": 9919,
											"end": 9922,
											"name": "MLOAD"
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9917,
											"end": 9922,
											"name": "MUL"
										},
										{
											"begin": 9905,
											"end": 9906,
											"name": "DUP7"
										},
										{
											"begin": 9905,
											"end": 9913,
											"name": "MLOAD"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "DUP2"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "ISZERO"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "ISZERO"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "JUMPI"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "INVALID"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "JUMPDEST"
										},
										{
											"begin": 9905,
											"end": 9923,
											"name": "MOD"
										},
										{
											"begin": 9905,
											"end": 9928,
											"name": "EQ"
										},
										{
											"begin": 9905,
											"end": 9928,
											"name": "ISZERO"
										},
										{
											"begin": 9901,
											"end": 9942,
											"name": "ISZERO"
										},
										{
											"begin": 9901,
											"end": 9942,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 9901,
											"end": 9942,
											"name": "JUMPI"
										},
										{
											"begin": 9937,
											"end": 9942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "SWAP3"
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "POP"
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "JUMP"
										},
										{
											"begin": 9901,
											"end": 9942,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 9901,
											"end": 9942,
											"name": "JUMPDEST"
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "DUP2"
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "MLOAD"
										},
										{
											"begin": 9981,
											"end": 9982,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9981,
											"end": 9986,
											"name": "MUL"
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "DUP6"
										},
										{
											"begin": 9969,
											"end": 9977,
											"name": "MLOAD"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "DUP2"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "ISZERO"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "ISZERO"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "JUMPI"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "INVALID"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "JUMPDEST"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "DIV"
										},
										{
											"begin": 9963,
											"end": 9964,
											"name": "DUP3"
										},
										{
											"begin": 9963,
											"end": 9966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9963,
											"end": 9966,
											"name": "ADD"
										},
										{
											"begin": 9963,
											"end": 9987,
											"name": "DUP2"
										},
										{
											"begin": 9963,
											"end": 9987,
											"name": "DUP2"
										},
										{
											"begin": 9963,
											"end": 9987,
											"name": "MSTORE"
										},
										{
											"begin": 9963,
											"end": 9987,
											"name": "POP"
										},
										{
											"begin": 9963,
											"end": 9987,
											"name": "POP"
										},
										{
											"begin": 10031,
											"end": 10032,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10027,
											"end": 10028,
											"name": "DUP3"
										},
										{
											"begin": 10027,
											"end": 10030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10027,
											"end": 10030,
											"name": "ADD"
										},
										{
											"begin": 10027,
											"end": 10030,
											"name": "MLOAD"
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "DUP4"
										},
										{
											"begin": 10023,
											"end": 10026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10026,
											"name": "ADD"
										},
										{
											"begin": 10023,
											"end": 10026,
											"name": "MLOAD"
										},
										{
											"begin": 10023,
											"end": 10030,
											"name": "MUL"
										},
										{
											"begin": 10023,
											"end": 10032,
											"name": "ADD"
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "DUP5"
										},
										{
											"begin": 10002,
											"end": 10018,
											"name": "MLOAD"
										},
										{
											"begin": 10002,
											"end": 10033,
											"name": "EQ"
										},
										{
											"begin": 10002,
											"end": 10033,
											"name": "ISZERO"
										},
										{
											"begin": 9998,
											"end": 10047,
											"name": "ISZERO"
										},
										{
											"begin": 9998,
											"end": 10047,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 9998,
											"end": 10047,
											"name": "JUMPI"
										},
										{
											"begin": 10042,
											"end": 10047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10035,
											"end": 10047,
											"name": "SWAP3"
										},
										{
											"begin": 10035,
											"end": 10047,
											"name": "POP"
										},
										{
											"begin": 10035,
											"end": 10047,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 10035,
											"end": 10047,
											"name": "JUMP"
										},
										{
											"begin": 9998,
											"end": 10047,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 9998,
											"end": 10047,
											"name": "JUMPDEST"
										},
										{
											"begin": 10154,
											"end": 10155,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10150,
											"end": 10151,
											"name": "DUP3"
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "ADD"
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "MLOAD"
										},
										{
											"begin": 10148,
											"end": 10149,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10148,
											"end": 10153,
											"name": "MUL"
										},
										{
											"begin": 10148,
											"end": 10155,
											"name": "ADD"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "MLOAD"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "SWAP1"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "DUP1"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "DUP3"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "MSTORE"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "DUP1"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "MUL"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "ADD"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "DUP3"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "ADD"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "MSTORE"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "DUP1"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "ISZERO"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "JUMPI"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "DUP2"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "SWAP1"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "POP"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "JUMPDEST"
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10156,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10156,
											"name": "POP"
										},
										{
											"begin": 10174,
											"end": 10181,
											"name": "DUP6"
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "DUP2"
										},
										{
											"begin": 10169,
											"end": 10170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "DUP2"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "MLOAD"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "DUP2"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "LT"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "ISZERO"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "ISZERO"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "JUMPI"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "INVALID"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "JUMPDEST"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "SWAP1"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "ADD"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "SWAP1"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "MUL"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "ADD"
										},
										{
											"begin": 10167,
											"end": 10181,
											"name": "DUP2"
										},
										{
											"begin": 10167,
											"end": 10181,
											"name": "DUP2"
										},
										{
											"begin": 10167,
											"end": 10181,
											"name": "MSTORE"
										},
										{
											"begin": 10167,
											"end": 10181,
											"name": "POP"
										},
										{
											"begin": 10167,
											"end": 10181,
											"name": "POP"
										},
										{
											"begin": 10213,
											"end": 10214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10207,
											"end": 10208,
											"name": "DUP3"
										},
										{
											"begin": 10207,
											"end": 10210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10207,
											"end": 10210,
											"name": "ADD"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP2"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP2"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "MSTORE"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "POP"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "POP"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "JUMPDEST"
										},
										{
											"begin": 10222,
											"end": 10223,
											"name": "DUP2"
										},
										{
											"begin": 10222,
											"end": 10225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10225,
											"name": "ADD"
										},
										{
											"begin": 10222,
											"end": 10225,
											"name": "MLOAD"
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "DUP3"
										},
										{
											"begin": 10216,
											"end": 10219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10219,
											"name": "ADD"
										},
										{
											"begin": 10216,
											"end": 10219,
											"name": "MLOAD"
										},
										{
											"begin": 10216,
											"end": 10225,
											"name": "LT"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "ISZERO"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "JUMPI"
										},
										{
											"begin": 10256,
											"end": 10265,
											"name": "DUP4"
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "DUP2"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "MLOAD"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "DUP2"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "LT"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "ISZERO"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "ISZERO"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "JUMPI"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "INVALID"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "JUMPDEST"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SWAP1"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "ADD"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SWAP1"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "MUL"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "ADD"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "MLOAD"
										},
										{
											"begin": 10249,
											"end": 10250,
											"name": "DUP3"
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "ADD"
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "DUP2"
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "DUP2"
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "MSTORE"
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "POP"
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "POP"
										},
										{
											"begin": 10400,
											"end": 10401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10395,
											"name": "DUP3"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "ADD"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "DUP2"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "DUP2"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "MSTORE"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "POP"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "POP"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "JUMPDEST"
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10410,
											"end": 10411,
											"name": "DUP3"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "ADD"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "MLOAD"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "SUB"
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "DUP3"
										},
										{
											"begin": 10403,
											"end": 10406,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10403,
											"end": 10406,
											"name": "ADD"
										},
										{
											"begin": 10403,
											"end": 10406,
											"name": "MLOAD"
										},
										{
											"begin": 10403,
											"end": 10416,
											"name": "LT"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "ISZERO"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "JUMPI"
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "DUP2"
										},
										{
											"begin": 10464,
											"end": 10467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10464,
											"end": 10467,
											"name": "ADD"
										},
										{
											"begin": 10464,
											"end": 10467,
											"name": "MLOAD"
										},
										{
											"begin": 10458,
											"end": 10459,
											"name": "DUP3"
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "ADD"
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "MLOAD"
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "DUP4"
										},
										{
											"begin": 10454,
											"end": 10457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10457,
											"name": "ADD"
										},
										{
											"begin": 10454,
											"end": 10457,
											"name": "MLOAD"
										},
										{
											"begin": 10454,
											"end": 10461,
											"name": "MUL"
										},
										{
											"begin": 10454,
											"end": 10467,
											"name": "ADD"
										},
										{
											"begin": 10444,
											"end": 10445,
											"name": "DUP3"
										},
										{
											"begin": 10444,
											"end": 10451,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10444,
											"end": 10451,
											"name": "ADD"
										},
										{
											"begin": 10444,
											"end": 10467,
											"name": "DUP2"
										},
										{
											"begin": 10444,
											"end": 10467,
											"name": "DUP2"
										},
										{
											"begin": 10444,
											"end": 10467,
											"name": "MSTORE"
										},
										{
											"begin": 10444,
											"end": 10467,
											"name": "POP"
										},
										{
											"begin": 10444,
											"end": 10467,
											"name": "POP"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "DUP5"
										},
										{
											"begin": 10520,
											"end": 10521,
											"name": "DUP3"
										},
										{
											"begin": 10520,
											"end": 10527,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10520,
											"end": 10527,
											"name": "ADD"
										},
										{
											"begin": 10520,
											"end": 10527,
											"name": "MLOAD"
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "MUL"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "DUP2"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "MLOAD"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "DUP2"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "LT"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "ISZERO"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "ISZERO"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "JUMPI"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "INVALID"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "JUMPDEST"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "SWAP1"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "ADD"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "SWAP1"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "MUL"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "ADD"
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "MLOAD"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP6"
										},
										{
											"begin": 10542,
											"end": 10543,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "DUP5"
										},
										{
											"begin": 10534,
											"end": 10541,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10534,
											"end": 10541,
											"name": "ADD"
										},
										{
											"begin": 10534,
											"end": 10541,
											"name": "MLOAD"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10532,
											"end": 10541,
											"name": "MUL"
										},
										{
											"begin": 10532,
											"end": 10543,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "MLOAD"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "LT"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "ISZERO"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "ISZERO"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "JUMPI"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "INVALID"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "JUMPDEST"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "MUL"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "MLOAD"
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "DUP4"
										},
										{
											"begin": 10487,
											"end": 10495,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10487,
											"end": 10495,
											"name": "ADD"
										},
										{
											"begin": 10487,
											"end": 10495,
											"name": "MLOAD"
										},
										{
											"begin": 10496,
											"end": 10497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "DUP2"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "LT"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "ISZERO"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "ISZERO"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "JUMPI"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "INVALID"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "JUMPDEST"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "MUL"
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "ADD"
										},
										{
											"begin": 10500,
											"end": 10501,
											"name": "DUP5"
										},
										{
											"begin": 10500,
											"end": 10508,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10500,
											"end": 10508,
											"name": "ADD"
										},
										{
											"begin": 10500,
											"end": 10508,
											"name": "MLOAD"
										},
										{
											"begin": 10509,
											"end": 10510,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "DUP2"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "LT"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "ISZERO"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "ISZERO"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "JUMPI"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "INVALID"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "JUMPDEST"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "MUL"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "ADD"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "DUP3"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "DUP2"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "MSTORE"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "POP"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "DUP3"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "DUP2"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "MSTORE"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "POP"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "POP"
										},
										{
											"begin": 10486,
											"end": 10545,
											"name": "POP"
										},
										{
											"begin": 10592,
											"end": 10659,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 10613,
											"end": 10620,
											"name": "DUP7"
										},
										{
											"begin": 10622,
											"end": 10623,
											"name": "DUP4"
										},
										{
											"begin": 10622,
											"end": 10626,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10622,
											"end": 10626,
											"name": "ADD"
										},
										{
											"begin": 10622,
											"end": 10626,
											"name": "MLOAD"
										},
										{
											"begin": 10628,
											"end": 10637,
											"name": "DUP7"
										},
										{
											"begin": 10646,
											"end": 10647,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10638,
											"end": 10639,
											"name": "DUP7"
										},
										{
											"begin": 10638,
											"end": 10645,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10638,
											"end": 10645,
											"name": "ADD"
										},
										{
											"begin": 10638,
											"end": 10645,
											"name": "MLOAD"
										},
										{
											"begin": 10638,
											"end": 10647,
											"name": "ADD"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "DUP2"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "MLOAD"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "DUP2"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "LT"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "ISZERO"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "ISZERO"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "JUMPI"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "INVALID"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "JUMPDEST"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "SWAP1"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "ADD"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "SWAP1"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "MUL"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "ADD"
										},
										{
											"begin": 10628,
											"end": 10648,
											"name": "MLOAD"
										},
										{
											"begin": 10650,
											"end": 10651,
											"name": "DUP6"
										},
										{
											"begin": 10650,
											"end": 10658,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10650,
											"end": 10658,
											"name": "ADD"
										},
										{
											"begin": 10650,
											"end": 10658,
											"name": "MLOAD"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 10592,
											"end": 10659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10592,
											"end": 10659,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 10592,
											"end": 10659,
											"name": "JUMPDEST"
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "DUP3"
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "ADD"
										},
										{
											"begin": 10585,
											"end": 10659,
											"name": "DUP2"
										},
										{
											"begin": 10585,
											"end": 10659,
											"name": "DUP2"
										},
										{
											"begin": 10585,
											"end": 10659,
											"name": "MSTORE"
										},
										{
											"begin": 10585,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10585,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10418,
											"end": 10419,
											"name": "DUP2"
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "ADD"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "DUP1"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "MLOAD"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "DUP1"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "SWAP2"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "SWAP1"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "ADD"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "DUP2"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "MSTORE"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "POP"
										},
										{
											"begin": 10418,
											"end": 10423,
											"name": "POP"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "JUMP"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 10389,
											"end": 10675,
											"name": "JUMPDEST"
										},
										{
											"begin": 10813,
											"end": 10814,
											"name": "DUP2"
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "ADD"
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "MLOAD"
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "DUP4"
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "ADD"
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "MLOAD"
										},
										{
											"begin": 10804,
											"end": 10809,
											"name": "SUB"
										},
										{
											"begin": 10799,
											"end": 10800,
											"name": "DUP4"
										},
										{
											"begin": 10799,
											"end": 10802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10802,
											"name": "ADD"
										},
										{
											"begin": 10799,
											"end": 10802,
											"name": "MLOAD"
										},
										{
											"begin": 10799,
											"end": 10810,
											"name": "MUL"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "ADD"
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "DUP3"
										},
										{
											"begin": 10789,
											"end": 10796,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10789,
											"end": 10796,
											"name": "ADD"
										},
										{
											"begin": 10789,
											"end": 10816,
											"name": "DUP2"
										},
										{
											"begin": 10789,
											"end": 10816,
											"name": "DUP2"
										},
										{
											"begin": 10789,
											"end": 10816,
											"name": "MSTORE"
										},
										{
											"begin": 10789,
											"end": 10816,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10816,
											"name": "POP"
										},
										{
											"begin": 10861,
											"end": 10862,
											"name": "DUP5"
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "DUP3"
										},
										{
											"begin": 10865,
											"end": 10872,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10865,
											"end": 10872,
											"name": "ADD"
										},
										{
											"begin": 10865,
											"end": 10872,
											"name": "MLOAD"
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10863,
											"end": 10872,
											"name": "MUL"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "DUP2"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "MLOAD"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "DUP2"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "LT"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "ISZERO"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "ISZERO"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "JUMPI"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "INVALID"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "JUMPDEST"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "SWAP1"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "ADD"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "SWAP1"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "MUL"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "ADD"
										},
										{
											"begin": 10861,
											"end": 10873,
											"name": "MLOAD"
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "DUP6"
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "DUP5"
										},
										{
											"begin": 10879,
											"end": 10886,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10879,
											"end": 10886,
											"name": "ADD"
										},
										{
											"begin": 10879,
											"end": 10886,
											"name": "MLOAD"
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10877,
											"end": 10886,
											"name": "MUL"
										},
										{
											"begin": 10877,
											"end": 10888,
											"name": "ADD"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "DUP2"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "MLOAD"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "DUP2"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "LT"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "ISZERO"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "ISZERO"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "JUMPI"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "INVALID"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "JUMPDEST"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SWAP1"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "ADD"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SWAP1"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "MUL"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "ADD"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "MLOAD"
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "DUP4"
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "ADD"
										},
										{
											"begin": 10832,
											"end": 10840,
											"name": "MLOAD"
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP2"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "LT"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "ISZERO"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "ISZERO"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "JUMPI"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "INVALID"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "JUMPDEST"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "MUL"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "ADD"
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "DUP5"
										},
										{
											"begin": 10845,
											"end": 10853,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10845,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10845,
											"end": 10853,
											"name": "MLOAD"
										},
										{
											"begin": 10854,
											"end": 10855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "DUP2"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "LT"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "ISZERO"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "ISZERO"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "JUMPI"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "INVALID"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "JUMPDEST"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "MUL"
										},
										{
											"begin": 10845,
											"end": 10856,
											"name": "ADD"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "DUP3"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "DUP2"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "MSTORE"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "POP"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "DUP3"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "DUP2"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "MSTORE"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "POP"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "POP"
										},
										{
											"begin": 10831,
											"end": 10890,
											"name": "POP"
										},
										{
											"begin": 10917,
											"end": 10982,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 10945,
											"end": 10946,
											"name": "DUP3"
										},
										{
											"begin": 10945,
											"end": 10949,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10945,
											"end": 10949,
											"name": "ADD"
										},
										{
											"begin": 10945,
											"end": 10949,
											"name": "MLOAD"
										},
										{
											"begin": 10951,
											"end": 10960,
											"name": "DUP6"
										},
										{
											"begin": 10969,
											"end": 10970,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10961,
											"end": 10962,
											"name": "DUP6"
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "ADD"
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "MLOAD"
										},
										{
											"begin": 10961,
											"end": 10970,
											"name": "ADD"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "DUP2"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "MLOAD"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "DUP2"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "LT"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "ISZERO"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "ISZERO"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "JUMPI"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "INVALID"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "JUMPDEST"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "SWAP1"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "ADD"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "SWAP1"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "MUL"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "ADD"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "MLOAD"
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "DUP5"
										},
										{
											"begin": 10973,
											"end": 10981,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10973,
											"end": 10981,
											"name": "ADD"
										},
										{
											"begin": 10973,
											"end": 10981,
											"name": "MLOAD"
										},
										{
											"begin": 10917,
											"end": 10944,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 10917,
											"end": 10982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10917,
											"end": 10982,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 10917,
											"end": 10982,
											"name": "JUMPDEST"
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "DUP3"
										},
										{
											"begin": 10906,
											"end": 10914,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 10906,
											"end": 10914,
											"name": "ADD"
										},
										{
											"begin": 10906,
											"end": 10982,
											"name": "DUP2"
										},
										{
											"begin": 10906,
											"end": 10982,
											"name": "SWAP1"
										},
										{
											"begin": 10906,
											"end": 10982,
											"name": "MSTORE"
										},
										{
											"begin": 10906,
											"end": 10982,
											"name": "POP"
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11070,
											"end": 11071,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11066,
											"end": 11067,
											"name": "DUP4"
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "ADD"
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "MLOAD"
										},
										{
											"begin": 11066,
											"end": 11071,
											"name": "MUL"
										},
										{
											"begin": 11066,
											"end": 11073,
											"name": "ADD"
										},
										{
											"begin": 11056,
											"end": 11057,
											"name": "DUP3"
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "ADD"
										},
										{
											"begin": 11056,
											"end": 11073,
											"name": "DUP2"
										},
										{
											"begin": 11056,
											"end": 11073,
											"name": "DUP2"
										},
										{
											"begin": 11056,
											"end": 11073,
											"name": "MSTORE"
										},
										{
											"begin": 11056,
											"end": 11073,
											"name": "POP"
										},
										{
											"begin": 11056,
											"end": 11073,
											"name": "POP"
										},
										{
											"begin": 11101,
											"end": 11102,
											"name": "DUP2"
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "ADD"
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "MLOAD"
										},
										{
											"begin": 11110,
											"end": 11111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "DUP2"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "LT"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "ISZERO"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "ISZERO"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "JUMPI"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "INVALID"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "JUMPDEST"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "MUL"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "ADD"
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "MLOAD"
										},
										{
											"begin": 11088,
											"end": 11089,
											"name": "DUP2"
										},
										{
											"begin": 11090,
											"end": 11091,
											"name": "DUP4"
										},
										{
											"begin": 11090,
											"end": 11097,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11090,
											"end": 11097,
											"name": "ADD"
										},
										{
											"begin": 11090,
											"end": 11097,
											"name": "MLOAD"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "DUP2"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "MLOAD"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "DUP2"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "LT"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "ISZERO"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "ISZERO"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "JUMPI"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "INVALID"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "JUMPDEST"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "SWAP1"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "ADD"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "SWAP1"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "MUL"
										},
										{
											"begin": 11088,
											"end": 11098,
											"name": "ADD"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "DUP2"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "DUP2"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "MSTORE"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "POP"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "POP"
										},
										{
											"begin": 11142,
											"end": 11143,
											"name": "DUP2"
										},
										{
											"begin": 11142,
											"end": 11150,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 11142,
											"end": 11150,
											"name": "ADD"
										},
										{
											"begin": 11142,
											"end": 11150,
											"name": "MLOAD"
										},
										{
											"begin": 11151,
											"end": 11152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "DUP2"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "LT"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "ISZERO"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "ISZERO"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "JUMPI"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "INVALID"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "JUMPDEST"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "MUL"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "ADD"
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "MLOAD"
										},
										{
											"begin": 11127,
											"end": 11128,
											"name": "DUP2"
										},
										{
											"begin": 11137,
											"end": 11138,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11129,
											"end": 11130,
											"name": "DUP5"
										},
										{
											"begin": 11129,
											"end": 11136,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11129,
											"end": 11136,
											"name": "ADD"
										},
										{
											"begin": 11129,
											"end": 11136,
											"name": "MLOAD"
										},
										{
											"begin": 11129,
											"end": 11138,
											"name": "ADD"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "DUP2"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "MLOAD"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "DUP2"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "LT"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "ISZERO"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "ISZERO"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "JUMPI"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "INVALID"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "JUMPDEST"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "SWAP1"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "ADD"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "SWAP1"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "MUL"
										},
										{
											"begin": 11127,
											"end": 11139,
											"name": "ADD"
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "DUP2"
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "DUP2"
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "MSTORE"
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "POP"
										},
										{
											"begin": 11127,
											"end": 11153,
											"name": "POP"
										},
										{
											"begin": 10227,
											"end": 10228,
											"name": "DUP2"
										},
										{
											"begin": 10227,
											"end": 10230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10227,
											"end": 10230,
											"name": "ADD"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "DUP1"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "MLOAD"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "DUP1"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "SWAP2"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "SWAP1"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "ADD"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "DUP2"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "MSTORE"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "POP"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "POP"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "JUMP"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 10202,
											"end": 11165,
											"name": "JUMPDEST"
										},
										{
											"begin": 11285,
											"end": 11304,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 11302,
											"end": 11303,
											"name": "DUP2"
										},
										{
											"begin": 11285,
											"end": 11301,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 11285,
											"end": 11304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11285,
											"end": 11304,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 11285,
											"end": 11304,
											"name": "JUMPDEST"
										},
										{
											"begin": 11278,
											"end": 11279,
											"name": "DUP3"
										},
										{
											"begin": 11278,
											"end": 11282,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11278,
											"end": 11282,
											"name": "ADD"
										},
										{
											"begin": 11278,
											"end": 11304,
											"name": "DUP2"
										},
										{
											"begin": 11278,
											"end": 11304,
											"name": "DUP2"
										},
										{
											"begin": 11278,
											"end": 11304,
											"name": "MSTORE"
										},
										{
											"begin": 11278,
											"end": 11304,
											"name": "POP"
										},
										{
											"begin": 11278,
											"end": 11304,
											"name": "POP"
										},
										{
											"begin": 11389,
											"end": 11398,
											"name": "DUP4"
										},
										{
											"begin": 11399,
											"end": 11400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "DUP2"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "MLOAD"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "DUP2"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "LT"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "ISZERO"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "ISZERO"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "JUMPI"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "INVALID"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "JUMPDEST"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "SWAP1"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "ADD"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "SWAP1"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "MUL"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "ADD"
										},
										{
											"begin": 11389,
											"end": 11401,
											"name": "MLOAD"
										},
										{
											"begin": 11381,
											"end": 11382,
											"name": "DUP3"
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "ADD"
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "MLOAD"
										},
										{
											"begin": 11381,
											"end": 11401,
											"name": "EQ"
										},
										{
											"begin": 11370,
											"end": 11402,
											"name": "SWAP3"
										},
										{
											"begin": 11370,
											"end": 11402,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP5"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "SWAP4"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 11410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "SLOAD"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "EXP"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DIV"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "AND"
										},
										{
											"begin": 2497,
											"end": 2513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2513,
											"name": "AND"
										},
										{
											"begin": 2497,
											"end": 2513,
											"name": "PUSH",
											"value": "D1FF535B"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "AND"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "MUL"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "MSTORE"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ADD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP4"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SUB"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP8"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "GAS"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "CALL"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP2"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ADD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "DUP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "MLOAD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "ADD"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP3"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP2"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "POP"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "DUP1"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "ISZERO"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "ISZERO"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "JUMPI"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "INVALID"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "JUMPDEST"
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "DUP3"
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP5"
										},
										{
											"begin": 2483,
											"end": 2516,
											"name": "MULMOD"
										},
										{
											"begin": 2479,
											"end": 2516,
											"name": "SWAP1"
										},
										{
											"begin": 2479,
											"end": 2516,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "SLOAD"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "EXP"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DIV"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "AND"
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "AND"
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "PUSH",
											"value": "D1FF535B"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "AND"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "MUL"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP4"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SUB"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP8"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "GAS"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "CALL"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SWAP3"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SWAP2"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "SUB"
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "SWAP1"
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "SLOAD"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "EXP"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "DIV"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "AND"
										},
										{
											"begin": 2585,
											"end": 2601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2601,
											"name": "AND"
										},
										{
											"begin": 2585,
											"end": 2601,
											"name": "PUSH",
											"value": "D1FF535B"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "AND"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MUL"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MSTORE"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP4"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SUB"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP8"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "GAS"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "CALL"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP3"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP2"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "POP"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "DUP1"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "ISZERO"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "ISZERO"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "JUMPI"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "INVALID"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "JUMPDEST"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP2"
										},
										{
											"begin": 2575,
											"end": 2580,
											"name": "DUP6"
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "ADDMOD"
										},
										{
											"begin": 2564,
											"end": 2604,
											"name": "SWAP1"
										},
										{
											"begin": 2564,
											"end": 2604,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP4"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2362,
											"end": 2612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "SLOAD"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "EXP"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DIV"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "AND"
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "AND"
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "PUSH",
											"value": "D1FF535B"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "MLOAD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP2"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "AND"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "MUL"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP2"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "MSTORE"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "MLOAD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP4"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SUB"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP2"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP8"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "GAS"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "CALL"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "MLOAD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP2"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "DUP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "MLOAD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP3"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP2"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2833,
											"end": 2840,
											"name": "DUP5"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP5"
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "DUP2"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "LT"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "ISZERO"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "ISZERO"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "JUMPI"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "INVALID"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "JUMPDEST"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "MUL"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "ADD"
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "MLOAD"
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "DUP6"
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "LT"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "ISZERO"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "ISZERO"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "JUMPI"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "INVALID"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "MUL"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "MLOAD"
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "DUP6"
										},
										{
											"begin": 2866,
											"end": 2867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "DUP2"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "LT"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "ISZERO"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "ISZERO"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "JUMPI"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "INVALID"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "MUL"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 2868,
											"name": "MLOAD"
										},
										{
											"begin": 2870,
											"end": 2875,
											"name": "DUP7"
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "DUP2"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "LT"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "ISZERO"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "ISZERO"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "JUMPI"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "INVALID"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "JUMPDEST"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "MUL"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "ADD"
										},
										{
											"begin": 2870,
											"end": 2878,
											"name": "MLOAD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MLOAD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP1"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP7"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP2"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MSTORE"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "ADD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP6"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP2"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MSTORE"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "ADD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP5"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP2"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MSTORE"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "ADD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP4"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP2"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MSTORE"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "ADD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP3"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP2"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MSTORE"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "ADD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "SWAP6"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "MLOAD"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "DUP1"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "SWAP2"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "SUB"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "SWAP1"
										},
										{
											"begin": 2823,
											"end": 2879,
											"name": "KECCAK256"
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "SWAP1"
										},
										{
											"begin": 2815,
											"end": 2880,
											"name": "DIV"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "DUP2"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "ISZERO"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "ISZERO"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "JUMPI"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "INVALID"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "JUMPDEST"
										},
										{
											"begin": 2815,
											"end": 2901,
											"name": "MOD"
										},
										{
											"begin": 2808,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2808,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP4"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "SWAP3"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "POP"
										},
										{
											"begin": 2665,
											"end": 2909,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SLOAD"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "EXP"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DIV"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "PUSH",
											"value": "D1FF535B"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "MUL"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP4"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SUB"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP8"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "GAS"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "CALL"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SWAP3"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SWAP2"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "DUP4"
										},
										{
											"begin": 1225,
											"end": 1230,
											"name": "DUP4"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "LT"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "JUMPI"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "INVALID"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "JUMPDEST"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "ADD"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "MLOAD"
										},
										{
											"begin": 1235,
											"end": 1240,
											"name": "DUP5"
										},
										{
											"begin": 1241,
											"end": 1242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "LT"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "JUMPI"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "INVALID"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "MLOAD"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP5"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP4"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP3"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "SWAP4"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "MLOAD"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "SWAP2"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "SUB"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "SWAP1"
										},
										{
											"begin": 1206,
											"end": 1244,
											"name": "KECCAK256"
										},
										{
											"begin": 1198,
											"end": 1245,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1245,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "JUMPI"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "INVALID"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1266,
											"name": "MOD"
										},
										{
											"begin": 1191,
											"end": 1266,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP3"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "SWAP2"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1274,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "JUMPDEST"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "JUMPDEST"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "JUMPDEST"
										},
										{
											"begin": 4058,
											"end": 4080,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 4058,
											"end": 4080,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4058,
											"end": 4080,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4058,
											"end": 4080,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 4058,
											"end": 4080,
											"name": "JUMPDEST"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "SWAP1"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "SLOAD"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "SWAP1"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "EXP"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "SWAP1"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "DIV"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "AND"
										},
										{
											"begin": 4098,
											"end": 4113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4098,
											"end": 4113,
											"name": "AND"
										},
										{
											"begin": 4098,
											"end": 4113,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "SWAP1"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "SLOAD"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "SWAP1"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "EXP"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "SWAP1"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DIV"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "AND"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "AND"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH",
											"value": "AE5D39F6"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "MLOAD"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "AND"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "MUL"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "ADD"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "MLOAD"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP4"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "SUB"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP8"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "GAS"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "CALL"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "MLOAD"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "ADD"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "SWAP1"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "SWAP2"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "SWAP1"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4114,
											"end": 4128,
											"name": "POP"
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "DUP9"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MLOAD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP4"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "AND"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MUL"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP2"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MSTORE"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "ADD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP4"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MUL"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP4"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "SWAP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "ADD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP3"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP2"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MSTORE"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "ADD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "SWAP3"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MLOAD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP4"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "SUB"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP2"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP8"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "GAS"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "CALL"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "MLOAD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP2"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "ADD"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "SWAP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "DUP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "SWAP2"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "SWAP1"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4098,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4091,
											"end": 4133,
											"name": "SWAP3"
										},
										{
											"begin": 4091,
											"end": 4133,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "SLOAD"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "EXP"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "DIV"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "AND"
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "AND"
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 4167,
											"end": 4168,
											"name": "DUP7"
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "DUP10"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MLOAD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP4"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "AND"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MUL"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP2"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MSTORE"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ADD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP4"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MUL"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP4"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ADD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP3"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP2"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MSTORE"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ADD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "SWAP3"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MLOAD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP4"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "SUB"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP2"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP8"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "GAS"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "CALL"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "MLOAD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP2"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ADD"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "SWAP2"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4144,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4144,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "SLOAD"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "EXP"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DIV"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "AND"
										},
										{
											"begin": 4191,
											"end": 4201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4191,
											"end": 4201,
											"name": "AND"
										},
										{
											"begin": 4191,
											"end": 4201,
											"name": "PUSH",
											"value": "C753FE8"
										},
										{
											"begin": 4202,
											"end": 4206,
											"name": "DUP5"
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "DUP4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MLOAD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "AND"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MUL"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MSTORE"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ADD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MUL"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ADD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP3"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MUL"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ADD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SWAP3"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MLOAD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SUB"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP8"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "GAS"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "CALL"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "MLOAD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ADD"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SWAP2"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4184,
											"end": 4213,
											"name": "SWAP3"
										},
										{
											"begin": 4184,
											"end": 4213,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "SWAP1"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "SLOAD"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "SWAP1"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "EXP"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "SWAP1"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DIV"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "AND"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "AND"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH",
											"value": "6032FC3F"
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "DUP7"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MLOAD"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP3"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "AND"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MUL"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP2"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MSTORE"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "ADD"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP3"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MUL"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP4"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "ADD"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP2"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MLOAD"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP4"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SUB"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP2"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP8"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "GAS"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "CALL"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MLOAD"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP2"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "ADD"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP2"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP1"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4234,
											"end": 4262,
											"name": "SWAP2"
										},
										{
											"begin": 4234,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "SLOAD"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "EXP"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "DIV"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 4296,
											"end": 4300,
											"name": "DUP4"
										},
										{
											"begin": 4302,
											"end": 4304,
											"name": "DUP9"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MLOAD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP4"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MUL"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MSTORE"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "ADD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP4"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MUL"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP4"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "366"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "366"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "ADD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP3"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MSTORE"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "ADD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP3"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MLOAD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP4"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SUB"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP8"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "GAS"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "CALL"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MLOAD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "ADD"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP2"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4273,
											"end": 4305,
											"name": "SWAP2"
										},
										{
											"begin": 4273,
											"end": 4305,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "SWAP1"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "SLOAD"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "SWAP1"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "EXP"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "SWAP1"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DIV"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "AND"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "AND"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 4339,
											"end": 4340,
											"name": "DUP6"
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "DUP10"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MLOAD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP4"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "AND"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MUL"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP2"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MSTORE"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP4"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MUL"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP4"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP3"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP2"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MSTORE"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP3"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MLOAD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP4"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SUB"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP2"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP8"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "GAS"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "CALL"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MLOAD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP2"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP2"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4316,
											"end": 4345,
											"name": "SWAP1"
										},
										{
											"begin": 4316,
											"end": 4345,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "SLOAD"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "EXP"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "DIV"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "AND"
										},
										{
											"begin": 4363,
											"end": 4373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4363,
											"end": 4373,
											"name": "AND"
										},
										{
											"begin": 4363,
											"end": 4373,
											"name": "PUSH",
											"value": "C753FE8"
										},
										{
											"begin": 4374,
											"end": 4378,
											"name": "DUP4"
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "DUP4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MLOAD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "AND"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MUL"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP2"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MSTORE"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "ADD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MUL"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "ADD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP3"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MUL"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "ADD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SWAP3"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MLOAD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP4"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SUB"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP2"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP8"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "GAS"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "CALL"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "MLOAD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP2"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "ADD"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "DUP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SWAP2"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4363,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 4356,
											"end": 4385,
											"name": "SWAP2"
										},
										{
											"begin": 4356,
											"end": 4385,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP5"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP5"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 4393,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SLOAD"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "EXP"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DIV"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 93,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SLOAD"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DIV"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 222,
											"name": "CALLER"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "EQ"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SLOAD"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "EXP"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DIV"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "EQ"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"value": "388"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "ISZERO"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "REVERT"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 4324,
											"end": 4334,
											"name": "DUP1"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "EXP"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "DUP2"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SLOAD"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "DUP2"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "MUL"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "NOT"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "AND"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "DUP4"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "AND"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "MUL"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "OR"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SSTORE"
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "7CC5320AA18FB40C93AED6F76AE28088A8AAF67A112E0CA55367CD087B21802F"
										},
										{
											"begin": 4378,
											"end": 4388,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP4"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "45434D6174680000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SWAP3"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SWAP2"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4345,
											"end": 4389,
											"name": "LOG1"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4394,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "JUMPDEST"
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "JUMPDEST"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "PUSH [tag]",
											"value": "392"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "tag",
											"value": "392"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "SLOAD"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "EXP"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "DIV"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "AND"
										},
										{
											"begin": 3075,
											"end": 3090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3090,
											"name": "AND"
										},
										{
											"begin": 3075,
											"end": 3090,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "SWAP1"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "SLOAD"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "SWAP1"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "EXP"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "SWAP1"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "DIV"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "AND"
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "AND"
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "PUSH",
											"value": "AE5D39F6"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "MLOAD"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP2"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "AND"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "MUL"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP2"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "MSTORE"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "ADD"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP1"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "MLOAD"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP1"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP4"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "SUB"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP2"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP8"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP1"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "GAS"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "CALL"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "395"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "395"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "MLOAD"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "396"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "396"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP2"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "ADD"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "SWAP1"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP1"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "SWAP2"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "SWAP1"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "DUP6"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MLOAD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP4"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MUL"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP4"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MUL"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP4"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "397"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "398"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "397"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "398"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP3"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP3"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MLOAD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP4"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SUB"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP8"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "400"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "400"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "GAS"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "CALL"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "401"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "401"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "MLOAD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "402"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP2"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3068,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3068,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "SWAP1"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "SLOAD"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "SWAP1"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "EXP"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "SWAP1"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DIV"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "AND"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "AND"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"value": "6032FC3F"
										},
										{
											"begin": 3147,
											"end": 3151,
											"name": "DUP3"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "MLOAD"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP3"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "AND"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "MUL"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP2"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "MSTORE"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "ADD"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP3"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "MUL"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP4"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "403"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "403"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "SWAP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "ADD"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "SWAP2"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "MLOAD"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP4"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "SUB"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP2"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP8"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "406"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "406"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "GAS"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "CALL"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "407"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "407"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "MLOAD"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "408"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "408"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP2"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "ADD"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "SWAP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "DUP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "SWAP2"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "SWAP1"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3128,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "SWAP1"
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "SLOAD"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "EXP"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DIV"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3185,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3185,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 3186,
											"end": 3190,
											"name": "DUP3"
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "DUP6"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MLOAD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP4"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MUL"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP4"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MUL"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP4"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "409"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "410"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "409"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "410"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP3"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "SWAP3"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MLOAD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP4"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "SUB"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP8"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "412"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "412"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "GAS"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "CALL"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "413"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "413"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "MLOAD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "414"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "414"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "SWAP2"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3170,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "SWAP1"
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "SWAP2"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 3222,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SLOAD"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "DIV"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 222,
											"name": "CALLER"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "EQ"
										},
										{
											"begin": 212,
											"end": 231,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "PUSH [tag]",
											"value": "416"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SLOAD"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "EXP"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DIV"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "EQ"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "tag",
											"value": "416"
										},
										{
											"begin": 211,
											"end": 248,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "ISZERO"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "REVERT"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "tag",
											"value": "417"
										},
										{
											"begin": 206,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 352,
											"name": "CALLER"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "JUMPDEST"
										},
										{
											"begin": 12980,
											"end": 12992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH [tag]",
											"value": "419"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "tag",
											"value": "419"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "JUMPDEST"
										},
										{
											"begin": 13364,
											"end": 13382,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13095,
											"end": 13096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13090,
											"end": 13091,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13079,
											"end": 13080,
											"name": "DUP8"
										},
										{
											"begin": 13079,
											"end": 13087,
											"name": "MLOAD"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "DUP2"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "ISZERO"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "ISZERO"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "PUSH [tag]",
											"value": "421"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "JUMPI"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "INVALID"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "tag",
											"value": "421"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "JUMPDEST"
										},
										{
											"begin": 13079,
											"end": 13091,
											"name": "MOD"
										},
										{
											"begin": 13079,
											"end": 13096,
											"name": "EQ"
										},
										{
											"begin": 13079,
											"end": 13096,
											"name": "ISZERO"
										},
										{
											"begin": 13076,
											"end": 13110,
											"name": "ISZERO"
										},
										{
											"begin": 13076,
											"end": 13110,
											"name": "PUSH [tag]",
											"value": "422"
										},
										{
											"begin": 13076,
											"end": 13110,
											"name": "JUMPI"
										},
										{
											"begin": 13105,
											"end": 13110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13098,
											"end": 13110,
											"name": "SWAP3"
										},
										{
											"begin": 13098,
											"end": 13110,
											"name": "POP"
										},
										{
											"begin": 13098,
											"end": 13110,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 13098,
											"end": 13110,
											"name": "JUMP"
										},
										{
											"begin": 13076,
											"end": 13110,
											"name": "tag",
											"value": "422"
										},
										{
											"begin": 13076,
											"end": 13110,
											"name": "JUMPDEST"
										},
										{
											"begin": 13139,
											"end": 13140,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "DUP7"
										},
										{
											"begin": 13128,
											"end": 13136,
											"name": "MLOAD"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "DUP2"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "ISZERO"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "ISZERO"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "PUSH [tag]",
											"value": "423"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "JUMPI"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "INVALID"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "tag",
											"value": "423"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "JUMPDEST"
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "DIV"
										},
										{
											"begin": 13121,
											"end": 13122,
											"name": "DUP3"
										},
										{
											"begin": 13121,
											"end": 13124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13121,
											"end": 13124,
											"name": "ADD"
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "POP"
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "POP"
										},
										{
											"begin": 13178,
											"end": 13179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "DUP3"
										},
										{
											"begin": 13170,
											"end": 13173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13170,
											"end": 13173,
											"name": "ADD"
										},
										{
											"begin": 13170,
											"end": 13173,
											"name": "MLOAD"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13168,
											"end": 13173,
											"name": "MUL"
										},
										{
											"begin": 13156,
											"end": 13157,
											"name": "DUP7"
										},
										{
											"begin": 13156,
											"end": 13164,
											"name": "MLOAD"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "DUP2"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "ISZERO"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "ISZERO"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "PUSH [tag]",
											"value": "424"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "JUMPI"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "INVALID"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "tag",
											"value": "424"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "JUMPDEST"
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "MOD"
										},
										{
											"begin": 13156,
											"end": 13179,
											"name": "EQ"
										},
										{
											"begin": 13156,
											"end": 13179,
											"name": "ISZERO"
										},
										{
											"begin": 13152,
											"end": 13193,
											"name": "ISZERO"
										},
										{
											"begin": 13152,
											"end": 13193,
											"name": "PUSH [tag]",
											"value": "425"
										},
										{
											"begin": 13152,
											"end": 13193,
											"name": "JUMPI"
										},
										{
											"begin": 13188,
											"end": 13193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "SWAP3"
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "POP"
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "JUMP"
										},
										{
											"begin": 13152,
											"end": 13193,
											"name": "tag",
											"value": "425"
										},
										{
											"begin": 13152,
											"end": 13193,
											"name": "JUMPDEST"
										},
										{
											"begin": 13234,
											"end": 13235,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13237,
											"name": "ADD"
										},
										{
											"begin": 13234,
											"end": 13237,
											"name": "MLOAD"
										},
										{
											"begin": 13232,
											"end": 13233,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13232,
											"end": 13237,
											"name": "MUL"
										},
										{
											"begin": 13220,
											"end": 13221,
											"name": "DUP6"
										},
										{
											"begin": 13220,
											"end": 13228,
											"name": "MLOAD"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "DUP2"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "ISZERO"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "ISZERO"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "PUSH [tag]",
											"value": "426"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "JUMPI"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "INVALID"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "tag",
											"value": "426"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "JUMPDEST"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "DIV"
										},
										{
											"begin": 13214,
											"end": 13215,
											"name": "DUP3"
										},
										{
											"begin": 13214,
											"end": 13217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13214,
											"end": 13217,
											"name": "ADD"
										},
										{
											"begin": 13214,
											"end": 13238,
											"name": "DUP2"
										},
										{
											"begin": 13214,
											"end": 13238,
											"name": "DUP2"
										},
										{
											"begin": 13214,
											"end": 13238,
											"name": "MSTORE"
										},
										{
											"begin": 13214,
											"end": 13238,
											"name": "POP"
										},
										{
											"begin": 13214,
											"end": 13238,
											"name": "POP"
										},
										{
											"begin": 13282,
											"end": 13283,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13278,
											"end": 13279,
											"name": "DUP3"
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "ADD"
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "MLOAD"
										},
										{
											"begin": 13274,
											"end": 13275,
											"name": "DUP4"
										},
										{
											"begin": 13274,
											"end": 13277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13274,
											"end": 13277,
											"name": "ADD"
										},
										{
											"begin": 13274,
											"end": 13277,
											"name": "MLOAD"
										},
										{
											"begin": 13274,
											"end": 13281,
											"name": "MUL"
										},
										{
											"begin": 13274,
											"end": 13283,
											"name": "ADD"
										},
										{
											"begin": 13253,
											"end": 13262,
											"name": "DUP5"
										},
										{
											"begin": 13253,
											"end": 13269,
											"name": "MLOAD"
										},
										{
											"begin": 13253,
											"end": 13284,
											"name": "EQ"
										},
										{
											"begin": 13253,
											"end": 13284,
											"name": "ISZERO"
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "ISZERO"
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "PUSH [tag]",
											"value": "427"
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "JUMPI"
										},
										{
											"begin": 13293,
											"end": 13298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13286,
											"end": 13298,
											"name": "SWAP3"
										},
										{
											"begin": 13286,
											"end": 13298,
											"name": "POP"
										},
										{
											"begin": 13286,
											"end": 13298,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 13286,
											"end": 13298,
											"name": "JUMP"
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "tag",
											"value": "427"
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "JUMPDEST"
										},
										{
											"begin": 13405,
											"end": 13406,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP3"
										},
										{
											"begin": 13401,
											"end": 13404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13404,
											"name": "ADD"
										},
										{
											"begin": 13401,
											"end": 13404,
											"name": "MLOAD"
										},
										{
											"begin": 13399,
											"end": 13400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13399,
											"end": 13404,
											"name": "MUL"
										},
										{
											"begin": 13399,
											"end": 13406,
											"name": "ADD"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "MLOAD"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "SWAP1"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "DUP1"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "DUP3"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "MSTORE"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "DUP1"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "MUL"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "ADD"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "DUP3"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "ADD"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "MSTORE"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "DUP1"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "ISZERO"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "PUSH [tag]",
											"value": "428"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "JUMPI"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "DUP2"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "SWAP1"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "POP"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "tag",
											"value": "428"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "JUMPDEST"
										},
										{
											"begin": 13385,
											"end": 13407,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13407,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13407,
											"name": "POP"
										},
										{
											"begin": 13425,
											"end": 13432,
											"name": "DUP7"
										},
										{
											"begin": 13418,
											"end": 13419,
											"name": "DUP2"
										},
										{
											"begin": 13420,
											"end": 13421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "DUP2"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "MLOAD"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "DUP2"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "LT"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "ISZERO"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "ISZERO"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "PUSH [tag]",
											"value": "429"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "JUMPI"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "INVALID"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "tag",
											"value": "429"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "JUMPDEST"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "SWAP1"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "ADD"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "SWAP1"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "MUL"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "ADD"
										},
										{
											"begin": 13418,
											"end": 13432,
											"name": "DUP2"
										},
										{
											"begin": 13418,
											"end": 13432,
											"name": "DUP2"
										},
										{
											"begin": 13418,
											"end": 13432,
											"name": "MSTORE"
										},
										{
											"begin": 13418,
											"end": 13432,
											"name": "POP"
										},
										{
											"begin": 13418,
											"end": 13432,
											"name": "POP"
										},
										{
											"begin": 13464,
											"end": 13465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13459,
											"name": "DUP3"
										},
										{
											"begin": 13458,
											"end": 13461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13458,
											"end": 13461,
											"name": "ADD"
										},
										{
											"begin": 13458,
											"end": 13465,
											"name": "DUP2"
										},
										{
											"begin": 13458,
											"end": 13465,
											"name": "DUP2"
										},
										{
											"begin": 13458,
											"end": 13465,
											"name": "MSTORE"
										},
										{
											"begin": 13458,
											"end": 13465,
											"name": "POP"
										},
										{
											"begin": 13458,
											"end": 13465,
											"name": "POP"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "tag",
											"value": "430"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "JUMPDEST"
										},
										{
											"begin": 13473,
											"end": 13474,
											"name": "DUP2"
										},
										{
											"begin": 13473,
											"end": 13476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13473,
											"end": 13476,
											"name": "ADD"
										},
										{
											"begin": 13473,
											"end": 13476,
											"name": "MLOAD"
										},
										{
											"begin": 13467,
											"end": 13468,
											"name": "DUP3"
										},
										{
											"begin": 13467,
											"end": 13470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13467,
											"end": 13470,
											"name": "ADD"
										},
										{
											"begin": 13467,
											"end": 13470,
											"name": "MLOAD"
										},
										{
											"begin": 13467,
											"end": 13476,
											"name": "LT"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "ISZERO"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "PUSH [tag]",
											"value": "431"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "JUMPI"
										},
										{
											"begin": 13507,
											"end": 13516,
											"name": "DUP4"
										},
										{
											"begin": 13517,
											"end": 13518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "DUP2"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "MLOAD"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "DUP2"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "LT"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "ISZERO"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "ISZERO"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "PUSH [tag]",
											"value": "433"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "JUMPI"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "INVALID"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "tag",
											"value": "433"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "JUMPDEST"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "SWAP1"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "ADD"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "SWAP1"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "MUL"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "ADD"
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "MLOAD"
										},
										{
											"begin": 13500,
											"end": 13501,
											"name": "DUP3"
										},
										{
											"begin": 13500,
											"end": 13504,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13500,
											"end": 13504,
											"name": "ADD"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "DUP2"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "DUP2"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "MSTORE"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "POP"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "POP"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "DUP1"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "MLOAD"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "SWAP1"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "DUP2"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "ADD"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "MSTORE"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "DUP1"
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "DUP8"
										},
										{
											"begin": 13572,
											"end": 13573,
											"name": "DUP5"
										},
										{
											"begin": 13572,
											"end": 13575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13572,
											"end": 13575,
											"name": "ADD"
										},
										{
											"begin": 13572,
											"end": 13575,
											"name": "MLOAD"
										},
										{
											"begin": 13570,
											"end": 13571,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13570,
											"end": 13575,
											"name": "MUL"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "DUP2"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "MLOAD"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "DUP2"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "LT"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "ISZERO"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "ISZERO"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "PUSH [tag]",
											"value": "434"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "JUMPI"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "INVALID"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "tag",
											"value": "434"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "JUMPDEST"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "SWAP1"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "ADD"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "SWAP1"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "MUL"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "ADD"
										},
										{
											"begin": 13568,
											"end": 13576,
											"name": "MLOAD"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "DUP2"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "MSTORE"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "ADD"
										},
										{
											"begin": 13578,
											"end": 13579,
											"name": "DUP8"
										},
										{
											"begin": 13586,
											"end": 13587,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13582,
											"end": 13583,
											"name": "DUP6"
										},
										{
											"begin": 13582,
											"end": 13585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13582,
											"end": 13585,
											"name": "ADD"
										},
										{
											"begin": 13582,
											"end": 13585,
											"name": "MLOAD"
										},
										{
											"begin": 13580,
											"end": 13581,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "MUL"
										},
										{
											"begin": 13580,
											"end": 13587,
											"name": "ADD"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "DUP2"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "MLOAD"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "DUP2"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "LT"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "ISZERO"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "ISZERO"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "JUMPI"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "INVALID"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "tag",
											"value": "435"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "JUMPDEST"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "SWAP1"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "ADD"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "SWAP1"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "MUL"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "ADD"
										},
										{
											"begin": 13578,
											"end": 13588,
											"name": "MLOAD"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "DUP2"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "MSTORE"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "POP"
										},
										{
											"begin": 13554,
											"end": 13555,
											"name": "DUP3"
										},
										{
											"begin": 13554,
											"end": 13564,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13554,
											"end": 13564,
											"name": "ADD"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "DUP2"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "SWAP1"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "MSTORE"
										},
										{
											"begin": 13554,
											"end": 13589,
											"name": "POP"
										},
										{
											"begin": 13713,
											"end": 13714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13708,
											"name": "DUP3"
										},
										{
											"begin": 13707,
											"end": 13710,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13707,
											"end": 13710,
											"name": "ADD"
										},
										{
											"begin": 13707,
											"end": 13714,
											"name": "DUP2"
										},
										{
											"begin": 13707,
											"end": 13714,
											"name": "DUP2"
										},
										{
											"begin": 13707,
											"end": 13714,
											"name": "MSTORE"
										},
										{
											"begin": 13707,
											"end": 13714,
											"name": "POP"
										},
										{
											"begin": 13707,
											"end": 13714,
											"name": "POP"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "tag",
											"value": "436"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "JUMPDEST"
										},
										{
											"begin": 13727,
											"end": 13728,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13723,
											"end": 13724,
											"name": "DUP3"
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "ADD"
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "MLOAD"
										},
										{
											"begin": 13723,
											"end": 13728,
											"name": "SUB"
										},
										{
											"begin": 13716,
											"end": 13717,
											"name": "DUP3"
										},
										{
											"begin": 13716,
											"end": 13719,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13716,
											"end": 13719,
											"name": "ADD"
										},
										{
											"begin": 13716,
											"end": 13719,
											"name": "MLOAD"
										},
										{
											"begin": 13716,
											"end": 13729,
											"name": "LT"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "ISZERO"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "PUSH [tag]",
											"value": "437"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "JUMPI"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP2"
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "ADD"
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "MLOAD"
										},
										{
											"begin": 13771,
											"end": 13772,
											"name": "DUP3"
										},
										{
											"begin": 13771,
											"end": 13774,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13771,
											"end": 13774,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13774,
											"name": "MLOAD"
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "DUP4"
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "ADD"
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "MLOAD"
										},
										{
											"begin": 13767,
											"end": 13774,
											"name": "MUL"
										},
										{
											"begin": 13767,
											"end": 13780,
											"name": "ADD"
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "DUP3"
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "ADD"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "DUP2"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "DUP2"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "MSTORE"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13757,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "DUP1"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "MLOAD"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "SWAP1"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "DUP2"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "ADD"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "MSTORE"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "DUP1"
										},
										{
											"begin": 13811,
											"end": 13812,
											"name": "DUP7"
										},
										{
											"begin": 13815,
											"end": 13816,
											"name": "DUP5"
										},
										{
											"begin": 13815,
											"end": 13822,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13815,
											"end": 13822,
											"name": "ADD"
										},
										{
											"begin": 13815,
											"end": 13822,
											"name": "MLOAD"
										},
										{
											"begin": 13813,
											"end": 13814,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13813,
											"end": 13822,
											"name": "MUL"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "DUP2"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "MLOAD"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "DUP2"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "LT"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "ISZERO"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "ISZERO"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "PUSH [tag]",
											"value": "439"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "JUMPI"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "INVALID"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "tag",
											"value": "439"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "JUMPDEST"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "SWAP1"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "ADD"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "SWAP1"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "MUL"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "ADD"
										},
										{
											"begin": 13811,
											"end": 13823,
											"name": "MLOAD"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "DUP2"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "MSTORE"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "ADD"
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP7"
										},
										{
											"begin": 13837,
											"end": 13838,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13829,
											"end": 13830,
											"name": "DUP6"
										},
										{
											"begin": 13829,
											"end": 13836,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13829,
											"end": 13836,
											"name": "ADD"
										},
										{
											"begin": 13829,
											"end": 13836,
											"name": "MLOAD"
										},
										{
											"begin": 13827,
											"end": 13828,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13827,
											"end": 13836,
											"name": "MUL"
										},
										{
											"begin": 13827,
											"end": 13838,
											"name": "ADD"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "DUP2"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "MLOAD"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "DUP2"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "LT"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "ISZERO"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "ISZERO"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "PUSH [tag]",
											"value": "440"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "JUMPI"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "INVALID"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "tag",
											"value": "440"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "JUMPDEST"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "SWAP1"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "ADD"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "SWAP1"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "MUL"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "ADD"
										},
										{
											"begin": 13825,
											"end": 13839,
											"name": "MLOAD"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "DUP2"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "MSTORE"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "POP"
										},
										{
											"begin": 13799,
											"end": 13800,
											"name": "DUP3"
										},
										{
											"begin": 13799,
											"end": 13807,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 13799,
											"end": 13807,
											"name": "ADD"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "DUP2"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "SWAP1"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "MSTORE"
										},
										{
											"begin": 13799,
											"end": 13840,
											"name": "POP"
										},
										{
											"begin": 13887,
											"end": 13974,
											"name": "PUSH [tag]",
											"value": "441"
										},
										{
											"begin": 13916,
											"end": 13923,
											"name": "DUP8"
										},
										{
											"begin": 13925,
											"end": 13926,
											"name": "DUP4"
										},
										{
											"begin": 13925,
											"end": 13929,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13925,
											"end": 13929,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13929,
											"name": "MLOAD"
										},
										{
											"begin": 13931,
											"end": 13940,
											"name": "DUP7"
										},
										{
											"begin": 13949,
											"end": 13950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13941,
											"end": 13942,
											"name": "DUP7"
										},
										{
											"begin": 13941,
											"end": 13948,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13941,
											"end": 13948,
											"name": "ADD"
										},
										{
											"begin": 13941,
											"end": 13948,
											"name": "MLOAD"
										},
										{
											"begin": 13941,
											"end": 13950,
											"name": "ADD"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "DUP2"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "MLOAD"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "DUP2"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "LT"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "ISZERO"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "ISZERO"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "PUSH [tag]",
											"value": "442"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "JUMPI"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "INVALID"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "tag",
											"value": "442"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "JUMPDEST"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "SWAP1"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "ADD"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "SWAP1"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "MUL"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "ADD"
										},
										{
											"begin": 13931,
											"end": 13951,
											"name": "MLOAD"
										},
										{
											"begin": 13953,
											"end": 13954,
											"name": "DUP6"
										},
										{
											"begin": 13953,
											"end": 13961,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 13953,
											"end": 13961,
											"name": "ADD"
										},
										{
											"begin": 13953,
											"end": 13961,
											"name": "MLOAD"
										},
										{
											"begin": 13963,
											"end": 13964,
											"name": "DUP7"
										},
										{
											"begin": 13963,
											"end": 13973,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13963,
											"end": 13973,
											"name": "ADD"
										},
										{
											"begin": 13963,
											"end": 13973,
											"name": "MLOAD"
										},
										{
											"begin": 13887,
											"end": 13915,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 13887,
											"end": 13974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13887,
											"end": 13974,
											"name": "tag",
											"value": "441"
										},
										{
											"begin": 13887,
											"end": 13974,
											"name": "JUMPDEST"
										},
										{
											"begin": 13880,
											"end": 13881,
											"name": "DUP3"
										},
										{
											"begin": 13880,
											"end": 13884,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13880,
											"end": 13884,
											"name": "ADD"
										},
										{
											"begin": 13880,
											"end": 13974,
											"name": "DUP2"
										},
										{
											"begin": 13880,
											"end": 13974,
											"name": "DUP2"
										},
										{
											"begin": 13880,
											"end": 13974,
											"name": "MSTORE"
										},
										{
											"begin": 13880,
											"end": 13974,
											"name": "POP"
										},
										{
											"begin": 13880,
											"end": 13974,
											"name": "POP"
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "DUP2"
										},
										{
											"begin": 13731,
											"end": 13734,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13731,
											"end": 13734,
											"name": "ADD"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "DUP1"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "MLOAD"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "DUP1"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "SWAP2"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "SWAP1"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "ADD"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "DUP2"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "MSTORE"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "POP"
										},
										{
											"begin": 13731,
											"end": 13736,
											"name": "POP"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "PUSH [tag]",
											"value": "436"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "JUMP"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "tag",
											"value": "437"
										},
										{
											"begin": 13702,
											"end": 13990,
											"name": "JUMPDEST"
										},
										{
											"begin": 14128,
											"end": 14129,
											"name": "DUP2"
										},
										{
											"begin": 14128,
											"end": 14131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14128,
											"end": 14131,
											"name": "ADD"
										},
										{
											"begin": 14128,
											"end": 14131,
											"name": "MLOAD"
										},
										{
											"begin": 14123,
											"end": 14124,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14119,
											"end": 14120,
											"name": "DUP4"
										},
										{
											"begin": 14119,
											"end": 14122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14119,
											"end": 14122,
											"name": "ADD"
										},
										{
											"begin": 14119,
											"end": 14122,
											"name": "MLOAD"
										},
										{
											"begin": 14119,
											"end": 14124,
											"name": "SUB"
										},
										{
											"begin": 14114,
											"end": 14115,
											"name": "DUP4"
										},
										{
											"begin": 14114,
											"end": 14117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14117,
											"name": "ADD"
										},
										{
											"begin": 14114,
											"end": 14117,
											"name": "MLOAD"
										},
										{
											"begin": 14114,
											"end": 14125,
											"name": "MUL"
										},
										{
											"begin": 14114,
											"end": 14131,
											"name": "ADD"
										},
										{
											"begin": 14104,
											"end": 14105,
											"name": "DUP3"
										},
										{
											"begin": 14104,
											"end": 14111,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14104,
											"end": 14111,
											"name": "ADD"
										},
										{
											"begin": 14104,
											"end": 14131,
											"name": "DUP2"
										},
										{
											"begin": 14104,
											"end": 14131,
											"name": "DUP2"
										},
										{
											"begin": 14104,
											"end": 14131,
											"name": "MSTORE"
										},
										{
											"begin": 14104,
											"end": 14131,
											"name": "POP"
										},
										{
											"begin": 14104,
											"end": 14131,
											"name": "POP"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "DUP1"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "MLOAD"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "SWAP1"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "DUP2"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "ADD"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "MSTORE"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "DUP1"
										},
										{
											"begin": 14158,
											"end": 14159,
											"name": "DUP7"
										},
										{
											"begin": 14162,
											"end": 14163,
											"name": "DUP5"
										},
										{
											"begin": 14162,
											"end": 14169,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14162,
											"end": 14169,
											"name": "ADD"
										},
										{
											"begin": 14162,
											"end": 14169,
											"name": "MLOAD"
										},
										{
											"begin": 14160,
											"end": 14161,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14160,
											"end": 14169,
											"name": "MUL"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "DUP2"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "MLOAD"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "DUP2"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "LT"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "ISZERO"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "ISZERO"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "PUSH [tag]",
											"value": "443"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "JUMPI"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "INVALID"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "tag",
											"value": "443"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "JUMPDEST"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "ADD"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "MUL"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "ADD"
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "MLOAD"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "DUP2"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "MSTORE"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "ADD"
										},
										{
											"begin": 14172,
											"end": 14173,
											"name": "DUP7"
										},
										{
											"begin": 14184,
											"end": 14185,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14176,
											"end": 14177,
											"name": "DUP6"
										},
										{
											"begin": 14176,
											"end": 14183,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14176,
											"end": 14183,
											"name": "ADD"
										},
										{
											"begin": 14176,
											"end": 14183,
											"name": "MLOAD"
										},
										{
											"begin": 14174,
											"end": 14175,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14174,
											"end": 14183,
											"name": "MUL"
										},
										{
											"begin": 14174,
											"end": 14185,
											"name": "ADD"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "DUP2"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "MLOAD"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "DUP2"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "LT"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "ISZERO"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "ISZERO"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "PUSH [tag]",
											"value": "444"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "JUMPI"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "INVALID"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "tag",
											"value": "444"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "JUMPDEST"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "SWAP1"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "ADD"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "SWAP1"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "MUL"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "ADD"
										},
										{
											"begin": 14172,
											"end": 14186,
											"name": "MLOAD"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "DUP2"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "MSTORE"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "POP"
										},
										{
											"begin": 14146,
											"end": 14147,
											"name": "DUP3"
										},
										{
											"begin": 14146,
											"end": 14154,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 14146,
											"end": 14154,
											"name": "ADD"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "DUP2"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "SWAP1"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "MSTORE"
										},
										{
											"begin": 14146,
											"end": 14187,
											"name": "POP"
										},
										{
											"begin": 14246,
											"end": 14331,
											"name": "PUSH [tag]",
											"value": "445"
										},
										{
											"begin": 14282,
											"end": 14283,
											"name": "DUP3"
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "ADD"
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "MLOAD"
										},
										{
											"begin": 14288,
											"end": 14297,
											"name": "DUP6"
										},
										{
											"begin": 14306,
											"end": 14307,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14298,
											"end": 14299,
											"name": "DUP6"
										},
										{
											"begin": 14298,
											"end": 14305,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14298,
											"end": 14305,
											"name": "ADD"
										},
										{
											"begin": 14298,
											"end": 14305,
											"name": "MLOAD"
										},
										{
											"begin": 14298,
											"end": 14307,
											"name": "ADD"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "DUP2"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "MLOAD"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "DUP2"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "LT"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "ISZERO"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "ISZERO"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "PUSH [tag]",
											"value": "446"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "JUMPI"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "INVALID"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "tag",
											"value": "446"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "JUMPDEST"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "SWAP1"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "ADD"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "SWAP1"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "MUL"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "ADD"
										},
										{
											"begin": 14288,
											"end": 14308,
											"name": "MLOAD"
										},
										{
											"begin": 14310,
											"end": 14311,
											"name": "DUP5"
										},
										{
											"begin": 14310,
											"end": 14318,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 14310,
											"end": 14318,
											"name": "ADD"
										},
										{
											"begin": 14310,
											"end": 14318,
											"name": "MLOAD"
										},
										{
											"begin": 14320,
											"end": 14321,
											"name": "DUP6"
										},
										{
											"begin": 14320,
											"end": 14330,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14320,
											"end": 14330,
											"name": "ADD"
										},
										{
											"begin": 14320,
											"end": 14330,
											"name": "MLOAD"
										},
										{
											"begin": 14246,
											"end": 14281,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14246,
											"end": 14331,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14246,
											"end": 14331,
											"name": "tag",
											"value": "445"
										},
										{
											"begin": 14246,
											"end": 14331,
											"name": "JUMPDEST"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "DUP2"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "SWAP2"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "POP"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "DUP1"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "SWAP1"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "POP"
										},
										{
											"begin": 14224,
											"end": 14225,
											"name": "DUP4"
										},
										{
											"begin": 14224,
											"end": 14232,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 14224,
											"end": 14232,
											"name": "ADD"
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "DUP5"
										},
										{
											"begin": 14234,
											"end": 14242,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 14234,
											"end": 14242,
											"name": "ADD"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "DUP3"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "SWAP1"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "MSTORE"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "DUP3"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "SWAP1"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "MSTORE"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "POP"
										},
										{
											"begin": 14223,
											"end": 14331,
											"name": "POP"
										},
										{
											"begin": 14421,
											"end": 14422,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14419,
											"end": 14420,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14415,
											"end": 14416,
											"name": "DUP4"
										},
										{
											"begin": 14415,
											"end": 14418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14415,
											"end": 14418,
											"name": "ADD"
										},
										{
											"begin": 14415,
											"end": 14418,
											"name": "MLOAD"
										},
										{
											"begin": 14415,
											"end": 14420,
											"name": "MUL"
										},
										{
											"begin": 14415,
											"end": 14422,
											"name": "ADD"
										},
										{
											"begin": 14405,
											"end": 14406,
											"name": "DUP3"
										},
										{
											"begin": 14405,
											"end": 14412,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14405,
											"end": 14412,
											"name": "ADD"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "DUP2"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "DUP2"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "MSTORE"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "POP"
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "POP"
										},
										{
											"begin": 14450,
											"end": 14451,
											"name": "DUP2"
										},
										{
											"begin": 14450,
											"end": 14458,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 14450,
											"end": 14458,
											"name": "ADD"
										},
										{
											"begin": 14450,
											"end": 14458,
											"name": "MLOAD"
										},
										{
											"begin": 14459,
											"end": 14460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "DUP2"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "LT"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "ISZERO"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "ISZERO"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "PUSH [tag]",
											"value": "447"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "JUMPI"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "INVALID"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "tag",
											"value": "447"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "JUMPDEST"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "MUL"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "ADD"
										},
										{
											"begin": 14450,
											"end": 14461,
											"name": "MLOAD"
										},
										{
											"begin": 14437,
											"end": 14438,
											"name": "DUP2"
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "DUP4"
										},
										{
											"begin": 14439,
											"end": 14446,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14439,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 14439,
											"end": 14446,
											"name": "MLOAD"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "DUP2"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "MLOAD"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "DUP2"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "LT"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "ISZERO"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "ISZERO"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "PUSH [tag]",
											"value": "448"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "JUMPI"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "INVALID"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "tag",
											"value": "448"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "JUMPDEST"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "SWAP1"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "ADD"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "SWAP1"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "MUL"
										},
										{
											"begin": 14437,
											"end": 14447,
											"name": "ADD"
										},
										{
											"begin": 14437,
											"end": 14461,
											"name": "DUP2"
										},
										{
											"begin": 14437,
											"end": 14461,
											"name": "DUP2"
										},
										{
											"begin": 14437,
											"end": 14461,
											"name": "MSTORE"
										},
										{
											"begin": 14437,
											"end": 14461,
											"name": "POP"
										},
										{
											"begin": 14437,
											"end": 14461,
											"name": "POP"
										},
										{
											"begin": 14491,
											"end": 14492,
											"name": "DUP2"
										},
										{
											"begin": 14491,
											"end": 14499,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 14491,
											"end": 14499,
											"name": "ADD"
										},
										{
											"begin": 14491,
											"end": 14499,
											"name": "MLOAD"
										},
										{
											"begin": 14500,
											"end": 14501,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "DUP2"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "LT"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "ISZERO"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "ISZERO"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "PUSH [tag]",
											"value": "449"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "JUMPI"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "INVALID"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "tag",
											"value": "449"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "JUMPDEST"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MUL"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "ADD"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MLOAD"
										},
										{
											"begin": 14476,
											"end": 14477,
											"name": "DUP2"
										},
										{
											"begin": 14486,
											"end": 14487,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14478,
											"end": 14479,
											"name": "DUP5"
										},
										{
											"begin": 14478,
											"end": 14485,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14478,
											"end": 14485,
											"name": "ADD"
										},
										{
											"begin": 14478,
											"end": 14485,
											"name": "MLOAD"
										},
										{
											"begin": 14478,
											"end": 14487,
											"name": "ADD"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "DUP2"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "MLOAD"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "DUP2"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "LT"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "ISZERO"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "ISZERO"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "PUSH [tag]",
											"value": "450"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "JUMPI"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "INVALID"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "tag",
											"value": "450"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "JUMPDEST"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "SWAP1"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "ADD"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "SWAP1"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "MUL"
										},
										{
											"begin": 14476,
											"end": 14488,
											"name": "ADD"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "DUP2"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "DUP2"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "MSTORE"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "POP"
										},
										{
											"begin": 14476,
											"end": 14502,
											"name": "POP"
										},
										{
											"begin": 14532,
											"end": 14533,
											"name": "DUP2"
										},
										{
											"begin": 14532,
											"end": 14540,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 14532,
											"end": 14540,
											"name": "ADD"
										},
										{
											"begin": 14532,
											"end": 14540,
											"name": "MLOAD"
										},
										{
											"begin": 14541,
											"end": 14542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "DUP2"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "LT"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "ISZERO"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "ISZERO"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "PUSH [tag]",
											"value": "451"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "JUMPI"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "INVALID"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "tag",
											"value": "451"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "JUMPDEST"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "MUL"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "ADD"
										},
										{
											"begin": 14532,
											"end": 14543,
											"name": "MLOAD"
										},
										{
											"begin": 14517,
											"end": 14518,
											"name": "DUP2"
										},
										{
											"begin": 14527,
											"end": 14528,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14519,
											"end": 14520,
											"name": "DUP5"
										},
										{
											"begin": 14519,
											"end": 14526,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14519,
											"end": 14526,
											"name": "ADD"
										},
										{
											"begin": 14519,
											"end": 14526,
											"name": "MLOAD"
										},
										{
											"begin": 14519,
											"end": 14528,
											"name": "ADD"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "DUP2"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "MLOAD"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "DUP2"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "LT"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "ISZERO"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "ISZERO"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "PUSH [tag]",
											"value": "452"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "JUMPI"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "INVALID"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "tag",
											"value": "452"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "JUMPDEST"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "SWAP1"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "ADD"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "SWAP1"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "MUL"
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "ADD"
										},
										{
											"begin": 14517,
											"end": 14543,
											"name": "DUP2"
										},
										{
											"begin": 14517,
											"end": 14543,
											"name": "DUP2"
										},
										{
											"begin": 14517,
											"end": 14543,
											"name": "MSTORE"
										},
										{
											"begin": 14517,
											"end": 14543,
											"name": "POP"
										},
										{
											"begin": 14517,
											"end": 14543,
											"name": "POP"
										},
										{
											"begin": 14573,
											"end": 14574,
											"name": "DUP2"
										},
										{
											"begin": 14573,
											"end": 14581,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 14573,
											"end": 14581,
											"name": "ADD"
										},
										{
											"begin": 14573,
											"end": 14581,
											"name": "MLOAD"
										},
										{
											"begin": 14582,
											"end": 14583,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "DUP2"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "LT"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "ISZERO"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "ISZERO"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "PUSH [tag]",
											"value": "453"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "JUMPI"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "INVALID"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "tag",
											"value": "453"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "JUMPDEST"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "MUL"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "ADD"
										},
										{
											"begin": 14573,
											"end": 14584,
											"name": "MLOAD"
										},
										{
											"begin": 14558,
											"end": 14559,
											"name": "DUP2"
										},
										{
											"begin": 14568,
											"end": 14569,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14560,
											"end": 14561,
											"name": "DUP5"
										},
										{
											"begin": 14560,
											"end": 14567,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14560,
											"end": 14567,
											"name": "ADD"
										},
										{
											"begin": 14560,
											"end": 14567,
											"name": "MLOAD"
										},
										{
											"begin": 14560,
											"end": 14569,
											"name": "ADD"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "DUP2"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "MLOAD"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "DUP2"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "LT"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "ISZERO"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "ISZERO"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "PUSH [tag]",
											"value": "454"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "JUMPI"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "INVALID"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "tag",
											"value": "454"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "JUMPDEST"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "SWAP1"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "ADD"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "SWAP1"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "MUL"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "ADD"
										},
										{
											"begin": 14558,
											"end": 14584,
											"name": "DUP2"
										},
										{
											"begin": 14558,
											"end": 14584,
											"name": "DUP2"
										},
										{
											"begin": 14558,
											"end": 14584,
											"name": "MSTORE"
										},
										{
											"begin": 14558,
											"end": 14584,
											"name": "POP"
										},
										{
											"begin": 14558,
											"end": 14584,
											"name": "POP"
										},
										{
											"begin": 13478,
											"end": 13479,
											"name": "DUP2"
										},
										{
											"begin": 13478,
											"end": 13481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13478,
											"end": 13481,
											"name": "ADD"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "DUP1"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "MLOAD"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "DUP1"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "SWAP2"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "SWAP1"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "ADD"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "DUP2"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "MSTORE"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "POP"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "POP"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "PUSH [tag]",
											"value": "430"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "JUMP"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "tag",
											"value": "431"
										},
										{
											"begin": 13453,
											"end": 14596,
											"name": "JUMPDEST"
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "PUSH [tag]",
											"value": "455"
										},
										{
											"begin": 14761,
											"end": 14762,
											"name": "DUP2"
										},
										{
											"begin": 14744,
											"end": 14760,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "tag",
											"value": "455"
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "JUMPDEST"
										},
										{
											"begin": 14737,
											"end": 14738,
											"name": "DUP3"
										},
										{
											"begin": 14737,
											"end": 14741,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14737,
											"end": 14741,
											"name": "ADD"
										},
										{
											"begin": 14737,
											"end": 14763,
											"name": "DUP2"
										},
										{
											"begin": 14737,
											"end": 14763,
											"name": "DUP2"
										},
										{
											"begin": 14737,
											"end": 14763,
											"name": "MSTORE"
										},
										{
											"begin": 14737,
											"end": 14763,
											"name": "POP"
										},
										{
											"begin": 14737,
											"end": 14763,
											"name": "POP"
										},
										{
											"begin": 14848,
											"end": 14857,
											"name": "DUP4"
										},
										{
											"begin": 14858,
											"end": 14859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "DUP2"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "MLOAD"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "DUP2"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "LT"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "ISZERO"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "ISZERO"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "PUSH [tag]",
											"value": "456"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "JUMPI"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "INVALID"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "tag",
											"value": "456"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "JUMPDEST"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "SWAP1"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "ADD"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "SWAP1"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "MUL"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "ADD"
										},
										{
											"begin": 14848,
											"end": 14860,
											"name": "MLOAD"
										},
										{
											"begin": 14840,
											"end": 14841,
											"name": "DUP3"
										},
										{
											"begin": 14840,
											"end": 14844,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14840,
											"end": 14844,
											"name": "ADD"
										},
										{
											"begin": 14840,
											"end": 14844,
											"name": "MLOAD"
										},
										{
											"begin": 14840,
											"end": 14860,
											"name": "EQ"
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "SWAP3"
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "tag",
											"value": "420"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "JUMPDEST"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP5"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "SWAP4"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "POP"
										},
										{
											"begin": 12861,
											"end": 14869,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "JUMPDEST"
										},
										{
											"begin": 5729,
											"end": 5741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH [tag]",
											"value": "457"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "tag",
											"value": "457"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "JUMPDEST"
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "DUP6"
										},
										{
											"begin": 5829,
											"end": 5837,
											"name": "MLOAD"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "DUP2"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "ISZERO"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "ISZERO"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "PUSH [tag]",
											"value": "459"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "JUMPI"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "INVALID"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "tag",
											"value": "459"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "JUMPDEST"
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "MOD"
										},
										{
											"begin": 5829,
											"end": 5846,
											"name": "EQ"
										},
										{
											"begin": 5829,
											"end": 5846,
											"name": "ISZERO"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "ISZERO"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "PUSH [tag]",
											"value": "460"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "JUMPI"
										},
										{
											"begin": 5855,
											"end": 5860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "SWAP2"
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "POP"
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "PUSH [tag]",
											"value": "458"
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "JUMP"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "tag",
											"value": "460"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "JUMPDEST"
										},
										{
											"begin": 5889,
											"end": 5890,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "DUP5"
										},
										{
											"begin": 5878,
											"end": 5886,
											"name": "MLOAD"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "DUP2"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "ISZERO"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "ISZERO"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "PUSH [tag]",
											"value": "461"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "JUMPI"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "INVALID"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "tag",
											"value": "461"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "JUMPDEST"
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "DIV"
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "DUP2"
										},
										{
											"begin": 5871,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5871,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5871,
											"end": 5891,
											"name": "DUP2"
										},
										{
											"begin": 5871,
											"end": 5891,
											"name": "DUP2"
										},
										{
											"begin": 5871,
											"end": 5891,
											"name": "MSTORE"
										},
										{
											"begin": 5871,
											"end": 5891,
											"name": "POP"
										},
										{
											"begin": 5871,
											"end": 5891,
											"name": "POP"
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5927,
											"end": 5928,
											"name": "DUP2"
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "ADD"
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "MLOAD"
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "DUP4"
										},
										{
											"begin": 5906,
											"end": 5922,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5933,
											"name": "EQ"
										},
										{
											"begin": 5906,
											"end": 5933,
											"name": "ISZERO"
										},
										{
											"begin": 5902,
											"end": 5947,
											"name": "ISZERO"
										},
										{
											"begin": 5902,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "462"
										},
										{
											"begin": 5902,
											"end": 5947,
											"name": "JUMPI"
										},
										{
											"begin": 5942,
											"end": 5947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "SWAP2"
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "POP"
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "458"
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "JUMP"
										},
										{
											"begin": 5902,
											"end": 5947,
											"name": "tag",
											"value": "462"
										},
										{
											"begin": 5902,
											"end": 5947,
											"name": "JUMPDEST"
										},
										{
											"begin": 5975,
											"end": 5984,
											"name": "DUP3"
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "MLOAD"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "LT"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "ISZERO"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "ISZERO"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "JUMPI"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "INVALID"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "tag",
											"value": "463"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "JUMPDEST"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "SWAP1"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "ADD"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "SWAP1"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "MUL"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "ADD"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "MLOAD"
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "DUP2"
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "MSTORE"
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "POP"
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "POP"
										},
										{
											"begin": 6049,
											"end": 6050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "DUP2"
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "ADD"
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "DUP2"
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "DUP2"
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "MSTORE"
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "POP"
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "POP"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "tag",
											"value": "464"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "JUMPDEST"
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "DUP1"
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "ADD"
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "MLOAD"
										},
										{
											"begin": 6052,
											"end": 6053,
											"name": "DUP2"
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "ADD"
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "MLOAD"
										},
										{
											"begin": 6052,
											"end": 6061,
											"name": "LT"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "ISZERO"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "PUSH [tag]",
											"value": "465"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "JUMPI"
										},
										{
											"begin": 6115,
											"end": 6116,
											"name": "DUP4"
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "DUP2"
										},
										{
											"begin": 6119,
											"end": 6122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6122,
											"name": "ADD"
										},
										{
											"begin": 6119,
											"end": 6122,
											"name": "MLOAD"
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6117,
											"end": 6122,
											"name": "MUL"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "DUP2"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "MLOAD"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "DUP2"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "LT"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "ISZERO"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "ISZERO"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "PUSH [tag]",
											"value": "467"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "JUMPI"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "INVALID"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "tag",
											"value": "467"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "JUMPDEST"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "SWAP1"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "ADD"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "SWAP1"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "MUL"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "ADD"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "MLOAD"
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "DUP5"
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "DUP4"
										},
										{
											"begin": 6129,
											"end": 6132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6129,
											"end": 6132,
											"name": "ADD"
										},
										{
											"begin": 6129,
											"end": 6132,
											"name": "MLOAD"
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6127,
											"end": 6132,
											"name": "MUL"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "ADD"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "DUP2"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "MLOAD"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "DUP2"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "LT"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "ISZERO"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "ISZERO"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "PUSH [tag]",
											"value": "468"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "JUMPI"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "INVALID"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "tag",
											"value": "468"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "JUMPDEST"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "SWAP1"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "ADD"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "SWAP1"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "MUL"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "ADD"
										},
										{
											"begin": 6125,
											"end": 6135,
											"name": "MLOAD"
										},
										{
											"begin": 6086,
											"end": 6087,
											"name": "DUP3"
										},
										{
											"begin": 6086,
											"end": 6094,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 6086,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6086,
											"end": 6094,
											"name": "MLOAD"
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "DUP2"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "LT"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "ISZERO"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "ISZERO"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "PUSH [tag]",
											"value": "469"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "JUMPI"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "INVALID"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "tag",
											"value": "469"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "JUMPDEST"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "MUL"
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "ADD"
										},
										{
											"begin": 6099,
											"end": 6100,
											"name": "DUP4"
										},
										{
											"begin": 6099,
											"end": 6107,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 6099,
											"end": 6107,
											"name": "ADD"
										},
										{
											"begin": 6099,
											"end": 6107,
											"name": "MLOAD"
										},
										{
											"begin": 6108,
											"end": 6109,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "DUP2"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "LT"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "ISZERO"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "ISZERO"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "PUSH [tag]",
											"value": "470"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "JUMPI"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "INVALID"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "tag",
											"value": "470"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "JUMPDEST"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "MUL"
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "ADD"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "DUP3"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "MSTORE"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "DUP3"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "MSTORE"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 6085,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 6179,
											"end": 6242,
											"name": "PUSH [tag]",
											"value": "471"
										},
										{
											"begin": 6200,
											"end": 6207,
											"name": "DUP6"
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "DUP3"
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "ADD"
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "MLOAD"
										},
										{
											"begin": 6215,
											"end": 6224,
											"name": "DUP6"
										},
										{
											"begin": 6229,
											"end": 6230,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "DUP6"
										},
										{
											"begin": 6225,
											"end": 6228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6228,
											"name": "ADD"
										},
										{
											"begin": 6225,
											"end": 6228,
											"name": "MLOAD"
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "ADD"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "DUP2"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "MLOAD"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "DUP2"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "LT"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "ISZERO"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "ISZERO"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "PUSH [tag]",
											"value": "472"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "JUMPI"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "INVALID"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "tag",
											"value": "472"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "JUMPDEST"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "SWAP1"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "ADD"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "SWAP1"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "MUL"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "ADD"
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "MLOAD"
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "DUP5"
										},
										{
											"begin": 6233,
											"end": 6241,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 6233,
											"end": 6241,
											"name": "ADD"
										},
										{
											"begin": 6233,
											"end": 6241,
											"name": "MLOAD"
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 6179,
											"end": 6242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6242,
											"name": "tag",
											"value": "471"
										},
										{
											"begin": 6179,
											"end": 6242,
											"name": "JUMPDEST"
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "ADD"
										},
										{
											"begin": 6172,
											"end": 6242,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6242,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6242,
											"name": "MSTORE"
										},
										{
											"begin": 6172,
											"end": 6242,
											"name": "POP"
										},
										{
											"begin": 6172,
											"end": 6242,
											"name": "POP"
										},
										{
											"begin": 6063,
											"end": 6064,
											"name": "DUP1"
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "ADD"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "DUP1"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "MLOAD"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "DUP1"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "SWAP2"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "SWAP1"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "ADD"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "DUP2"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "MSTORE"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "POP"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "POP"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "PUSH [tag]",
											"value": "464"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "JUMP"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "tag",
											"value": "465"
										},
										{
											"begin": 6038,
											"end": 6254,
											"name": "JUMPDEST"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP3"
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "DUP2"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "MLOAD"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "DUP2"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "LT"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "ISZERO"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "ISZERO"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "PUSH [tag]",
											"value": "473"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "JUMPI"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "INVALID"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "tag",
											"value": "473"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "JUMPDEST"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "SWAP1"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "ADD"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "SWAP1"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "MUL"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "ADD"
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "MLOAD"
										},
										{
											"begin": 6330,
											"end": 6331,
											"name": "DUP2"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "ADD"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "MLOAD"
										},
										{
											"begin": 6330,
											"end": 6350,
											"name": "EQ"
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SWAP2"
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "tag",
											"value": "458"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "JUMPDEST"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP4"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "POP"
										},
										{
											"begin": 5625,
											"end": 6359,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "JUMPDEST"
										},
										{
											"begin": 1361,
											"end": 1376,
											"name": "PUSH [tag]",
											"value": "474"
										},
										{
											"begin": 1361,
											"end": 1376,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1361,
											"end": 1376,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1376,
											"name": "tag",
											"value": "474"
										},
										{
											"begin": 1361,
											"end": 1376,
											"name": "JUMPDEST"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "SLOAD"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "EXP"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DIV"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "AND"
										},
										{
											"begin": 1401,
											"end": 1416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1416,
											"name": "AND"
										},
										{
											"begin": 1401,
											"end": 1416,
											"name": "PUSH",
											"value": "C025D89B"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "EXP"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "DIV"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "AND"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "AND"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "PUSH",
											"value": "AE5D39F6"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "MLOAD"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "MUL"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "MSTORE"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "ADD"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "MLOAD"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP4"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "SUB"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP8"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "476"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "476"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "GAS"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "CALL"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "477"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "477"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "MLOAD"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "478"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "478"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "ADD"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "SWAP2"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP5"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MLOAD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP4"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "AND"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MUL"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP2"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MSTORE"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "ADD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP4"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MUL"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP4"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "479"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "480"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "479"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "480"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "ADD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP2"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MSTORE"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "ADD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "SWAP3"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MLOAD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP4"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "SUB"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP2"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP8"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "482"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "482"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "GAS"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "CALL"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "483"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "483"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "MLOAD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "484"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "484"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP2"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "ADD"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "SWAP2"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1401,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1394,
											"end": 1439,
											"name": "SWAP1"
										},
										{
											"begin": 1394,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMPDEST"
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SLOAD"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "EXP"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DIV"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "AND"
										},
										{
											"begin": 3861,
											"end": 3883,
											"name": "SWAP1"
										},
										{
											"begin": 3861,
											"end": 3883,
											"name": "POP"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "SWAP1"
										},
										{
											"begin": 3790,
											"end": 3888,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "JUMPDEST"
										},
										{
											"begin": 2085,
											"end": 2096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "PUSH [tag]",
											"value": "486"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "tag",
											"value": "486"
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "JUMPDEST"
										},
										{
											"begin": 2154,
											"end": 2192,
											"name": "PUSH [tag]",
											"value": "488"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "DUP6"
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "DUP6"
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "DUP6"
										},
										{
											"begin": 2154,
											"end": 2181,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2154,
											"end": 2192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2192,
											"name": "tag",
											"value": "488"
										},
										{
											"begin": 2154,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2147,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2147,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2209,
											"end": 2240,
											"name": "PUSH [tag]",
											"value": "489"
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "DUP7"
										},
										{
											"begin": 2235,
											"end": 2239,
											"name": "DUP3"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2209,
											"end": 2240,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2209,
											"end": 2240,
											"name": "tag",
											"value": "489"
										},
										{
											"begin": 2209,
											"end": 2240,
											"name": "JUMPDEST"
										},
										{
											"begin": 2203,
											"end": 2240,
											"name": "SWAP2"
										},
										{
											"begin": 2203,
											"end": 2240,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP5"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "SWAP4"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMPDEST"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3977,
											"name": "DUP1"
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "PUSH [tag]",
											"value": "491"
										},
										{
											"begin": 3997,
											"end": 4014,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "tag",
											"value": "491"
										},
										{
											"begin": 3997,
											"end": 4016,
											"name": "JUMPDEST"
										},
										{
											"begin": 3982,
											"end": 4016,
											"name": "SWAP1"
										},
										{
											"begin": 3982,
											"end": 4016,
											"name": "POP"
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "DUP1"
										},
										{
											"begin": 4052,
											"end": 4069,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "SWAP2"
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "POP"
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "DUP2"
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "SWAP3"
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "POP"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "SWAP1"
										},
										{
											"begin": 3894,
											"end": 4103,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "JUMPDEST"
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "PUSH [tag]",
											"value": "492"
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "tag",
											"value": "492"
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "JUMPDEST"
										},
										{
											"begin": 4608,
											"end": 4631,
											"name": "PUSH [tag]",
											"value": "493"
										},
										{
											"begin": 4608,
											"end": 4631,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4608,
											"end": 4631,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4608,
											"end": 4631,
											"name": "tag",
											"value": "493"
										},
										{
											"begin": 4608,
											"end": 4631,
											"name": "JUMPDEST"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "PUSH [tag]",
											"value": "495"
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "DUP8"
										},
										{
											"begin": 4698,
											"end": 4700,
											"name": "DUP8"
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "DUP8"
										},
										{
											"begin": 4705,
											"end": 4706,
											"name": "DUP8"
										},
										{
											"begin": 4658,
											"end": 4693,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "tag",
											"value": "495"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "JUMPDEST"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "DUP1"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "SWAP3"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "POP"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "DUP2"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "SWAP4"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "POP"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "POP"
										},
										{
											"begin": 4642,
											"end": 4707,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "PUSH [tag]",
											"value": "496"
										},
										{
											"begin": 4749,
											"end": 4756,
											"name": "DUP9"
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "DUP4"
										},
										{
											"begin": 4764,
											"end": 4769,
											"name": "DUP4"
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "tag",
											"value": "496"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "JUMPDEST"
										},
										{
											"begin": 4718,
											"end": 4770,
											"name": "SWAP3"
										},
										{
											"begin": 4718,
											"end": 4770,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP6"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "SWAP5"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4778,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "JUMPDEST"
										},
										{
											"begin": 8647,
											"end": 8659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8677,
											"end": 8699,
											"name": "PUSH [tag]",
											"value": "497"
										},
										{
											"begin": 8677,
											"end": 8699,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8677,
											"end": 8699,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8677,
											"end": 8699,
											"name": "tag",
											"value": "497"
										},
										{
											"begin": 8677,
											"end": 8699,
											"name": "JUMPDEST"
										},
										{
											"begin": 8710,
											"end": 8735,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8774,
											"end": 8799,
											"name": "DUP1"
										},
										{
											"begin": 8839,
											"end": 8848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8762,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "DUP8"
										},
										{
											"begin": 8752,
											"end": 8760,
											"name": "MLOAD"
										},
										{
											"begin": 8752,
											"end": 8762,
											"name": "MUL"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "MLOAD"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "SWAP1"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "DUP1"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "DUP3"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "MSTORE"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "DUP1"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "MUL"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "ADD"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "DUP3"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "ADD"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "MSTORE"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "DUP1"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "ISZERO"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "PUSH [tag]",
											"value": "499"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "JUMPI"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "DUP2"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "SWAP1"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "POP"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "tag",
											"value": "499"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "JUMPDEST"
										},
										{
											"begin": 8738,
											"end": 8763,
											"name": "POP"
										},
										{
											"begin": 8710,
											"end": 8763,
											"name": "SWAP3"
										},
										{
											"begin": 8710,
											"end": 8763,
											"name": "POP"
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "MLOAD"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "SWAP1"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "DUP1"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "DUP3"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "MSTORE"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "DUP1"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "MUL"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "ADD"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "DUP3"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "ADD"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "MSTORE"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "DUP1"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "ISZERO"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "PUSH [tag]",
											"value": "500"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "JUMPI"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "DUP2"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "SWAP1"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "POP"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "tag",
											"value": "500"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "JUMPDEST"
										},
										{
											"begin": 8802,
											"end": 8818,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8818,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8818,
											"name": "POP"
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8869,
											"name": "SWAP1"
										},
										{
											"begin": 8864,
											"end": 8869,
											"name": "POP"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "tag",
											"value": "501"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "JUMPDEST"
										},
										{
											"begin": 8875,
											"end": 8876,
											"name": "DUP7"
										},
										{
											"begin": 8875,
											"end": 8883,
											"name": "MLOAD"
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "DUP2"
										},
										{
											"begin": 8871,
											"end": 8883,
											"name": "LT"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "ISZERO"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "PUSH [tag]",
											"value": "502"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "JUMPI"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "SWAP1"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "SLOAD"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "SWAP1"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "EXP"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "SWAP1"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "DIV"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "AND"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "AND"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "PUSH",
											"value": "5DA7F69E"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "DUP9"
										},
										{
											"begin": 8933,
											"end": 8934,
											"name": "DUP4"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "DUP2"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "MLOAD"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "DUP2"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "LT"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "ISZERO"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "ISZERO"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "PUSH [tag]",
											"value": "504"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "JUMPI"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "INVALID"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "tag",
											"value": "504"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "JUMPDEST"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "SWAP1"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "ADD"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "SWAP1"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "MUL"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "ADD"
										},
										{
											"begin": 8931,
											"end": 8935,
											"name": "MLOAD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "MLOAD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP3"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "AND"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "MUL"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP2"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "MSTORE"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "ADD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP3"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP2"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "MSTORE"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "ADD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "MLOAD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP4"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "SUB"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP2"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP8"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "505"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "505"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "GAS"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "CALL"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "506"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "506"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "MLOAD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "507"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "507"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP2"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "ADD"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "SWAP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "SWAP1"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8905,
											"end": 8936,
											"name": "SWAP4"
										},
										{
											"begin": 8905,
											"end": 8936,
											"name": "POP"
										},
										{
											"begin": 8967,
											"end": 8971,
											"name": "DUP4"
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP2"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "LT"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "ISZERO"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "ISZERO"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "PUSH [tag]",
											"value": "508"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "JUMPI"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "INVALID"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "tag",
											"value": "508"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "JUMPDEST"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "MUL"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "ADD"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "MLOAD"
										},
										{
											"begin": 8951,
											"end": 8959,
											"name": "DUP4"
										},
										{
											"begin": 8962,
											"end": 8963,
											"name": "DUP3"
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8960,
											"end": 8963,
											"name": "MUL"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "DUP2"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "MLOAD"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "DUP2"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "LT"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "ISZERO"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "ISZERO"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "PUSH [tag]",
											"value": "509"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "JUMPI"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "INVALID"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "tag",
											"value": "509"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "JUMPDEST"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "SWAP1"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "ADD"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "SWAP1"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "MUL"
										},
										{
											"begin": 8951,
											"end": 8964,
											"name": "ADD"
										},
										{
											"begin": 8951,
											"end": 8974,
											"name": "DUP2"
										},
										{
											"begin": 8951,
											"end": 8974,
											"name": "DUP2"
										},
										{
											"begin": 8951,
											"end": 8974,
											"name": "MSTORE"
										},
										{
											"begin": 8951,
											"end": 8974,
											"name": "POP"
										},
										{
											"begin": 8951,
											"end": 8974,
											"name": "POP"
										},
										{
											"begin": 9007,
											"end": 9011,
											"name": "DUP4"
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "DUP2"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "LT"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "ISZERO"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "ISZERO"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "PUSH [tag]",
											"value": "510"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "JUMPI"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "INVALID"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "tag",
											"value": "510"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "JUMPDEST"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "MUL"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "ADD"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "MLOAD"
										},
										{
											"begin": 8989,
											"end": 8997,
											"name": "DUP4"
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "DUP4"
										},
										{
											"begin": 8998,
											"end": 8999,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8998,
											"end": 9001,
											"name": "MUL"
										},
										{
											"begin": 8998,
											"end": 9003,
											"name": "ADD"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "DUP2"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "MLOAD"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "DUP2"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "LT"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "ISZERO"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "ISZERO"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "PUSH [tag]",
											"value": "511"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "JUMPI"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "INVALID"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "tag",
											"value": "511"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "JUMPDEST"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "SWAP1"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "ADD"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "SWAP1"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "MUL"
										},
										{
											"begin": 8989,
											"end": 9004,
											"name": "ADD"
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "DUP2"
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "DUP2"
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "MSTORE"
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "POP"
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "POP"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP1"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP1"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "ADD"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "SWAP2"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "POP"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "POP"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "PUSH [tag]",
											"value": "501"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "JUMP"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "tag",
											"value": "502"
										},
										{
											"begin": 8859,
											"end": 9026,
											"name": "JUMPDEST"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "SLOAD"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "EXP"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "DIV"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "AND"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "AND"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"value": "5DA7F69E"
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "DUP10"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MLOAD"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP3"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "AND"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MUL"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MSTORE"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "ADD"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP3"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MSTORE"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "ADD"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "SWAP2"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MLOAD"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP4"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "SUB"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP8"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "512"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "512"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "GAS"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "CALL"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "513"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "513"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MLOAD"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "514"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "514"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "ADD"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "DUP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "SWAP2"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9046,
											"end": 9074,
											"name": "SWAP4"
										},
										{
											"begin": 9046,
											"end": 9074,
											"name": "POP"
										},
										{
											"begin": 9115,
											"end": 9119,
											"name": "DUP4"
										},
										{
											"begin": 9120,
											"end": 9121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "DUP2"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "LT"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "ISZERO"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "ISZERO"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "PUSH [tag]",
											"value": "515"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "JUMPI"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "INVALID"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "tag",
											"value": "515"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "JUMPDEST"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "MUL"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "ADD"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "MLOAD"
										},
										{
											"begin": 9124,
											"end": 9128,
											"name": "DUP5"
										},
										{
											"begin": 9129,
											"end": 9130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "DUP2"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "LT"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "ISZERO"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "ISZERO"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "PUSH [tag]",
											"value": "516"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "JUMPI"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "INVALID"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "tag",
											"value": "516"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "JUMPDEST"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "MUL"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "ADD"
										},
										{
											"begin": 9124,
											"end": 9131,
											"name": "MLOAD"
										},
										{
											"begin": 9086,
											"end": 9094,
											"name": "DUP4"
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "DUP2"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "MLOAD"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "DUP2"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "LT"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "ISZERO"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "ISZERO"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "PUSH [tag]",
											"value": "517"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "JUMPI"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "INVALID"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "tag",
											"value": "517"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "JUMPDEST"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "SWAP1"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "ADD"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "SWAP1"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "MUL"
										},
										{
											"begin": 9086,
											"end": 9097,
											"name": "ADD"
										},
										{
											"begin": 9099,
											"end": 9107,
											"name": "DUP5"
										},
										{
											"begin": 9108,
											"end": 9109,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "DUP2"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "MLOAD"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "DUP2"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "LT"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "ISZERO"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "ISZERO"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "PUSH [tag]",
											"value": "518"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "JUMPI"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "INVALID"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "tag",
											"value": "518"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "JUMPDEST"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "SWAP1"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "ADD"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "SWAP1"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "MUL"
										},
										{
											"begin": 9099,
											"end": 9110,
											"name": "ADD"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "DUP3"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "DUP2"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "MSTORE"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "POP"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "DUP3"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "DUP2"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "MSTORE"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "POP"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "POP"
										},
										{
											"begin": 9085,
											"end": 9132,
											"name": "POP"
										},
										{
											"begin": 9160,
											"end": 9210,
											"name": "PUSH [tag]",
											"value": "519"
										},
										{
											"begin": 9171,
											"end": 9178,
											"name": "DUP10"
										},
										{
											"begin": 9180,
											"end": 9188,
											"name": "DUP4"
										},
										{
											"begin": 9190,
											"end": 9198,
											"name": "DUP6"
										},
										{
											"begin": 9200,
											"end": 9209,
											"name": "DUP10"
										},
										{
											"begin": 9160,
											"end": 9170,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9160,
											"end": 9210,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9160,
											"end": 9210,
											"name": "tag",
											"value": "519"
										},
										{
											"begin": 9160,
											"end": 9210,
											"name": "JUMPDEST"
										},
										{
											"begin": 9153,
											"end": 9210,
											"name": "SWAP5"
										},
										{
											"begin": 9153,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP5"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "SWAP4"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 8520,
											"end": 9218,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "180"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "520"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "521"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "520"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "522"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "521"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "522"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "523"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH [tag]",
											"value": "521"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "523"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "tag",
											"value": "521"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 16066,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CalculateKeyImageFromPrivKey(uint256)": "a3d53298",
							"CalculateLinkableRingSegment(uint256,uint256,uint256,uint256[2],uint256[2])": "f8c8b0ca",
							"CalculateLinkableRingSegment_NoHash(uint256,uint256,uint256[2],uint256[2])": "88c01ed8",
							"CalculateRingSegment(uint256,uint256,uint256,uint256[2])": "db8c735e",
							"CalculateRingSegment_NoHash(uint256,uint256,uint256[2])": "36490458",
							"CompleteRing(uint256,uint256,uint256)": "5c859d09",
							"ECMath_ChangeAddress(address)": "9c8fda72",
							"ECMath_GetAddress()": "cba51ff3",
							"ECMath_GetCodeSize()": "efd6b306",
							"Keccak256OfArray(uint256[])": "490ee1cb",
							"Kill()": "be26733c",
							"LinkableRingHashFunction(uint256,uint256[2],uint256[2])": "6fb015cc",
							"RingHashFunction(uint256,uint256[2])": "81b4ef31",
							"StartLinkableRing(uint256,uint256,uint256[2])": "38f3e171",
							"StartLinkableRing_NoHash(uint256,uint256[2])": "2d57f6e7",
							"StartRing(uint256,uint256)": "26e37ec5",
							"StartRing_NoHash(uint256)": "c8fc7ca8",
							"VerifyLSAG(uint256,uint256[],uint256[],uint256[])": "200fc39c",
							"VerifyLSAG_Compressed(uint256,uint256,uint256[],uint256[])": "ff7d69a8",
							"VerifyMLSAG(uint256,uint256[],uint256[],uint256[])": "c17065d0",
							"VerifyMLSAG_Compressed(uint256,uint256[],uint256[],uint256[])": "0813d72a",
							"VerifyMSAG(uint256,uint256,uint256[],uint256[])": "4f2ce9a3",
							"VerifyMSAG_Compressed(uint256,uint256,uint256[],uint256[])": "44fc0c93",
							"VerifySAG(uint256,uint256[],uint256[])": "c4e8e6a6",
							"VerifySAG_Compressed(uint256,uint256[],uint256[])": "066d1749",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifySAG_Compressed\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"I\",\"type\":\"uint256[]\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifyMLSAG_Compressed\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"I\",\"type\":\"uint256[]\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifyLSAG\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"alpha\",\"type\":\"uint256\"}],\"name\":\"StartRing\",\"outputs\":[{\"name\":\"ckp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"alpha\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[2]\"}],\"name\":\"StartLinkableRing_NoHash\",\"outputs\":[{\"name\":\"Lout\",\"type\":\"uint256[2]\"},{\"name\":\"Rout\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ck\",\"type\":\"uint256\"},{\"name\":\"sk\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[2]\"}],\"name\":\"CalculateRingSegment_NoHash\",\"outputs\":[{\"name\":\"Pout\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"alpha\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[2]\"}],\"name\":\"StartLinkableRing\",\"outputs\":[{\"name\":\"ckp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"m\",\"type\":\"uint256\"},{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifyMSAG_Compressed\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"Keccak256OfArray\",\"outputs\":[{\"name\":\"out\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"m\",\"type\":\"uint256\"},{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifyMSAG\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"alpha\",\"type\":\"uint256\"},{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"xk\",\"type\":\"uint256\"}],\"name\":\"CompleteRing\",\"outputs\":[{\"name\":\"s\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"left\",\"type\":\"uint256[2]\"},{\"name\":\"right\",\"type\":\"uint256[2]\"}],\"name\":\"LinkableRingHashFunction\",\"outputs\":[{\"name\":\"h\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"point\",\"type\":\"uint256[2]\"}],\"name\":\"RingHashFunction\",\"outputs\":[{\"name\":\"h\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ck\",\"type\":\"uint256\"},{\"name\":\"sk\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[2]\"},{\"name\":\"I\",\"type\":\"uint256[2]\"}],\"name\":\"CalculateLinkableRingSegment_NoHash\",\"outputs\":[{\"name\":\"Lout\",\"type\":\"uint256[2]\"},{\"name\":\"Rout\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ecMathAddr\",\"type\":\"address\"}],\"name\":\"ECMath_ChangeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pk\",\"type\":\"uint256\"}],\"name\":\"CalculateKeyImageFromPrivKey\",\"outputs\":[{\"name\":\"I\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"I\",\"type\":\"uint256[]\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifyMLSAG\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifySAG\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"alpha\",\"type\":\"uint256\"}],\"name\":\"StartRing_NoHash\",\"outputs\":[{\"name\":\"Pout\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECMath_GetAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"ck\",\"type\":\"uint256\"},{\"name\":\"sk\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[2]\"}],\"name\":\"CalculateRingSegment\",\"outputs\":[{\"name\":\"ckp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECMath_GetCodeSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"ck\",\"type\":\"uint256\"},{\"name\":\"sk\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[2]\"},{\"name\":\"I\",\"type\":\"uint256[2]\"}],\"name\":\"CalculateLinkableRingSegment\",\"outputs\":[{\"name\":\"ckp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"I\",\"type\":\"uint256\"},{\"name\":\"P\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"uint256[]\"}],\"name\":\"VerifyLSAG_Compressed\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ecMathAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"ContractAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"marker\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"DebugEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"marker\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"DebugEvent2\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"MLSAGVerify.sol\":\"MLSAGVerify\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Debuggable.sol\":{\"keccak256\":\"0x207a3fb9b2578336e6007e2c7551bc43a8b79ce2fb901cc5c0c7851c15831ae5\",\"urls\":[\"bzzr://fb95cdac2ec767f634bf8f6462beb7c1700c16c2e21a39a3a3e87a1395bf6015\"]},\"ECMathInterface.sol\":{\"keccak256\":\"0x63a7629955422f997358b1c2fdd52d2404d9bdba9ee4704576a305126938e95f\",\"urls\":[\"bzzr://57dff9b77afe326b6fa0260f25843c4560eb869980ccc04a8d8e89beacc760f2\"]},\"MLSAGVerify.sol\":{\"keccak256\":\"0xe20237827ecfd715fac6d488e32f9d6031b7650ee36dbf216aec74b9713cf4f3\",\"urls\":[\"bzzr://8f6f9c5670a784953918eea85746543e395cef7ca9d09b362d309b856d57f2a3\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "MLSAGVerify.sol:27:24: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return uint256(keccak256(msgHash, point[0], point[1])) % ecMath.GetNCurve();\r\n                       ^------------------------------------^\n",
				"message": "This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1244,
					"file": "MLSAGVerify.sol",
					"start": 1206
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "MLSAGVerify.sol:73:24: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return uint256(keccak256(msgHash, left[0], left[1], right[0], right[1])) % ecMath.GetNCurve();\r\n                       ^------------------------------------------------------^\n",
				"message": "This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2879,
					"file": "MLSAGVerify.sol",
					"start": 2823
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Debuggable.sol": {
				"ast": {
					"absolutePath": "Debuggable.sol",
					"exportedSymbols": {
						"Debuggable": [
							55
						]
					},
					"id": 56,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "Debuggable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 55,
									"src": "73:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "73:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "127:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "138:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "146:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "146:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "138:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "138:18:0"
											}
										]
									},
									"documentation": null,
									"id": 12,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "127:0:0"
									},
									"scope": 55,
									"src": "106:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "195:84:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 14,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2450,
																		"src": "212:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "212:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 16,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "226:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "212:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 18,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "211:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 19,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "237:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "246:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 22,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "236:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "211:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 27,
												"nodeType": "IfStatement",
												"src": "206:53:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 24,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2455,
																2456
															],
															"referencedDeclaration": 2455,
															"src": "251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "251:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 26,
													"nodeType": "ExpressionStatement",
													"src": "251:8:0"
												}
											},
											{
												"id": 28,
												"nodeType": "PlaceholderStatement",
												"src": "270:1:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"name": "ownerOnly",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:0:0"
									},
									"src": "176:103:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "321:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "342:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "342:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 35,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "329:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "329:24:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 33,
											"modifierName": {
												"argumentTypes": null,
												"id": 32,
												"name": "ownerOnly",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 30,
												"src": "311:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "311:9:0"
										}
									],
									"name": "Kill",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:0"
									},
									"scope": 55,
									"src": "288:70:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 47,
									"name": "DebugEvent",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"name": "marker",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "381:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 42,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "396:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "380:29:0"
									},
									"src": "364:46:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "DebugEvent2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"name": "marker",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "431:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 50,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 51,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "446:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "430:31:0"
									},
									"src": "413:49:0"
								}
							],
							"scope": 56,
							"src": "28:437:0"
						}
					],
					"src": "0:465:0"
				},
				"id": 0
			},
			"ECMathInterface.sol": {
				"ast": {
					"absolutePath": "ECMathInterface.sol",
					"exportedSymbols": {
						"ECMath": [
							413
						],
						"ECMathInterface": [
							491
						]
					},
					"id": 492,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 57,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "Debuggable.sol",
							"file": "./Debuggable.sol",
							"id": 58,
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 56,
							"src": "28:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 413,
							"linearizedBaseContracts": [
								413
							],
							"name": "ECMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 65,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetG1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "216:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 60,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "216:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 62,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "224:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "216:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "215:12:1"
									},
									"scope": 413,
									"src": "178:50:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 72,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "268:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 67,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "268:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "276:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "268:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "267:12:1"
									},
									"scope": 413,
									"src": "231:49:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 79,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetInfinity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "327:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 74,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "327:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 76,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "335:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "327:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "326:12:1"
									},
									"scope": 413,
									"src": "283:56:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 84,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetNCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "384:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:9:1"
									},
									"scope": 413,
									"src": "342:51:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 89,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetPCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "438:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "437:9:1"
									},
									"scope": 413,
									"src": "396:51:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 100,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetGiHi",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "N",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "467:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:11:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "503:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 93,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "503:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 94,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "503:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "514:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 96,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "514:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 97,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "514:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:22:1"
									},
									"scope": 413,
									"src": "450:75:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 105,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetGiHiLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "574:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "573:9:1"
									},
									"scope": 413,
									"src": "528:55:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 116,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "Negate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "627:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 106,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "627:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 108,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "635:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "627:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "626:15:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "p2",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "663:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 113,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "671:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "663:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:15:1"
									},
									"scope": 413,
									"src": "611:67:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 129,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "Equals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "697:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "697:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 119,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "705:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "697:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"name": "p2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "712:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 121,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "712:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 123,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "720:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "712:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "696:30:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "748:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:6:1"
									},
									"scope": 413,
									"src": "681:73:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 144,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "Add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "770:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 130,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "770:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 132,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "778:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "770:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 134,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "785:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 136,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "793:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "785:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:30:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "p2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "825:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 139,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 141,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "833:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "825:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "824:15:1"
									},
									"scope": 413,
									"src": "757:83:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 159,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "Subtract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "861:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 145,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "861:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 147,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "869:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "861:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "876:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "876:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 151,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "884:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "876:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "860:30:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "p2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "916:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 154,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 156,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "916:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "915:15:1"
									},
									"scope": 413,
									"src": "843:88:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 172,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "Multiply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "952:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "952:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 162,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "960:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "952:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "967:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:26:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1003:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 167,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 169,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1011:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1003:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1002:15:1"
									},
									"scope": 413,
									"src": "934:84:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 181,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "MultiplyG1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1067:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:11:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 176,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1103:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 178,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1111:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1103:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1102:15:1"
									},
									"scope": 413,
									"src": "1047:71:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 190,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "MultiplyH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1140:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1139:11:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1176:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 185,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1176:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 187,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1184:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1176:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1175:15:1"
									},
									"scope": 413,
									"src": "1121:70:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 207,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "AddMultiply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"name": "p_add",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1218:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 191,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1218:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 193,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1226:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1218:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"name": "p_mul",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1236:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 195,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1236:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 197,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1244:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1236:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1254:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1217:47:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1290:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 202,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1290:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 204,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1298:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1290:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:15:1"
									},
									"scope": 413,
									"src": "1197:108:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 220,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "AddMultiplyG1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "p_add",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1362:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 208,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1362:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 210,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1370:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1362:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1380:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1361:29:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1416:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1416:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1424:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1416:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1415:15:1"
									},
									"scope": 413,
									"src": "1339:92:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 233,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "AddMultiplyH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "p_add",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1487:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1487:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 223,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1495:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1487:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1505:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1486:29:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1541:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 228,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1541:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1549:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1541:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1540:15:1"
									},
									"scope": 413,
									"src": "1465:91:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 244,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CommitG1H",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "s_G1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1608:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "s_H",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1622:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1607:27:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "p0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1660:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 239,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 241,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1668:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1660:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1659:15:1"
									},
									"scope": 413,
									"src": "1589:86:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 255,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VectorScale",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "X",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1749:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 245,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1749:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 246,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1749:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1762:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1748:24:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"name": "Z",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1798:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 251,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 252,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1798:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1797:13:1"
									},
									"scope": 413,
									"src": "1728:83:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 267,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VectorAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"name": "X",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1833:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1833:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 257,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1833:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "Y",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1846:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1846:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 260,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1846:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1832:26:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "Z",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1884:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 263,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1884:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 264,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1884:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1883:13:1"
									},
									"scope": 413,
									"src": "1814:83:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 279,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VectorMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"name": "X",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1919:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 268,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1919:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 269,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1919:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1932:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 271,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1932:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 272,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1932:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1918:26:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"name": "Z",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1970:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 275,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1970:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 276,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1970:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1969:13:1"
									},
									"scope": 413,
									"src": "1900:83:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 296,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "MultiExp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2050:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 280,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 281,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2050:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2063:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 283,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2063:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 284,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2063:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2076:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"name": "end",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2091:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2049:54:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "Pout",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2129:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 293,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2137:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2129:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:17:1"
									},
									"scope": 413,
									"src": "2032:114:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 317,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "AddMultiExp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "Pin",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2219:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 297,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2219:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 299,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2227:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2219:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2235:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 301,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2235:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 302,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2235:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2248:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 304,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2248:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2248:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2261:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"name": "end",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2276:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2218:70:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "Pout",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2314:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 312,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2314:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 314,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2322:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2314:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2313:17:1"
									},
									"scope": 413,
									"src": "2198:133:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 340,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CommitAB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"name": "X",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2483:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2483:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2483:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"name": "Y",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2496:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2496:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 322,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2496:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2509:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2522:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 327,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2522:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 328,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2522:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2482:52:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"name": "px",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 331,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2560:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 333,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2568:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2560:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"name": "py",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2575:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 335,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2575:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 337,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2575:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2559:30:1"
									},
									"scope": 413,
									"src": "2465:125:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 349,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CompressPoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"name": "Pin",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2672:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 341,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 343,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2680:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2672:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2671:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"name": "Pout",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2709:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2708:14:1"
									},
									"scope": 413,
									"src": "2649:74:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 358,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "EvaluateCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2749:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2748:11:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2785:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"name": "onCurve",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2796:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2796:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2784:25:1"
									},
									"scope": 413,
									"src": "2726:84:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 367,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "ExpandPoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"name": "Pin",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2834:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2833:13:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "Pout",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2872:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 362,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2872:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 364,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2880:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2872:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2871:17:1"
									},
									"scope": 413,
									"src": "2813:76:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 376,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"name": "PubKey",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2937:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 368,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2937:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 370,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2945:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2937:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2936:19:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2977:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2976:14:1"
									},
									"scope": 413,
									"src": "2917:74:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 385,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetPublicKeyFromPrivateKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "privatekey",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3037:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3036:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "PubKey",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3082:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 380,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3082:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 382,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3090:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3082:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3081:19:1"
									},
									"scope": 413,
									"src": "3001:100:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 392,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "GetAddressFromPrivateKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "privatekey",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3145:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3144:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3190:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3189:14:1"
									},
									"scope": 413,
									"src": "3111:93:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 401,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "HashOfPoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"name": "point",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3264:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 393,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3264:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 395,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3272:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3264:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3263:18:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3303:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3302:11:1"
									},
									"scope": 413,
									"src": "3243:71:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 412,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "HashToPoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "p",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3398:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3398:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 404,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3406:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3398:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3397:14:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3437:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 407,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3437:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 409,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3445:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3437:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3436:14:1"
									},
									"scope": 413,
									"src": "3377:74:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 492,
							"src": "135:3319:1"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 414,
										"name": "Debuggable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 55,
										"src": "3618:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Debuggable_$55",
											"typeString": "contract Debuggable"
										}
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "3618:10:1"
								}
							],
							"contractDependencies": [
								55
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491,
								55
							],
							"name": "ECMathInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 417,
									"name": "ecMath",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "3665:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ECMath_$413",
										"typeString": "contract ECMath"
									},
									"typeName": {
										"contractScope": null,
										"id": 416,
										"name": "ECMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 413,
										"src": "3665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ECMath_$413",
											"typeString": "contract ECMath"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 423,
									"name": "ContractAddressChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3715:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"name": "_new",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3729:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3714:28:1"
									},
									"src": "3685:58:1"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "3853:35:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 429,
															"name": "ecMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3876:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ECMath_$413",
																"typeString": "contract ECMath"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ECMath_$413",
																"typeString": "contract ECMath"
															}
														],
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3868:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3868:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 427,
												"id": 431,
												"nodeType": "Return",
												"src": "3861:22:1"
											}
										]
									},
									"documentation": null,
									"id": 433,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "ECMath_GetAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3816:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3844:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3843:9:1"
									},
									"scope": 491,
									"src": "3790:98:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3955:148:1",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"name": "code_size",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "3963:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 438,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3963:14:1"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"name": "addr",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "3982:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 441,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 443,
														"name": "ECMath_GetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "3997:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3982:34:1"
											},
											{
												"externalReferences": [
													{
														"code_size": {
															"declaration": 439,
															"isOffset": false,
															"isSlot": false,
															"src": "4039:9:1",
															"valueSize": 1
														}
													},
													{
														"addr": {
															"declaration": 442,
															"isOffset": false,
															"isSlot": false,
															"src": "4064:4:1",
															"valueSize": 1
														}
													}
												],
												"id": 446,
												"nodeType": "InlineAssembly",
												"operations": "{\n    code_size := extcodesize(addr)\n}",
												"src": "4021:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 447,
													"name": "code_size",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 439,
													"src": "4089:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 437,
												"id": 448,
												"nodeType": "Return",
												"src": "4082:16:1"
											}
										]
									},
									"documentation": null,
									"id": 450,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "ECMath_GetCodeSize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3921:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3949:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3949:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3948:6:1"
									},
									"scope": 491,
									"src": "3894:209:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4176:218:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 457,
														"name": "ecMath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "4308:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ECMath_$413",
															"typeString": "contract ECMath"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 459,
																"name": "ecMathAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "4324:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 458,
															"name": "ECMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4317:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECMath_$413_$",
																"typeString": "type(contract ECMath)"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4317:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ECMath_$413",
															"typeString": "contract ECMath"
														}
													},
													"src": "4308:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ECMath_$413",
														"typeString": "contract ECMath"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "4308:27:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "45434d617468",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4368:8:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6c9d1fd16292407d61997a7032b3fa39bc2b28c8d8fdb47366e6df5875e4094",
																"typeString": "literal_string \"ECMath\""
															},
															"value": "ECMath"
														},
														{
															"argumentTypes": null,
															"id": 465,
															"name": "ecMathAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "4378:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c6c9d1fd16292407d61997a7032b3fa39bc2b28c8d8fdb47366e6df5875e4094",
																"typeString": "literal_string \"ECMath\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 463,
														"name": "ContractAddressChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4345:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4345:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "EmitStatement",
												"src": "4340:49:1"
											}
										]
									},
									"documentation": null,
									"id": 469,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 455,
											"modifierName": {
												"argumentTypes": null,
												"id": 454,
												"name": "ownerOnly",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 30,
												"src": "4166:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4166:9:1"
										}
									],
									"name": "ECMath_ChangeAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"name": "ecMathAddr",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4139:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4138:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4176:0:1"
									},
									"scope": 491,
									"src": "4109:285:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "4423:55:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 472,
																	"name": "ECMath_GetCodeSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "4439:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4439:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4462:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4439:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2453,
															2454
														],
														"referencedDeclaration": 2453,
														"src": "4431:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "4431:33:1"
											},
											{
												"id": 478,
												"nodeType": "PlaceholderStatement",
												"src": "4472:1:1"
											}
										]
									},
									"documentation": null,
									"id": 480,
									"name": "requireECMath",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4423:0:1"
									},
									"src": "4400:78:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "4588:45:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 486,
															"name": "ecMathAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4617:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 485,
														"name": "ECMath_ChangeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "4596:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4596:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "4596:32:1"
											}
										]
									},
									"documentation": null,
									"id": 490,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "ecMathAddr",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4561:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4560:20:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4588:0:1"
									},
									"scope": 491,
									"src": "4549:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 492,
							"src": "3590:1046:1"
						}
					],
					"src": "0:4636:1"
				},
				"id": 1
			},
			"MLSAGVerify.sol": {
				"ast": {
					"absolutePath": "MLSAGVerify.sol",
					"exportedSymbols": {
						"MLSAGVerify": [
							2435
						]
					},
					"id": 2436,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "Debuggable.sol",
							"file": "./Debuggable.sol",
							"id": 494,
							"nodeType": "ImportDirective",
							"scope": 2436,
							"sourceUnit": 56,
							"src": "28:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ECMathInterface.sol",
							"file": "./ECMathInterface.sol",
							"id": 495,
							"nodeType": "ImportDirective",
							"scope": 2436,
							"sourceUnit": 492,
							"src": "56:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 496,
										"name": "ECMathInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 491,
										"src": "115:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ECMathInterface_$491",
											"typeString": "contract ECMathInterface"
										}
									},
									"id": 497,
									"nodeType": "InheritanceSpecifier",
									"src": "115:15:2"
								}
							],
							"contractDependencies": [
								55,
								491
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2435,
							"linearizedBaseContracts": [
								2435,
								491,
								55
							],
							"name": "MLSAGVerify",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "267:2:2",
										"statements": []
									},
									"documentation": null,
									"id": 506,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 502,
													"name": "ecMathAddr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 499,
													"src": "248:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 503,
											"modifierName": {
												"argumentTypes": null,
												"id": 501,
												"name": "ECMathInterface",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 491,
												"src": "232:15:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ECMathInterface_$491_$",
													"typeString": "type(contract ECMathInterface)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "232:27:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "ecMathAddr",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "212:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:20:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:0:2"
									},
									"scope": 2435,
									"src": "200:69:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"canonicalName": "MLSAGVerify.Variables",
									"id": 531,
									"members": [
										{
											"constant": false,
											"id": 508,
											"name": "m",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "349:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 507,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "349:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 510,
											"name": "n",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "412:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 509,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 512,
											"name": "i",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "481:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 511,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "481:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 514,
											"name": "j",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "556:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 513,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "556:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 516,
											"name": "ck",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "631:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 518,
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "702:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 517,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "702:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 522,
											"name": "point1",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "789:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											},
											"typeName": {
												"baseType": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"length": {
													"argumentTypes": null,
													"hexValue": "32",
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "797:1:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "789:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
													"typeString": "uint256[2]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 526,
											"name": "point2",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "866:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											},
											"typeName": {
												"baseType": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"length": {
													"argumentTypes": null,
													"hexValue": "32",
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "874:1:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "866:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
													"typeString": "uint256[2]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 530,
											"name": "keyImage",
											"nodeType": "VariableDeclaration",
											"scope": 531,
											"src": "943:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											},
											"typeName": {
												"baseType": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"length": {
													"argumentTypes": null,
													"hexValue": "32",
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "943:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
													"typeString": "uint256[2]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Variables",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "321:695:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "1180:94:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 544,
																		"name": "msgHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "1216:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 545,
																			"name": "point",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "1225:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 547,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1231:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1225:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 548,
																			"name": "point",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "1235:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 550,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1241:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1235:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "1206:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																		"typeString": "function () pure returns (bytes32)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1206:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1198:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1198:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 553,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1248:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "GetNCurve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 84,
															"src": "1248:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
																"typeString": "function () pure external returns (uint256)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1248:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1198:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 557,
												"nodeType": "Return",
												"src": "1191:75:2"
											}
										]
									},
									"documentation": null,
									"id": 559,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "RingHashFunction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1099:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"name": "point",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1116:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 534,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1116:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1124:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1116:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1098:35:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1164:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1163:11:2"
									},
									"scope": 2435,
									"src": "1073:201:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1383:64:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 568,
														"name": "Pout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "1394:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 571,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "1417:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetG1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 65,
																	"src": "1417:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "function () view external returns (uint256[2] memory)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1417:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 574,
																"name": "alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "1433:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 569,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1401:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "1401:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1401:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "1394:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1394:45:2"
											}
										]
									},
									"documentation": null,
									"id": 579,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "StartRing_NoHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "alpha",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1312:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1311:15:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "Pout",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1361:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 563,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1361:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 565,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1369:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1361:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1360:17:2"
									},
									"scope": 2435,
									"src": "1286:161:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "1562:75:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 588,
														"name": "ckp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "1573:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 590,
																"name": "msgHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1596:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 592,
																		"name": "alpha",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "1622:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "StartRing_NoHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "1605:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "function (uint256) view returns (uint256[2] memory)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1605:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 589,
															"name": "RingHashFunction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "1579:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256[2] memory) view returns (uint256)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1579:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1573:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "1573:56:2"
											}
										]
									},
									"documentation": null,
									"id": 598,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "StartRing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1478:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"name": "alpha",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1495:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1477:32:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"name": "ckp",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1544:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1543:13:2"
									},
									"scope": 2435,
									"src": "1459:178:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "1780:174:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "1791:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 615,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1791:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 616,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1799:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "1791:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 619,
														"name": "Pout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1824:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 622,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "1847:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetG1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 65,
																	"src": "1847:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "function () view external returns (uint256[2] memory)"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1847:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 625,
																"name": "sk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "1863:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 620,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1831:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "1831:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1831:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "1824:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "1824:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 629,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "1877:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 632,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "1900:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 633,
																"name": "ck",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "1903:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 630,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1884:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "1884:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1884:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "1877:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "1877:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 637,
														"name": "Pout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1917:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 640,
																"name": "Pout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1935:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 641,
																"name": "temp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "1941:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 638,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1924:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "1924:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256[2] memory) view external returns (uint256[2] memory)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1924:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "1917:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1917:29:2"
											}
										]
									},
									"documentation": null,
									"id": 646,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CalculateRingSegment_NoHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"name": "ck",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1686:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"name": "sk",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1698:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1710:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1710:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 605,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1718:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1710:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1685:38:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"name": "Pout",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1758:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1758:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 610,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1766:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "1758:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1757:17:2"
									},
									"scope": 2435,
									"src": "1649:305:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "2103:145:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "2114:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 663,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2114:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 664,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2122:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "2114:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2114:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 667,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2147:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 669,
																"name": "ck",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "2182:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 670,
																"name": "sk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2186:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 671,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "2190:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 668,
															"name": "CalculateRingSegment_NoHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "2154:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256,uint256,uint256[2] memory) view returns (uint256[2] memory)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2154:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "2147:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2147:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 675,
														"name": "ckp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "2203:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 677,
																"name": "msgHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "2226:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 678,
																"name": "temp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "2235:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 676,
															"name": "RingHashFunction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2209:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256[2] memory) view returns (uint256)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2209:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2203:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "2203:37:2"
											}
										]
									},
									"documentation": null,
									"id": 683,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CalculateRingSegment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"name": "ck",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2013:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"name": "sk",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2037:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 653,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2037:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 655,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2037:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1995:55:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"name": "ckp",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2085:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2084:13:2"
									},
									"scope": 2435,
									"src": "1966:282:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "2468:144:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 694,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "2479:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 696,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2490:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 697,
																"name": "xk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "2493:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 698,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2497:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetNCurve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 84,
																	"src": "2497:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure external returns (uint256)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2497:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 695,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "2483:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2483:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2479:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "2479:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 704,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "2527:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 705,
																	"name": "ecMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "2531:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ECMath_$413",
																		"typeString": "contract ECMath"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "GetNCurve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 84,
																"src": "2531:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
																	"typeString": "function () pure external returns (uint256)"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 708,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "2552:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2531:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2527:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "2527:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 712,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "2564:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 714,
																"name": "alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2575:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 715,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "2582:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 716,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2585:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetNCurve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 84,
																	"src": "2585:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure external returns (uint256)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2585:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 713,
															"name": "addmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2438,
															"src": "2568:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2568:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2564:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "2564:40:2"
											}
										]
									},
									"documentation": null,
									"id": 723,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CompleteRing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "alpha",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2384:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2399:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"name": "xk",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2410:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2410:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2383:38:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2452:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2451:11:2"
									},
									"scope": 2435,
									"src": "2362:250:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "2797:112:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 740,
																		"name": "msgHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "2833:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 741,
																			"name": "left",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "2842:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 743,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2847:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2842:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 744,
																			"name": "left",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "2851:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 746,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2856:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2851:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 747,
																			"name": "right",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 733,
																			"src": "2860:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 749,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2866:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2860:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 750,
																			"name": "right",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 733,
																			"src": "2870:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2876:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2870:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 739,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "2823:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																		"typeString": "function () pure returns (bytes32)"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2815:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2815:65:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 755,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2883:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "GetNCurve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 84,
															"src": "2883:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
																"typeString": "function () pure external returns (uint256)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2883:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2815:86:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 737,
												"id": 759,
												"nodeType": "Return",
												"src": "2808:93:2"
											}
										]
									},
									"documentation": null,
									"id": 761,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "LinkableRingHashFunction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2699:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"name": "left",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2716:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 726,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2716:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 728,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2724:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2716:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"name": "right",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2733:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 730,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2733:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 732,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2741:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2733:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2698:52:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2781:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2780:11:2"
									},
									"scope": 2435,
									"src": "2665:244:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "3024:198:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "3035:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 772,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3035:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 773,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3043:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "3035:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3035:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3068:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 779,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "3091:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetG1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 65,
																	"src": "3091:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "function () view external returns (uint256[2] memory)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3091:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 782,
																"name": "pk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "3107:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 777,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3075:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "3075:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3075:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3068:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3068:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 786,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3121:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 789,
																"name": "temp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3147:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 787,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3128:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "HashToPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "3128:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory) view external returns (uint256[2] memory)"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3128:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3121:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "3121:31:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 793,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3163:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 796,
																"name": "temp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3186:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 797,
																"name": "pk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "3192:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 794,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3170:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "3170:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3170:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3163:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "3163:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 801,
														"name": "I",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 802,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3210:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3206:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "3206:8:2"
											}
										]
									},
									"documentation": null,
									"id": 806,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CalculateKeyImageFromPrivKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"name": "pk",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2959:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2958:12:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3005:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 765,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3005:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 767,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3013:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3005:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3004:14:2"
									},
									"scope": 2435,
									"src": "2921:301:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "3370:159:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 823,
														"name": "Lout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "3381:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 826,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "3404:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetG1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 65,
																	"src": "3404:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "function () view external returns (uint256[2] memory)"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3404:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 829,
																"name": "alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "3420:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 824,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3388:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "3388:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3388:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3381:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "3381:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 833,
														"name": "Rout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3447:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 836,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "3473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 834,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3454:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "HashToPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "3454:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory) view external returns (uint256[2] memory)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3454:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3447:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "3447:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 840,
														"name": "Rout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3486:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 843,
																"name": "Rout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "3509:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 844,
																"name": "alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "3515:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 841,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3493:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "3493:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3493:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "3486:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "3486:35:2"
											}
										]
									},
									"documentation": null,
									"id": 849,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "StartLinkableRing_NoHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"name": "alpha",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3268:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3283:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 809,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3283:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 811,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3291:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3283:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3267:29:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"name": "Lout",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3331:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 814,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3331:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 816,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3339:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3331:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"name": "Rout",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3348:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 818,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3348:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 820,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3356:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3348:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3330:34:2"
									},
									"scope": 2435,
									"src": "3234:295:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "3666:199:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"name": "left",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3677:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 864,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3677:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 865,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3685:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "3677:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3677:22:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"name": "right",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3710:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 870,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3710:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 871,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3718:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "3710:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3710:23:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 874,
																"name": "left",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "3745:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 875,
																"name": "right",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3751:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"id": 876,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3744:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "tuple(uint256[2] memory,uint256[2] memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 878,
																"name": "alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "3785:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 879,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3792:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 877,
															"name": "StartLinkableRing_NoHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3760:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256,uint256[2] memory) view returns (uint256[2] memory,uint256[2] memory)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3760:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "tuple(uint256[2] memory,uint256[2] memory)"
														}
													},
													"src": "3744:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "3744:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 883,
														"name": "ckp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3805:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 885,
																"name": "msgHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "3836:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 886,
																"name": "left",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "3845:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 887,
																"name": "right",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3851:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 884,
															"name": "LinkableRingHashFunction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "3811:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256[2] memory,uint256[2] memory) view returns (uint256)"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3811:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3805:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "3805:52:2"
											}
										]
									},
									"documentation": null,
									"id": 892,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "StartLinkableRing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "3568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"name": "alpha",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "3585:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "3600:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 854,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3600:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 856,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3608:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3600:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3567:46:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"name": "ckp",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "3648:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3647:13:2"
									},
									"scope": 2435,
									"src": "3541:324:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4047:346:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "4058:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 917,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4058:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 918,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4066:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "4058:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4058:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 921,
														"name": "Lout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "4091:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 924,
																		"name": "ecMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "4114:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ECMath_$413",
																			"typeString": "contract ECMath"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "GetG1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 65,
																	"src": "4114:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "function () view external returns (uint256[2] memory)"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4114:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 927,
																"name": "sk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "4130:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 922,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4098:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "4098:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4098:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4091:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "4091:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 931,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4144:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 934,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "4167:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 935,
																"name": "ck",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "4170:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 932,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4151:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "4151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4151:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4144:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "4144:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 939,
														"name": "Lout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "4184:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 942,
																"name": "Lout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4202:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 943,
																"name": "temp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "4208:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 940,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4191:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "4191:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256[2] memory) view external returns (uint256[2] memory)"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4191:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4184:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "4184:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 947,
														"name": "Rout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "4234:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 950,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "4260:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 948,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4241:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "HashToPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "4241:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory) view external returns (uint256[2] memory)"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4241:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4234:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "4234:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 954,
														"name": "Rout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "4273:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 957,
																"name": "Rout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "4296:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 958,
																"name": "sk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "4302:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 955,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4280:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "4280:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4280:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4273:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "4273:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 962,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4316:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 965,
																"name": "I",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "4339:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 966,
																"name": "ck",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "4342:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 963,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4323:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Multiply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "4323:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4323:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4316:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "4316:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 970,
														"name": "Rout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "4356:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 973,
																"name": "Rout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "4374:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 974,
																"name": "temp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "4380:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 971,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "4363:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "4363:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256[2] memory,uint256[2] memory) view external returns (uint256[2] memory)"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4363:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "4356:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "4356:29:2"
											}
										]
									},
									"documentation": null,
									"id": 979,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CalculateLinkableRingSegment_NoHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"name": "ck",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3922:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"name": "sk",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3934:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3946:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 897,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3946:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3954:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3946:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3960:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3960:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 903,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3968:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "3960:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3921:52:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"name": "Lout",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4008:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 906,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4008:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 908,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4016:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "4008:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"name": "Rout",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 910,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4025:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 912,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4033:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "4025:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4007:34:2"
									},
									"scope": 2435,
									"src": "3877:516:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "4564:214:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"name": "left",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4575:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1000,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4575:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1001,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4583:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "4575:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4575:22:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"name": "right",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4608:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1006,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4608:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1007,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4616:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "4608:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4608:23:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 1010,
																"name": "left",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "4643:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1011,
																"name": "right",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "4649:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"id": 1012,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4642:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "tuple(uint256[2] memory,uint256[2] memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1014,
																"name": "ck",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "4694:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1015,
																"name": "sk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "4698:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1016,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "4702:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1017,
																"name": "I",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "4705:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 1013,
															"name": "CalculateLinkableRingSegment_NoHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4658:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256,uint256,uint256[2] memory,uint256[2] memory) view returns (uint256[2] memory,uint256[2] memory)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "tuple(uint256[2] memory,uint256[2] memory)"
														}
													},
													"src": "4642:65:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "4642:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1021,
														"name": "ckp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "4718:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1023,
																"name": "msgHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "4749:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1024,
																"name": "left",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "4758:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1025,
																"name": "right",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "4764:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 1022,
															"name": "LinkableRingHashFunction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "4724:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256[2] memory,uint256[2] memory) view returns (uint256)"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4724:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4718:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "4718:52:2"
											}
										]
									},
									"documentation": null,
									"id": 1030,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "CalculateLinkableRingSegment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "4443:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"name": "ck",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "4460:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"name": "sk",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "4472:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "4484:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 986,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4484:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 988,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4492:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "4484:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "4498:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 990,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4498:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 992,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4506:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "4498:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4442:69:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"name": "ckp",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "4546:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4545:13:2"
									},
									"scope": 2435,
									"src": "4405:373:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "4923:372:2",
										"statements": [
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "4934:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1038,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4934:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1040,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "4948:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4948:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4934:26:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "4971:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
															"typeString": "uint256[1]"
														},
														"typeName": {
															"baseType": {
																"id": 1045,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4971:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1046,
															"length": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4979:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "1"
															},
															"nodeType": "ArrayTypeName",
															"src": "4971:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
																"typeString": "uint256[1]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1048,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4971:22:2"
											},
											{
												"externalReferences": [
													{
														"len": {
															"declaration": 1039,
															"isOffset": false,
															"isSlot": false,
															"src": "5121:3:2",
															"valueSize": 1
														}
													},
													{
														"temp": {
															"declaration": 1047,
															"isOffset": false,
															"isSlot": false,
															"src": "5219:4:2",
															"valueSize": 1
														}
													},
													{
														"array": {
															"declaration": 1033,
															"isOffset": false,
															"isSlot": false,
															"src": "5235:5:2",
															"valueSize": 1
														}
													}
												],
												"id": 1049,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let p := mload(0x40)\n    mstore(p, add(mul(len, 0x20), 0x20))\n    mstore(temp, keccak256(array, mload(p)))\n}",
												"src": "5051:226:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1050,
														"name": "out",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "5274:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1051,
															"name": "temp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "5280:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
																"typeString": "uint256[1] memory"
															}
														},
														"id": 1053,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5285:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5280:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5274:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "5274:13:2"
											}
										]
									},
									"documentation": null,
									"id": 1057,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "Keccak256OfArray",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"name": "array",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1031,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4858:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1032,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4858:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4857:17:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"name": "out",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4905:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4905:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4904:13:2"
									},
									"scope": 2435,
									"src": "4832:463:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "5748:611:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "5796:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
															"typeString": "struct MLSAGVerify.Variables"
														},
														"typeName": {
															"contractScope": null,
															"id": 1070,
															"name": "Variables",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 531,
															"src": "5796:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_storage_ptr",
																"typeString": "struct MLSAGVerify.Variables"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5796:18:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1073,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "5829:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5829:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5840:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "5829:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5845:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5829:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "5825:35:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5855:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1069,
													"id": 1080,
													"nodeType": "Return",
													"src": "5848:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1082,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "5871:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "n",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "5871:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1085,
																		"name": "P",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "5878:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5878:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5889:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5878:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1089,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5877:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5871:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "5871:20:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1092,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "5906:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5906:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1094,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "5927:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "n",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 510,
																	"src": "5927:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5931:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5927:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5926:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5906:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "5902:45:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5942:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1069,
													"id": 1101,
													"nodeType": "Return",
													"src": "5935:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1103,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "5968:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ck",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 516,
														"src": "5968:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1106,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "5975:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1108,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5985:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5975:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5968:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "5968:19:2"
											},
											{
												"body": {
													"id": 1171,
													"nodeType": "Block",
													"src": "6070:184:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1126,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "6086:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "6086:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"id": 1130,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6095:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6086:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1131,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "6099:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "6099:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"id": 1134,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6108:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6099:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1135,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6085:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1136,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1062,
																				"src": "6115:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1141,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6117:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1138,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1071,
																						"src": "6119:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1139,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "6119:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6117:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6115:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1142,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1062,
																				"src": "6125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1149,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 1143,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6127:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1144,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1071,
																							"src": "6129:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "i",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 512,
																						"src": "6129:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6127:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6133:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6127:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6125:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6114:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "6085:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "6085:51:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1153,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "6172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "6172:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1157,
																			"name": "msgHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "6200:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1158,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "6209:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "ck",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 516,
																			"src": "6209:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1160,
																				"name": "signature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1065,
																				"src": "6215:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1165,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1161,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1071,
																						"src": "6225:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1162,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "6225:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6229:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6225:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6215:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1166,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "6233:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "point1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 522,
																			"src": "6233:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		],
																		"id": 1156,
																		"name": "CalculateRingSegment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "6179:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256[2] memory) view returns (uint256)"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6179:63:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6172:70:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1170,
															"nodeType": "ExpressionStatement",
															"src": "6172:70:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1117,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "6052:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "i",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "6052:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1119,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "6058:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "n",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "6058:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6052:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1111,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "6043:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "6043:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6049:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6043:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1116,
													"nodeType": "ExpressionStatement",
													"src": "6043:7:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6063:5:2",
														"subExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1122,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "6063:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "6063:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1125,
													"nodeType": "ExpressionStatement",
													"src": "6063:5:2"
												},
												"nodeType": "ForStatement",
												"src": "6038:216:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1173,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "6319:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1174,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "6330:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "6330:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1176,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "6338:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1178,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6348:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6338:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6330:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1180,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6329:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6319:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "6319:32:2"
											}
										]
									},
									"documentation": null,
									"id": 1184,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifySAG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "5644:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "5661:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1060,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1061,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5661:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "5674:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1063,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1064,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5643:51:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "5729:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5729:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5728:14:2"
									},
									"scope": 2435,
									"src": "5625:734:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "6738:367:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "6749:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1199,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6749:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1200,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6757:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "6749:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6749:22:2"
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"name": "P_uncomp",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "6782:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1204,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6782:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1205,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "6782:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1210,
																	"name": "P",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "6824:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6824:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6833:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6824:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6810:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1207,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6814:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1208,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "6814:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6810:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6782:53:2"
											},
											{
												"body": {
													"id": 1258,
													"nodeType": "Block",
													"src": "6895:136:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1227,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "6910:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1230,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "6936:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1232,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1231,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "6938:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6936:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1228,
																			"name": "ecMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "6917:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ECMath_$413",
																				"typeString": "contract ECMath"
																			}
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "ExpandPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 367,
																		"src": "6917:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256) view external returns (uint256[2] memory)"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6917:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "6910:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "6910:31:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1236,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1206,
																		"src": "6956:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1240,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6965:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1238,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "6967:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6965:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6956:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1241,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "6972:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6977:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6972:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6956:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "6956:23:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1246,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1206,
																		"src": "6994:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1252,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7003:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1248,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "7005:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7003:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7007:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "7003:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6994:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1253,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "7012:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1255,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7017:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7012:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6994:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "6994:25:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1220,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "6876:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1221,
															"name": "P",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "6880:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6880:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6876:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"initializationExpression": {
													"assignments": [
														1217
													],
													"declarations": [
														{
															"constant": false,
															"id": 1217,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1267,
															"src": "6861:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1216,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6861:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1219,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6873:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6861:13:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6890:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 1224,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "6890:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1226,
													"nodeType": "ExpressionStatement",
													"src": "6890:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6856:175:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1261,
															"name": "msgHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "7068:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1262,
															"name": "P_uncomp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "7077:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1263,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "7087:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1260,
														"name": "VerifySAG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "7058:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256[] memory,uint256[] memory) view returns (bool)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7058:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1196,
												"id": 1265,
												"nodeType": "Return",
												"src": "7051:46:2"
											}
										]
									},
									"documentation": null,
									"id": 1267,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifySAG_Compressed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "6634:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "6651:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1187,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6651:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1188,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6651:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "6664:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1190,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6664:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1191,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6664:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6633:51:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "6719:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6719:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6718:14:2"
									},
									"scope": 2435,
									"src": "6604:501:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "7485:751:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "7533:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
															"typeString": "struct MLSAGVerify.Variables"
														},
														"typeName": {
															"contractScope": null,
															"id": 1283,
															"name": "Variables",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 531,
															"src": "7533:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_storage_ptr",
																"typeString": "struct MLSAGVerify.Variables"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1285,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7533:18:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1286,
															"name": "I",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "7566:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7566:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7578:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "7566:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "7562:31:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7588:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1282,
													"id": 1291,
													"nodeType": "Return",
													"src": "7581:12:2"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1293,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "7608:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7608:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7608:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7624:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7608:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "7604:35:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7634:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1282,
													"id": 1300,
													"nodeType": "Return",
													"src": "7627:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1302,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7650:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "n",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "7650:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1305,
																		"name": "P",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "7657:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7657:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7668:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7657:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1309,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7656:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7650:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "7650:20:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1312,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7685:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7685:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1314,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7706:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "n",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 510,
																	"src": "7706:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7710:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7706:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1318,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7705:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7685:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "7681:45:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7721:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1282,
													"id": 1321,
													"nodeType": "Return",
													"src": "7714:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1323,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7747:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ck",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 516,
														"src": "7747:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1326,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7754:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1328,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7764:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7754:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7747:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "7747:19:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1331,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7809:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "keyImage",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "7809:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 1335,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7820:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7809:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1336,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7824:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "keyImage",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "7824:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 1339,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7835:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7824:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1340,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7808:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1341,
																	"name": "I",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "7842:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1343,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7844:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7842:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1344,
																	"name": "I",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "7848:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1346,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7850:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1347,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7841:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "7808:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "7808:45:2"
											},
											{
												"body": {
													"id": 1412,
													"nodeType": "Block",
													"src": "7927:204:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1365,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "7943:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "7943:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"id": 1369,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7952:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7943:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1370,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "7956:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "7956:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"id": 1373,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7965:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7956:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1374,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "7942:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1375,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "7972:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1380,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7974:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1377,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1284,
																						"src": "7976:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1378,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "7976:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7974:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7972:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1381,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "7982:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1388,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 1382,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7984:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1383,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1284,
																							"src": "7986:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1384,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "i",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 512,
																						"src": "7986:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7984:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7990:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7984:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7982:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1389,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7971:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "7942:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1391,
															"nodeType": "ExpressionStatement",
															"src": "7942:51:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1392,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "8029:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "8029:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1396,
																			"name": "msgHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "8065:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1397,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "8074:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "ck",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 516,
																			"src": "8074:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1399,
																				"name": "signature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "8080:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1404,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1400,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1284,
																						"src": "8090:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1401,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "8090:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8094:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8090:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8080:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1405,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "8098:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "point1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 522,
																			"src": "8098:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1407,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "8108:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "keyImage",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 530,
																			"src": "8108:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		],
																		"id": 1395,
																		"name": "CalculateLinkableRingSegment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "8036:28:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256[2] memory,uint256[2] memory) view returns (uint256)"
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8036:83:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8029:90:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1411,
															"nodeType": "ExpressionStatement",
															"src": "8029:90:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1356,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7909:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "i",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "7909:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7915:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "n",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "7915:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7909:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1413,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1350,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "7900:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "7900:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7906:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7900:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1355,
													"nodeType": "ExpressionStatement",
													"src": "7900:7:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7920:5:2",
														"subExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1361,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "7920:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "7920:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ExpressionStatement",
													"src": "7920:5:2"
												},
												"nodeType": "ForStatement",
												"src": "7895:236:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1414,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "8196:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1415,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "8207:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "8207:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1417,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "8215:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1419,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8225:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8215:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8207:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8206:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8196:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "8196:32:2"
											}
										]
									},
									"documentation": null,
									"id": 1425,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifyLSAG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7368:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7385:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1270,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7385:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1271,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7385:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7398:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1273,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7398:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1274,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7398:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7411:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1276,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1277,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "7411:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7367:64:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7466:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7466:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7465:14:2"
									},
									"scope": 2435,
									"src": "7348:888:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "8666:552:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "8677:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1442,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8677:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1443,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8685:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "8677:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8677:22:2"
											},
											{
												"assignments": [
													1449
												],
												"declarations": [
													{
														"constant": false,
														"id": 1449,
														"name": "P_uncomp",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "8710:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1447,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8710:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1448,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8710:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1453,
																	"name": "P",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "8752:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8752:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8761:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8752:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8738:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1450,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8742:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1451,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8742:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8738:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8710:53:2"
											},
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"name": "I_uncomp",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "8774:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1460,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8774:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1461,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8774:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8816:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8802:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1463,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8806:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1464,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8802:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8774:44:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "8839:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8839:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1471,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8839:9:2"
											},
											{
												"body": {
													"id": 1514,
													"nodeType": "Block",
													"src": "8890:136:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1483,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "8905:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1486,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "8931:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1488,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1487,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1470,
																				"src": "8933:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8931:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1484,
																			"name": "ecMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "8912:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ECMath_$413",
																				"typeString": "contract ECMath"
																			}
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "ExpandPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 367,
																		"src": "8912:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256) view external returns (uint256[2] memory)"
																		}
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8912:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "8905:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 1491,
															"nodeType": "ExpressionStatement",
															"src": "8905:31:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1492,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "8951:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1496,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8960:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1494,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "8962:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8960:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8951:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1497,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "8967:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1499,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8972:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8967:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8951:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1501,
															"nodeType": "ExpressionStatement",
															"src": "8951:23:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1502,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "8989:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1508,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8998:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1504,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1470,
																				"src": "9000:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8998:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9002:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8989:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1509,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "9007:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1511,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9012:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9007:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8989:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1513,
															"nodeType": "ExpressionStatement",
															"src": "8989:25:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1476,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "8871:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1477,
															"name": "P",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "8875:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8875:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8871:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1515,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1472,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "8864:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8868:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8864:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1475,
													"nodeType": "ExpressionStatement",
													"src": "8864:5:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8885:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 1480,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "8885:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1482,
													"nodeType": "ExpressionStatement",
													"src": "8885:3:2"
												},
												"nodeType": "ForStatement",
												"src": "8859:167:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1516,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "9046:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1519,
																"name": "I",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "9072:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1517,
																"name": "ecMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "9053:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ECMath_$413",
																	"typeString": "contract ECMath"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ExpandPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "9053:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (uint256) view external returns (uint256[2] memory)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9053:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "9046:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "9046:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1523,
																	"name": "I_uncomp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "9086:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1525,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9095:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9086:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1526,
																	"name": "I_uncomp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "9099:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1528,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9108:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9099:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1529,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9085:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1530,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "9115:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 1532,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9120:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9115:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1533,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "9124:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 1535,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9129:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9124:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1536,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9114:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "9085:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "9085:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1540,
															"name": "msgHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "9171:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1541,
															"name": "I_uncomp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "9180:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1542,
															"name": "P_uncomp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "9190:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1543,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "9200:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1539,
														"name": "VerifyLSAG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "9160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256[] memory,uint256[] memory,uint256[] memory) view returns (bool)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9160:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1545,
												"nodeType": "Return",
												"src": "9153:57:2"
											}
										]
									},
									"documentation": null,
									"id": 1547,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifyLSAG_Compressed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8551:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8568:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8568:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8579:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1430,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8579:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1431,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8579:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8592:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1433,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8592:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1434,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8592:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8550:62:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8647:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8647:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8646:14:2"
									},
									"scope": 2435,
									"src": "8520:698:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "9806:1604:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1563,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 1847,
														"src": "9854:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
															"typeString": "struct MLSAGVerify.Variables"
														},
														"typeName": {
															"contractScope": null,
															"id": 1562,
															"name": "Variables",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 531,
															"src": "9854:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_storage_ptr",
																"typeString": "struct MLSAGVerify.Variables"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9854:18:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1565,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "9883:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "m",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "9883:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1568,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "9889:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9883:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "9883:7:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1571,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "9905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9905:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9917:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1574,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "9919:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "m",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "9919:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9917:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1577,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9905:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9927:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9905:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "9901:41:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9937:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1561,
													"id": 1582,
													"nodeType": "Return",
													"src": "9930:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1584,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "9963:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "n",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "9963:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1587,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "9969:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9969:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9981:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1590,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "9983:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "m",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "9983:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9981:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1593,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9980:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9969:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9963:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "9963:24:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1597,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "10002:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10002:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1599,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "10023:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "m",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "10023:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1601,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "10027:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "n",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 510,
																		"src": "10027:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10023:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10031:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10023:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1606,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10022:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10002:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "9998:49:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10042:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1561,
													"id": 1609,
													"nodeType": "Return",
													"src": "10035:12:2"
												}
											},
											{
												"assignments": [
													1614
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1847,
														"src": "10113:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1612,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10113:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1613,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "10113:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10148:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1619,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "10150:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "m",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 508,
																	"src": "10150:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10148:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10154:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10134:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1615,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10138:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1616,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "10138:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10134:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10113:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1626,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "10167:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1628,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10169:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10167:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1629,
														"name": "msgHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "10174:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10167:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "10167:14:2"
											},
											{
												"body": {
													"id": 1826,
													"nodeType": "Block",
													"src": "10234:931:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1647,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "10249:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "10249:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1650,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1557,
																		"src": "10256:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1652,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10266:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10256:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10249:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1654,
															"nodeType": "ExpressionStatement",
															"src": "10249:19:2"
														},
														{
															"body": {
																"id": 1731,
																"nodeType": "Block",
																"src": "10425:250:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1673,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "10444:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1675,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "index",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 518,
																				"src": "10444:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1676,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "10454:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1677,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "m",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 508,
																						"src": "10454:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1678,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "10458:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1679,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "j",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 514,
																						"src": "10458:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10454:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1681,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1563,
																						"src": "10464:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1682,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "10464:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10454:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10444:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1685,
																		"nodeType": "ExpressionStatement",
																		"src": "10444:23:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 1686,
																								"name": "v",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1563,
																								"src": "10487:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																									"typeString": "struct MLSAGVerify.Variables memory"
																								}
																							},
																							"id": 1689,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "point1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 522,
																							"src": "10487:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$2_memory",
																								"typeString": "uint256[2] memory"
																							}
																						},
																						"id": 1690,
																						"indexExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1688,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10496:1:2",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "10487:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 1691,
																								"name": "v",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1563,
																								"src": "10500:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																									"typeString": "struct MLSAGVerify.Variables memory"
																								}
																							},
																							"id": 1692,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "point1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 522,
																							"src": "10500:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$2_memory",
																								"typeString": "uint256[2] memory"
																							}
																						},
																						"id": 1694,
																						"indexExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1693,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10509:1:2",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "10500:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1695,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "10486:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1696,
																							"name": "P",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1554,
																							"src": "10516:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1701,
																						"indexExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1700,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "32",
																								"id": 1697,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "10518:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1698,
																									"name": "v",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1563,
																									"src": "10520:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																										"typeString": "struct MLSAGVerify.Variables memory"
																									}
																								},
																								"id": 1699,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "index",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 518,
																								"src": "10520:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10518:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10516:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1702,
																							"name": "P",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1554,
																							"src": "10530:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1709,
																						"indexExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1708,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1706,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "32",
																									"id": 1703,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "10532:1:2",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 1704,
																										"name": "v",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1563,
																										"src": "10534:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																											"typeString": "struct MLSAGVerify.Variables memory"
																										}
																									},
																									"id": 1705,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "index",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 518,
																									"src": "10534:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10532:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "31",
																								"id": 1707,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "10542:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "10532:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10530:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1710,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "10515:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "10486:59:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1712,
																		"nodeType": "ExpressionStatement",
																		"src": "10486:59:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1713,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "10585:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1715,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "ck",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 516,
																				"src": "10585:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1717,
																						"name": "msgHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1551,
																						"src": "10613:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1718,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "10622:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1719,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "ck",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 516,
																						"src": "10622:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1720,
																							"name": "signature",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1557,
																							"src": "10628:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1725,
																						"indexExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1721,
																									"name": "v",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1563,
																									"src": "10638:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																										"typeString": "struct MLSAGVerify.Variables memory"
																									}
																								},
																								"id": 1722,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "index",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 518,
																								"src": "10638:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "31",
																								"id": 1723,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "10646:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "10638:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10628:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1726,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "10650:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1727,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "point1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 522,
																						"src": "10650:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$2_memory",
																							"typeString": "uint256[2] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_array$_t_uint256_$2_memory",
																							"typeString": "uint256[2] memory"
																						}
																					],
																					"id": 1716,
																					"name": "CalculateRingSegment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 683,
																					"src": "10592:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256,uint256[2] memory) view returns (uint256)"
																					}
																				},
																				"id": 1728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10592:67:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10585:74:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1730,
																		"nodeType": "ExpressionStatement",
																		"src": "10585:74:2"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1661,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "10403:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "j",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "10403:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1663,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "10410:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1664,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "n",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 510,
																				"src": "10410:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10414:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "10410:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1667,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10409:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10403:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1732,
															"initializationExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1655,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "10394:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "j",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "10394:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10400:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10394:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1660,
																"nodeType": "ExpressionStatement",
																"src": "10394:7:2"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10418:5:2",
																	"subExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1669,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "10418:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "j",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "10418:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1672,
																"nodeType": "ExpressionStatement",
																"src": "10418:5:2"
															},
															"nodeType": "ForStatement",
															"src": "10389:286:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1733,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "10789:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "index",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "10789:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1736,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "10799:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "m",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 508,
																			"src": "10799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1738,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "10804:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1739,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "n",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 510,
																						"src": "10804:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1740,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10808:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "10804:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1742,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10803:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10799:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1744,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "10813:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "i",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 512,
																		"src": "10813:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10799:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10789:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "10789:27:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1749,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "10832:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1752,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "10832:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"id": 1753,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10841:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "10832:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1754,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "10845:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 1755,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "10845:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"id": 1757,
																			"indexExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "10845:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1758,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "10831:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1759,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "10861:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1764,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10863:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1761,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1563,
																						"src": "10865:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1762,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "index",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 518,
																					"src": "10865:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10863:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10861:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1765,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "10875:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1772,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 1766,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10877:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1767,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "10879:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 1768,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "index",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 518,
																						"src": "10879:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10877:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1770,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10887:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "10877:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10875:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1773,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10860:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "10831:59:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1775,
															"nodeType": "ExpressionStatement",
															"src": "10831:59:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1776,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "10906:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "point1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 522,
																	"src": "10906:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1780,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "10945:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "ck",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 516,
																			"src": "10945:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1782,
																				"name": "signature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "10951:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1787,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1783,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1563,
																						"src": "10961:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 1784,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "index",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 518,
																					"src": "10961:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10969:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "10961:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10951:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1788,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "10973:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "point1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 522,
																			"src": "10973:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		],
																		"id": 1779,
																		"name": "CalculateRingSegment_NoHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "10917:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256,uint256,uint256[2] memory) view returns (uint256[2] memory)"
																		}
																	},
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10917:65:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "10906:76:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 1792,
															"nodeType": "ExpressionStatement",
															"src": "10906:76:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1793,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "11056:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "index",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "11056:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1796,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "11066:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "i",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 512,
																			"src": "11066:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11070:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11066:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11072:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11066:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11056:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1803,
															"nodeType": "ExpressionStatement",
															"src": "11056:17:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1804,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "11088:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1807,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1805,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "11090:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "index",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "11090:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11088:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1808,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "11101:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "point1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 522,
																		"src": "11101:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1811,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11110:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11101:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11088:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1813,
															"nodeType": "ExpressionStatement",
															"src": "11088:24:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1814,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "11127:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1819,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1815,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "11129:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "index",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 518,
																			"src": "11129:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11137:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11129:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11127:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1820,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "11142:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "point1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 522,
																		"src": "11142:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1823,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11151:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11127:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1825,
															"nodeType": "ExpressionStatement",
															"src": "11127:26:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1638,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "10216:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "i",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "10216:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1640,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "10222:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "m",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "10222:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10216:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1827,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1632,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "10207:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "10207:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10213:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10207:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ExpressionStatement",
													"src": "10207:7:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10227:5:2",
														"subExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1643,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "10227:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "10227:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1646,
													"nodeType": "ExpressionStatement",
													"src": "10227:5:2"
												},
												"nodeType": "ForStatement",
												"src": "10202:963:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1828,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "11278:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ck",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 516,
														"src": "11278:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1832,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "11302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															],
															"id": 1831,
															"name": "Keccak256OfArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "11285:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256[] memory) pure returns (uint256)"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11285:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11278:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "11278:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1836,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "11370:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1837,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "11381:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "11381:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1839,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1557,
																		"src": "11389:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1841,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11399:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11389:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11381:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1843,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11380:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11370:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "11370:32:2"
											}
										]
									},
									"documentation": null,
									"id": 1847,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifyMSAG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"name": "m",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "9691:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9691:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "9702:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9702:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "9719:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9719:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9719:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "9732:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9732:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9732:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9690:62:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "9787:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9787:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9786:14:2"
									},
									"scope": 2435,
									"src": "9671:1739:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "11980:383:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1866,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 1936,
														"src": "11991:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1864,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11991:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1865,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11999:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "11991:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1867,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "11991:22:2"
											},
											{
												"assignments": [
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1871,
														"name": "P_uncomp",
														"nodeType": "VariableDeclaration",
														"scope": 1936,
														"src": "12024:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1869,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12024:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1870,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "12024:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1880,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1875,
																	"name": "P",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "12066:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12066:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12075:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "12066:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12052:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12056:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1873,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "12056:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12052:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12024:53:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1882,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 1936,
														"src": "12098:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12098:9:2"
											},
											{
												"body": {
													"id": 1926,
													"nodeType": "Block",
													"src": "12149:136:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1895,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "12164:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1898,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1854,
																				"src": "12190:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1900,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1899,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1882,
																				"src": "12192:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12190:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1896,
																			"name": "ecMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "12171:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ECMath_$413",
																				"typeString": "contract ECMath"
																			}
																		},
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "ExpandPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 367,
																		"src": "12171:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256) view external returns (uint256[2] memory)"
																		}
																	},
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12171:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "12164:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 1903,
															"nodeType": "ExpressionStatement",
															"src": "12164:31:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1904,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "12210:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1908,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12219:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1906,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "12221:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12219:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12210:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1909,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "12226:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1911,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12231:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12226:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12210:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "12210:23:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1914,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "12248:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1920,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 1915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12257:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1916,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1882,
																				"src": "12259:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12257:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12261:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12257:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12248:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1921,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "12266:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 1923,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12271:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12266:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12248:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1925,
															"nodeType": "ExpressionStatement",
															"src": "12248:25:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1888,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "12130:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1889,
															"name": "P",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "12134:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12134:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12130:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1927,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1884,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "12123:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12127:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12123:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1887,
													"nodeType": "ExpressionStatement",
													"src": "12123:5:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12144:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 1892,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "12144:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1894,
													"nodeType": "ExpressionStatement",
													"src": "12144:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12118:167:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1929,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "12323:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1930,
															"name": "msgHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "12326:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1931,
															"name": "P_uncomp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "12335:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1932,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "12345:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1928,
														"name": "VerifyMSAG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "12312:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256[] memory,uint256[] memory) view returns (bool)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12312:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1861,
												"id": 1934,
												"nodeType": "Return",
												"src": "12305:50:2"
											}
										]
									},
									"documentation": null,
									"id": 1936,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifyMSAG_Compressed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"name": "m",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11865:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11865:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11893:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1852,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11893:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1853,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "11893:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11906:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1855,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11906:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1856,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "11906:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11864:62:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "11961:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11961:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11960:14:2"
									},
									"scope": 2435,
									"src": "11834:529:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "12999:1870:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 2287,
														"src": "13047:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
															"typeString": "struct MLSAGVerify.Variables"
														},
														"typeName": {
															"contractScope": null,
															"id": 1952,
															"name": "Variables",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 531,
															"src": "13047:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_storage_ptr",
																"typeString": "struct MLSAGVerify.Variables"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1954,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "13047:18:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1955,
																"name": "I",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "13079:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13079:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13090:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "13079:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13095:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13079:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1963,
												"nodeType": "IfStatement",
												"src": "13076:34:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13105:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1951,
													"id": 1962,
													"nodeType": "Return",
													"src": "13098:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1964,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "13121:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1966,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "m",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "13121:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1967,
																		"name": "I",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "13128:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13128:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13139:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13128:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13127:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13121:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "13121:20:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1974,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "13156:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13156:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13168:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1977,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "13170:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "m",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "13170:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1980,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13167:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13156:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13178:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13156:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "13152:41:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13188:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1951,
													"id": 1985,
													"nodeType": "Return",
													"src": "13181:12:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1987,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "13214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "n",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "13214:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1990,
																"name": "P",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "13220:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13220:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13232:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1993,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "13234:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "m",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "13234:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13232:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1996,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13220:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13214:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "13214:24:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2000,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "13253:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13253:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2002,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "13274:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "m",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "13274:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2004,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "13278:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "n",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 510,
																		"src": "13278:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13274:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13282:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13274:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2009,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13273:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13253:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2013,
												"nodeType": "IfStatement",
												"src": "13249:49:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13293:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1951,
													"id": 2012,
													"nodeType": "Return",
													"src": "13286:12:2"
												}
											},
											{
												"assignments": [
													2017
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2287,
														"src": "13364:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2015,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13364:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2016,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "13364:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "34",
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13399:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2022,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "13401:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "m",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 508,
																	"src": "13401:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13399:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13405:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13399:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13385:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2018,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13389:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2019,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "13389:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13385:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13364:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2029,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "13418:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2031,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13420:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13418:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2032,
														"name": "msgHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "13425:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13418:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "13418:14:2"
											},
											{
												"body": {
													"id": 2266,
													"nodeType": "Block",
													"src": "13485:1111:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2050,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "13500:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "13500:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2053,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "13507:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2055,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13517:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13507:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13500:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2057,
															"nodeType": "ExpressionStatement",
															"src": "13500:19:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2058,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "13554:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "keyImage",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "13554:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2061,
																				"name": "I",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "13568:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2066,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13570:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2063,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "13572:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 2064,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "13572:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13570:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13568:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2067,
																				"name": "I",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "13578:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2074,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 2068,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13580:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2069,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "13582:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2070,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "i",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 512,
																						"src": "13582:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13580:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2072,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13586:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "13580:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13578:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2075,
																	"isConstant": false,
																	"isInlineArray": true,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13567:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "13554:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 2077,
															"nodeType": "ExpressionStatement",
															"src": "13554:35:2"
														},
														{
															"body": {
																"id": 2149,
																"nodeType": "Block",
																"src": "13738:252:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2096,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "13757:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "index",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 518,
																				"src": "13757:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2099,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "13767:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2100,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "m",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 508,
																						"src": "13767:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2101,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "13771:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2102,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "j",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 514,
																						"src": "13771:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13767:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2104,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "13777:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 2105,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "i",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "13777:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13767:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13757:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2108,
																		"nodeType": "ExpressionStatement",
																		"src": "13757:23:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2109,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "13799:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 2111,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "point1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "13799:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 2112,
																							"name": "P",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1944,
																							"src": "13811:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2117,
																						"indexExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2116,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "32",
																								"id": 2113,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13813:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 2114,
																									"name": "v",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1953,
																									"src": "13815:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																										"typeString": "struct MLSAGVerify.Variables memory"
																									}
																								},
																								"id": 2115,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "index",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 518,
																								"src": "13815:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "13813:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13811:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 2118,
																							"name": "P",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1944,
																							"src": "13825:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2125,
																						"indexExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "32",
																									"id": 2119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13827:1:2",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 2120,
																										"name": "v",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1953,
																										"src": "13829:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																											"typeString": "struct MLSAGVerify.Variables memory"
																										}
																									},
																									"id": 2121,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "index",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 518,
																									"src": "13829:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13827:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "31",
																								"id": 2123,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13837:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "13827:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13825:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2126,
																				"isConstant": false,
																				"isInlineArray": true,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13810:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																					"typeString": "uint256[2] memory"
																				}
																			},
																			"src": "13799:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 2128,
																		"nodeType": "ExpressionStatement",
																		"src": "13799:41:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2129,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "13880:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 2131,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "ck",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 516,
																				"src": "13880:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2133,
																						"name": "msgHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1938,
																						"src": "13916:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2134,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "13925:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2135,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "ck",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 516,
																						"src": "13925:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 2136,
																							"name": "signature",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1947,
																							"src": "13931:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2141,
																						"indexExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2140,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 2137,
																									"name": "v",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1953,
																									"src": "13941:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																										"typeString": "struct MLSAGVerify.Variables memory"
																									}
																								},
																								"id": 2138,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "index",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 518,
																								"src": "13941:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "31",
																								"id": 2139,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13949:1:2",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "13941:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13931:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2142,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "13953:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2143,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "point1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 522,
																						"src": "13953:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$2_memory",
																							"typeString": "uint256[2] memory"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2144,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "13963:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2145,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "keyImage",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 530,
																						"src": "13963:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$2_memory",
																							"typeString": "uint256[2] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_array$_t_uint256_$2_memory",
																							"typeString": "uint256[2] memory"
																						},
																						{
																							"typeIdentifier": "t_array$_t_uint256_$2_memory",
																							"typeString": "uint256[2] memory"
																						}
																					],
																					"id": 2132,
																					"name": "CalculateLinkableRingSegment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "13887:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256,uint256[2] memory,uint256[2] memory) view returns (uint256)"
																					}
																				},
																				"id": 2146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13887:87:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13880:94:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2148,
																		"nodeType": "ExpressionStatement",
																		"src": "13880:94:2"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2084,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "13716:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "j",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "13716:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2086,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "13723:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																						"typeString": "struct MLSAGVerify.Variables memory"
																					}
																				},
																				"id": 2087,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "n",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 510,
																				"src": "13723:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13727:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "13723:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2090,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13722:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13716:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2150,
															"initializationExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2078,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "13707:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2080,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "j",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "13707:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13713:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13707:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2083,
																"nodeType": "ExpressionStatement",
																"src": "13707:7:2"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "13731:5:2",
																	"subExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2092,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "13731:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "j",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 514,
																		"src": "13731:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2095,
																"nodeType": "ExpressionStatement",
																"src": "13731:5:2"
															},
															"nodeType": "ForStatement",
															"src": "13702:288:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2151,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "14104:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "index",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "14104:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2154,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14114:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "m",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 508,
																			"src": "14114:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2156,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "14119:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2157,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "n",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 510,
																						"src": "14119:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 2158,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14123:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "14119:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2160,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "14118:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14114:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2162,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "14128:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "i",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 512,
																		"src": "14128:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14114:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14104:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2166,
															"nodeType": "ExpressionStatement",
															"src": "14104:27:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2167,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "14146:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "point1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 522,
																	"src": "14146:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2170,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1944,
																				"src": "14158:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2175,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14160:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2172,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "14162:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 2173,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "index",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 518,
																					"src": "14162:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14160:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14158:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2176,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1944,
																				"src": "14172:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2183,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2180,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 2177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14174:1:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2178,
																							"name": "v",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1953,
																							"src": "14176:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																								"typeString": "struct MLSAGVerify.Variables memory"
																							}
																						},
																						"id": 2179,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "index",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 518,
																						"src": "14176:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14174:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14184:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "14174:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14172:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2184,
																	"isConstant": false,
																	"isInlineArray": true,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14157:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "14146:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 2186,
															"nodeType": "ExpressionStatement",
															"src": "14146:41:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2187,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14224:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "point1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 522,
																			"src": "14224:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2190,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14234:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "point2",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 526,
																			"src": "14234:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		}
																	],
																	"id": 2192,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "14223:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_$_t_array$_t_uint256_$2_memory_$",
																		"typeString": "tuple(uint256[2] memory,uint256[2] memory)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2194,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14282:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "ck",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 516,
																			"src": "14282:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2196,
																				"name": "signature",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "14288:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2201,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2197,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "14298:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																							"typeString": "struct MLSAGVerify.Variables memory"
																						}
																					},
																					"id": 2198,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "index",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 518,
																					"src": "14298:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2199,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14306:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "14298:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14288:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2202,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14310:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "point1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 522,
																			"src": "14310:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2204,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14320:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "keyImage",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 530,
																			"src": "14320:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory",
																				"typeString": "uint256[2] memory"
																			}
																		],
																		"id": 2193,
																		"name": "CalculateLinkableRingSegment_NoHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "14246:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256,uint256,uint256[2] memory,uint256[2] memory) view returns (uint256[2] memory,uint256[2] memory)"
																		}
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14246:85:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$",
																		"typeString": "tuple(uint256[2] memory,uint256[2] memory)"
																	}
																},
																"src": "14223:108:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2208,
															"nodeType": "ExpressionStatement",
															"src": "14223:108:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2209,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "14405:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "index",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "14405:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2212,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14415:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2213,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "i",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 512,
																			"src": "14415:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14419:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14415:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14421:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "14415:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14405:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2219,
															"nodeType": "ExpressionStatement",
															"src": "14405:17:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2220,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "14437:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2223,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2221,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "14439:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "index",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "14439:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14437:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2224,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "14450:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "point1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 522,
																		"src": "14450:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2227,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14459:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14450:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14437:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "14437:24:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2230,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "14476:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2235,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2231,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14478:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2232,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "index",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 518,
																			"src": "14478:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14486:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14478:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14476:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2236,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "14491:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "point1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 522,
																		"src": "14491:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2239,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14500:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14491:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14476:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2241,
															"nodeType": "ExpressionStatement",
															"src": "14476:26:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2242,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "14517:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2247,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2243,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14519:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "index",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 518,
																			"src": "14519:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 2245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14527:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14519:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14517:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2248,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "14532:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "point2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 526,
																		"src": "14532:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2251,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14541:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14532:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14517:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2253,
															"nodeType": "ExpressionStatement",
															"src": "14517:26:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2254,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "14558:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2259,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2255,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "14560:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																					"typeString": "struct MLSAGVerify.Variables memory"
																				}
																			},
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "index",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 518,
																			"src": "14560:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "14560:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14558:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2260,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "14573:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																				"typeString": "struct MLSAGVerify.Variables memory"
																			}
																		},
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "point2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 526,
																		"src": "14573:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2263,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14582:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14573:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14558:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2265,
															"nodeType": "ExpressionStatement",
															"src": "14558:26:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2041,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "13467:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "i",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "13467:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2043,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "13473:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "m",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "13473:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13467:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2267,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2035,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "13458:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "13458:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13464:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13458:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2040,
													"nodeType": "ExpressionStatement",
													"src": "13458:7:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13478:5:2",
														"subExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2046,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "13478:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																	"typeString": "struct MLSAGVerify.Variables memory"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "i",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "13478:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2049,
													"nodeType": "ExpressionStatement",
													"src": "13478:5:2"
												},
												"nodeType": "ForStatement",
												"src": "13453:1143:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2268,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "14737:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																"typeString": "struct MLSAGVerify.Variables memory"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ck",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 516,
														"src": "14737:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2272,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "14761:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															],
															"id": 2271,
															"name": "Keccak256OfArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "14744:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256[] memory) pure returns (uint256)"
															}
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14744:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14737:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "14737:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2276,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "14829:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2277,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "14840:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Variables_$531_memory_ptr",
																			"typeString": "struct MLSAGVerify.Variables memory"
																		}
																	},
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ck",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "14840:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2279,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "14848:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2281,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14858:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14840:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2283,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14839:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14829:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "14829:32:2"
											}
										]
									},
									"documentation": null,
									"id": 2287,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifyMLSAG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "12882:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "12899:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1939,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12899:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1940,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12899:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "12912:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1942,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "12925:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1945,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1946,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12925:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12881:64:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "12980:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12980:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12979:14:2"
									},
									"scope": 2435,
									"src": "12861:2008:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "15421:642:2",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 2307,
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 2434,
														"src": "15432:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 2305,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15432:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2306,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15440:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "15432:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "15432:22:2"
											},
											{
												"assignments": [
													2312
												],
												"declarations": [
													{
														"constant": false,
														"id": 2312,
														"name": "P_uncomp",
														"nodeType": "VariableDeclaration",
														"scope": 2434,
														"src": "15465:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2310,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2311,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "15465:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2321,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2316,
																	"name": "P",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "15507:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15507:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15516:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "15507:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15493:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2313,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15497:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2314,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "15497:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15493:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15465:53:2"
											},
											{
												"assignments": [
													2325
												],
												"declarations": [
													{
														"constant": false,
														"id": 2325,
														"name": "I_uncomp",
														"nodeType": "VariableDeclaration",
														"scope": 2434,
														"src": "15529:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15529:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2324,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "15529:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2334,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2329,
																	"name": "I",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "15571:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15571:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15580:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "15571:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15557:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2326,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15561:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2327,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "15561:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15557:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15529:53:2"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 2336,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 2434,
														"src": "15603:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15603:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2337,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "15603:9:2"
											},
											{
												"body": {
													"id": 2380,
													"nodeType": "Block",
													"src": "15654:136:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2349,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "15669:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2352,
																				"name": "P",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "15695:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2354,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2353,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2336,
																				"src": "15697:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15695:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2350,
																			"name": "ecMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "15676:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ECMath_$413",
																				"typeString": "contract ECMath"
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "ExpandPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 367,
																		"src": "15676:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256) view external returns (uint256[2] memory)"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15676:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "15669:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 2357,
															"nodeType": "ExpressionStatement",
															"src": "15669:31:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2358,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "15715:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2362,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15724:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2360,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2336,
																			"src": "15726:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15724:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15715:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2363,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "15731:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2365,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15736:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15731:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15715:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2367,
															"nodeType": "ExpressionStatement",
															"src": "15715:23:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2368,
																		"name": "P_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "15753:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2374,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15762:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2370,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2336,
																				"src": "15764:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15762:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15766:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15762:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15753:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2375,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "15771:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2377,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15776:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15771:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15753:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2379,
															"nodeType": "ExpressionStatement",
															"src": "15753:25:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2342,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "15635:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2343,
															"name": "P",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "15639:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15639:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15635:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2381,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 2338,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "15628:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15632:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15628:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2341,
													"nodeType": "ExpressionStatement",
													"src": "15628:5:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15649:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 2346,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "15649:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2348,
													"nodeType": "ExpressionStatement",
													"src": "15649:3:2"
												},
												"nodeType": "ForStatement",
												"src": "15623:167:2"
											},
											{
												"body": {
													"id": 2424,
													"nodeType": "Block",
													"src": "15841:136:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2393,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "15856:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2396,
																				"name": "I",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2292,
																				"src": "15882:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2398,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2397,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2336,
																				"src": "15884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15882:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2394,
																			"name": "ecMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "15863:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ECMath_$413",
																				"typeString": "contract ECMath"
																			}
																		},
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "ExpandPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 367,
																		"src": "15863:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (uint256) view external returns (uint256[2] memory)"
																		}
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15863:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "15856:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 2401,
															"nodeType": "ExpressionStatement",
															"src": "15856:31:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2402,
																		"name": "I_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "15902:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2406,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15911:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2404,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2336,
																			"src": "15913:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15911:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15902:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2407,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "15918:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2409,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15923:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15918:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15902:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2411,
															"nodeType": "ExpressionStatement",
															"src": "15902:23:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2412,
																		"name": "I_uncomp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "15940:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2418,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 2413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15949:1:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2414,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2336,
																				"src": "15951:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15949:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15953:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15949:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15940:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2419,
																		"name": "temp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "15958:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 2421,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15963:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15958:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15940:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2423,
															"nodeType": "ExpressionStatement",
															"src": "15940:25:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2386,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "15822:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2387,
															"name": "I",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "15826:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15826:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15822:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2425,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 2382,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "15815:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15819:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15815:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2385,
													"nodeType": "ExpressionStatement",
													"src": "15815:5:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15836:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 2390,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "15836:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2392,
													"nodeType": "ExpressionStatement",
													"src": "15836:3:2"
												},
												"nodeType": "ForStatement",
												"src": "15810:167:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2427,
															"name": "msgHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "16016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2428,
															"name": "I_uncomp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "16025:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2429,
															"name": "P_uncomp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "16035:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2430,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "16045:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2426,
														"name": "VerifyMLSAG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2287,
														"src": "16004:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256[] memory,uint256[] memory,uint256[] memory) view returns (bool)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16004:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2302,
												"id": 2432,
												"nodeType": "Return",
												"src": "15997:58:2"
											}
										]
									},
									"documentation": null,
									"id": 2434,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "VerifyMLSAG_Compressed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"name": "msgHash",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "15304:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15304:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"name": "I",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "15321:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15321:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2291,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "15321:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"name": "P",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "15334:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2293,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15334:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2294,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "15334:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "15347:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2296,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15347:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2297,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "15347:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15303:64:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "15402:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15402:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15401:14:2"
									},
									"scope": 2435,
									"src": "15272:791:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 2436,
							"src": "91:15975:2"
						}
					],
					"src": "0:16070:2"
				},
				"id": 2
			}
		}
	}
}